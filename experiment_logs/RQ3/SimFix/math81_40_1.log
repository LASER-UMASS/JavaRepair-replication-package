java version "1.7.0_231"
OpenJDK Runtime Environment (rhel-2.6.19.1.el7_6-x86_64 u231-b01)
OpenJDK 64-Bit Server VM (build 24.231-b01, mixed mode)
Check out 7d903ca5 to /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/ OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff 7d903ca5:6e3ea685..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Math-81b........................................ OK
Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK
Failing tests: 1
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1
PURIFY IS TRUE
=================================================
Project : math_81	start : 19/10/17 18:43

readFailedTest: path is /mnt/nfs/work1/brun/mmotwani/SimFix/d4j-info/failed_tests/math/81.txtTESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
IN COMMENT TEST CASE: org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308

# FAILING TESTS: 1
TIMEOUT : 18000000
===========
locations= [<org.apache.commons.math.linear.MatrixUtils,106>, <org.apache.commons.math.linear.Array2DRowRealMatrix,94>, <org.apache.commons.math.linear.Array2DRowRealMatrix,95>, <org.apache.commons.math.linear.Array2DRowRealMatrix,96>, <org.apache.commons.math.linear.Array2DRowRealMatrix,314>, <org.apache.commons.math.linear.Array2DRowRealMatrix,315>, <org.apache.commons.math.linear.Array2DRowRealMatrix,320>, <org.apache.commons.math.linear.Array2DRowRealMatrix,325>, <org.apache.commons.math.linear.Array2DRowRealMatrix,326>, <org.apache.commons.math.linear.Array2DRowRealMatrix,330>, <org.apache.commons.math.linear.Array2DRowRealMatrix,331>, <org.apache.commons.math.linear.Array2DRowRealMatrix,334>, <org.apache.commons.math.linear.Array2DRowRealMatrix,335>, <org.apache.commons.math.linear.Array2DRowRealMatrix,336>, <org.apache.commons.math.linear.Array2DRowRealMatrix,341>, <org.apache.commons.math.linear.Array2DRowRealMatrix,343>, <org.apache.commons.math.linear.Array2DRowRealMatrix,347>, <org.apache.commons.math.linear.Array2DRowRealMatrix,622>, <org.apache.commons.math.linear.Array2DRowRealMatrix,623>, <org.apache.commons.math.linear.EigenDecompositionImpl,1084>, <org.apache.commons.math.linear.EigenDecompositionImpl,1093>, <org.apache.commons.math.linear.EigenDecompositionImpl,1095>, <org.apache.commons.math.linear.EigenDecompositionImpl,1098>, <org.apache.commons.math.linear.EigenDecompositionImpl,1100>, <org.apache.commons.math.linear.EigenDecompositionImpl,1101>, <org.apache.commons.math.linear.EigenDecompositionImpl,1474>, <org.apache.commons.math.linear.EigenDecompositionImpl,1475>, <org.apache.commons.math.linear.EigenDecompositionImpl,1478>, <org.apache.commons.math.linear.EigenDecompositionImpl,1479>, <org.apache.commons.math.linear.EigenDecompositionImpl,1480>, <org.apache.commons.math.linear.EigenDecompositionImpl,1481>, <org.apache.commons.math.linear.EigenDecompositionImpl,1484>, <org.apache.commons.math.linear.EigenDecompositionImpl,1485>, <org.apache.commons.math.linear.EigenDecompositionImpl,1502>, <org.apache.commons.math.linear.EigenDecompositionImpl,1503>, <org.apache.commons.math.linear.EigenDecompositionImpl,1504>, <org.apache.commons.math.linear.EigenDecompositionImpl,1507>, <org.apache.commons.math.linear.EigenDecompositionImpl,1508>, <org.apache.commons.math.linear.EigenDecompositionImpl,1509>, <org.apache.commons.math.linear.EigenDecompositionImpl,1511>, <org.apache.commons.math.linear.EigenDecompositionImpl,1512>, <org.apache.commons.math.linear.EigenDecompositionImpl,1513>, <org.apache.commons.math.linear.EigenDecompositionImpl,1517>, <org.apache.commons.math.linear.EigenDecompositionImpl,1520>, <org.apache.commons.math.linear.EigenDecompositionImpl,1521>, <org.apache.commons.math.linear.EigenDecompositionImpl,1523>, <org.apache.commons.math.linear.EigenDecompositionImpl,1529>, <org.apache.commons.math.linear.EigenDecompositionImpl,1530>, <org.apache.commons.math.linear.EigenDecompositionImpl,1533>, <org.apache.commons.math.linear.EigenDecompositionImpl,1534>, <org.apache.commons.math.linear.EigenDecompositionImpl,1535>, <org.apache.commons.math.linear.EigenDecompositionImpl,1536>, <org.apache.commons.math.linear.EigenDecompositionImpl,1537>, <org.apache.commons.math.linear.EigenDecompositionImpl,1540>, <org.apache.commons.math.linear.EigenDecompositionImpl,1543>, <org.apache.commons.math.linear.EigenDecompositionImpl,1544>, <org.apache.commons.math.linear.EigenDecompositionImpl,1586>, <org.apache.commons.math.linear.EigenDecompositionImpl,1621>, <org.apache.commons.math.linear.EigenDecompositionImpl,1622>, <org.apache.commons.math.linear.EigenDecompositionImpl,1625>, <org.apache.commons.math.linear.EigenDecompositionImpl,1627>, <org.apache.commons.math.linear.ArrayRealVector,77>, <org.apache.commons.math.linear.ArrayRealVector,78>, <org.apache.commons.math.linear.ArrayRealVector,79>, <org.apache.commons.math.linear.MatrixUtils,650>, <org.apache.commons.math.linear.MatrixUtils,656>, <org.apache.commons.math.linear.AbstractRealMatrix,43>, <org.apache.commons.math.linear.AbstractRealMatrix,44>, <org.apache.commons.math.linear.AbstractRealMatrix,45>, <org.apache.commons.math.linear.AbstractRealMatrix,55>, <org.apache.commons.math.linear.AbstractRealMatrix,56>, <org.apache.commons.math.linear.AbstractRealMatrix,61>, <org.apache.commons.math.linear.AbstractRealMatrix,66>, <org.apache.commons.math.linear.AbstractRealMatrix,67>, <org.apache.commons.math.linear.AbstractRealMatrix,603>, <org.apache.commons.math.linear.AbstractRealMatrix,604>, <org.apache.commons.math.linear.AbstractRealMatrix,605>, <org.apache.commons.math.linear.AbstractRealMatrix,606>, <org.apache.commons.math.linear.AbstractRealMatrix,616>, <org.apache.commons.math.linear.AbstractRealMatrix,919>, <org.apache.commons.math.linear.Array2DRowRealMatrix,76>, <org.apache.commons.math.linear.Array2DRowRealMatrix,77>, <org.apache.commons.math.linear.Array2DRowRealMatrix,78>, <org.apache.commons.math.linear.Array2DRowRealMatrix,114>, <org.apache.commons.math.linear.Array2DRowRealMatrix,115>, <org.apache.commons.math.linear.Array2DRowRealMatrix,118>, <org.apache.commons.math.linear.Array2DRowRealMatrix,121>, <org.apache.commons.math.linear.Array2DRowRealMatrix,122>, <org.apache.commons.math.linear.Array2DRowRealMatrix,125>, <org.apache.commons.math.linear.Array2DRowRealMatrix,126>, <org.apache.commons.math.linear.Array2DRowRealMatrix,129>, <org.apache.commons.math.linear.Array2DRowRealMatrix,130>, <org.apache.commons.math.linear.Array2DRowRealMatrix,136>, <org.apache.commons.math.linear.Array2DRowRealMatrix,138>, <org.apache.commons.math.linear.Array2DRowRealMatrix,160>, <org.apache.commons.math.linear.Array2DRowRealMatrix,254>, <org.apache.commons.math.linear.Array2DRowRealMatrix,271>, <org.apache.commons.math.linear.Array2DRowRealMatrix,273>, <org.apache.commons.math.linear.Array2DRowRealMatrix,274>, <org.apache.commons.math.linear.Array2DRowRealMatrix,275>, <org.apache.commons.math.linear.Array2DRowRealMatrix,276>, <org.apache.commons.math.linear.Array2DRowRealMatrix,277>, <org.apache.commons.math.linear.Array2DRowRealMatrix,278>, <org.apache.commons.math.linear.Array2DRowRealMatrix,279>, <org.apache.commons.math.linear.Array2DRowRealMatrix,280>, <org.apache.commons.math.linear.Array2DRowRealMatrix,281>, <org.apache.commons.math.linear.Array2DRowRealMatrix,282>, <org.apache.commons.math.linear.Array2DRowRealMatrix,283>, <org.apache.commons.math.linear.Array2DRowRealMatrix,285>, <org.apache.commons.math.linear.Array2DRowRealMatrix,289>, <org.apache.commons.math.linear.Array2DRowRealMatrix,367>, <org.apache.commons.math.linear.Array2DRowRealMatrix,372>, <org.apache.commons.math.linear.Array2DRowRealMatrix,373>, <org.apache.commons.math.linear.Array2DRowRealMatrix,404>, <org.apache.commons.math.linear.Array2DRowRealMatrix,410>, <org.apache.commons.math.linear.Array2DRowRealMatrix,482>, <org.apache.commons.math.linear.Array2DRowRealMatrix,483>, <org.apache.commons.math.linear.Array2DRowRealMatrix,484>, <org.apache.commons.math.linear.Array2DRowRealMatrix,485>, <org.apache.commons.math.linear.Array2DRowRealMatrix,486>, <org.apache.commons.math.linear.Array2DRowRealMatrix,487>, <org.apache.commons.math.linear.Array2DRowRealMatrix,488>, <org.apache.commons.math.linear.Array2DRowRealMatrix,491>, <org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor,30>, <org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor,35>, <org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor,44>, <org.apache.commons.math.linear.AbstractRealMatrix,611>, <org.apache.commons.math.linear.AbstractRealMatrix,612>, <org.apache.commons.math.linear.EigenDecompositionImpl,191>, <org.apache.commons.math.linear.EigenDecompositionImpl,193>, <org.apache.commons.math.linear.EigenDecompositionImpl,194>, <org.apache.commons.math.linear.EigenDecompositionImpl,195>, <org.apache.commons.math.linear.EigenDecompositionImpl,198>, <org.apache.commons.math.linear.EigenDecompositionImpl,199>, <org.apache.commons.math.linear.EigenDecompositionImpl,200>, <org.apache.commons.math.linear.EigenDecompositionImpl,201>, <org.apache.commons.math.linear.EigenDecompositionImpl,204>, <org.apache.commons.math.linear.EigenDecompositionImpl,205>, <org.apache.commons.math.linear.EigenDecompositionImpl,237>, <org.apache.commons.math.linear.EigenDecompositionImpl,238>, <org.apache.commons.math.linear.EigenDecompositionImpl,239>, <org.apache.commons.math.linear.EigenDecompositionImpl,240>, <org.apache.commons.math.linear.EigenDecompositionImpl,243>, <org.apache.commons.math.linear.EigenDecompositionImpl,246>, <org.apache.commons.math.linear.EigenDecompositionImpl,571>, <org.apache.commons.math.linear.EigenDecompositionImpl,572>, <org.apache.commons.math.linear.EigenDecompositionImpl,573>, <org.apache.commons.math.linear.EigenDecompositionImpl,574>, <org.apache.commons.math.linear.EigenDecompositionImpl,575>, <org.apache.commons.math.linear.EigenDecompositionImpl,576>, <org.apache.commons.math.linear.EigenDecompositionImpl,578>, <org.apache.commons.math.linear.EigenDecompositionImpl,579>, <org.apache.commons.math.linear.EigenDecompositionImpl,581>, <org.apache.commons.math.linear.EigenDecompositionImpl,582>, <org.apache.commons.math.linear.EigenDecompositionImpl,583>, <org.apache.commons.math.linear.EigenDecompositionImpl,584>, <org.apache.commons.math.linear.EigenDecompositionImpl,585>, <org.apache.commons.math.linear.EigenDecompositionImpl,587>, <org.apache.commons.math.linear.EigenDecompositionImpl,588>, <org.apache.commons.math.linear.EigenDecompositionImpl,589>, <org.apache.commons.math.linear.EigenDecompositionImpl,591>, <org.apache.commons.math.linear.EigenDecompositionImpl,592>, <org.apache.commons.math.linear.EigenDecompositionImpl,593>, <org.apache.commons.math.linear.EigenDecompositionImpl,597>, <org.apache.commons.math.linear.EigenDecompositionImpl,598>, <org.apache.commons.math.linear.EigenDecompositionImpl,599>, <org.apache.commons.math.linear.EigenDecompositionImpl,600>, <org.apache.commons.math.linear.EigenDecompositionImpl,601>, <org.apache.commons.math.linear.EigenDecompositionImpl,602>, <org.apache.commons.math.linear.EigenDecompositionImpl,603>, <org.apache.commons.math.linear.EigenDecompositionImpl,605>, <org.apache.commons.math.linear.EigenDecompositionImpl,615>, <org.apache.commons.math.linear.EigenDecompositionImpl,618>, <org.apache.commons.math.linear.EigenDecompositionImpl,619>, <org.apache.commons.math.linear.EigenDecompositionImpl,620>, <org.apache.commons.math.linear.EigenDecompositionImpl,621>, <org.apache.commons.math.linear.EigenDecompositionImpl,622>, <org.apache.commons.math.linear.EigenDecompositionImpl,623>, <org.apache.commons.math.linear.EigenDecompositionImpl,643>, <org.apache.commons.math.linear.EigenDecompositionImpl,644>, <org.apache.commons.math.linear.EigenDecompositionImpl,645>, <org.apache.commons.math.linear.EigenDecompositionImpl,646>, <org.apache.commons.math.linear.EigenDecompositionImpl,647>, <org.apache.commons.math.linear.EigenDecompositionImpl,648>, <org.apache.commons.math.linear.EigenDecompositionImpl,649>, <org.apache.commons.math.linear.EigenDecompositionImpl,651>, <org.apache.commons.math.linear.EigenDecompositionImpl,654>, <org.apache.commons.math.linear.EigenDecompositionImpl,657>, <org.apache.commons.math.linear.EigenDecompositionImpl,692>, <org.apache.commons.math.linear.EigenDecompositionImpl,695>, <org.apache.commons.math.linear.EigenDecompositionImpl,696>, <org.apache.commons.math.linear.EigenDecompositionImpl,697>, <org.apache.commons.math.linear.EigenDecompositionImpl,698>, <org.apache.commons.math.linear.EigenDecompositionImpl,699>, <org.apache.commons.math.linear.EigenDecompositionImpl,700>, <org.apache.commons.math.linear.EigenDecompositionImpl,707>, <org.apache.commons.math.linear.EigenDecompositionImpl,708>, <org.apache.commons.math.linear.EigenDecompositionImpl,826>, <org.apache.commons.math.linear.EigenDecompositionImpl,827>, <org.apache.commons.math.linear.EigenDecompositionImpl,828>]
======================org.apache.commons.math.linear.MatrixUtils,106
========
return (data*data[0].length<=4096)?new Array2DRowRealMatrix(data):new BlockRealMatrix(data);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return (data.length*data[0].length<=0)?new Array2DRowRealMatrix(data):new BlockRealMatrix(data);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math.linear.Array2DRowRealMatrix,94
Find no block!
org.apache.commons.math.linear.Array2DRowRealMatrix,95
========
super(extractField(d));
copyIn(d);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.Array2DRowRealMatrix,96
Find no block!
org.apache.commons.math.linear.Array2DRowRealMatrix,314
UNKNOWN ASTNode type : catch (ArrayIndexOutOfBoundsException e) {
  throw new MatrixIndexException("no entry at indices ({0}, {1}) in a {2}x{3} matrix",row,column,getRowDimension(),getColumnDimension());
}

UNKNOWN ASTNode type : catch (ArrayIndexOutOfBoundsException e) {
  throw new MatrixIndexException("no entry at indices ({0}, {1}) in a {2}x{3} matrix",row,column,getRowDimension(),getColumnDimension());
}

UNKNOWN ASTNode type : catch (ArrayIndexOutOfBoundsException e) {
  throw new MatrixIndexException("no entry at indices ({0}, {1}) in a {2}x{3} matrix",row,column,getRowDimension(),getColumnDimension());
}

UNKNOWN ASTNode type : catch (ArrayIndexOutOfBoundsException e) {
  throw new MatrixIndexException("no entry at indices ({0}, {1}) in a {2}x{3} matrix",row,column,getRowDimension(),getColumnDimension());
}

UNKNOWN ASTNode type : catch (ArrayIndexOutOfBoundsException e) {
  throw new MatrixIndexException("no entry at indices ({0}, {1}) in a {2}x{3} matrix",row,column,getRowDimension(),getColumnDimension());
}

UNKNOWN ASTNode type : catch (ArrayIndexOutOfBoundsException e) {
  throw new MatrixIndexException("no entry at indices ({0}, {1}) in a {2}x{3} matrix",row,column,getRowDimension(),getColumnDimension());
}

UNKNOWN ASTNode type : catch (ArrayIndexOutOfBoundsException e) {
  throw new MatrixIndexException("no entry at indices ({0}, {1}) in a {2}x{3} matrix",row,column,getRowDimension(),getColumnDimension());
}

UNKNOWN ASTNode type : catch (ArrayIndexOutOfBoundsException e) {
  throw new MatrixIndexException("no entry at indices ({0}, {1}) in a {2}x{3} matrix",row,column,getRowDimension(),getColumnDimension());
}

========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",row);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",row);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(row>0){
throw MathRuntimeException.createIllegalStateException("{0} values have been added before statistic is configured",serialVersionUID);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(omegaCount>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(row>0){
throw MathRuntimeException.createIllegalStateException("roots of unity have not been computed yet");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(row>0){
throw new MatrixIndexException("row index {0} out of allowed range [{1}, {2}]",row,0,getRowDimension()-1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(value>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkRowIndex(row);
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(row>getColumnDimension()){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(row>0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,getColumnDimension());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkRowIndex(row);
if(row>getColumnDimension()){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,row);
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length>getColumnDimension()){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,getColumnDimension());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,row);
if(length>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(row>getColumnDimension()){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,getColumnDimension());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,row);
if(row>getColumnDimension()){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkRowIndex(this,row);
if(row>0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,getColumnDimension());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>getColumnDimension()){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,getColumnDimension());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,row);
if(length>getColumnDimension()){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,row);
if(length>0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,getColumnDimension());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,row);
if(row>getColumnDimension()){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,getColumnDimension());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,row);
if(length>getColumnDimension()){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,getColumnDimension());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(row>0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",row,subRow.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",row,subRow.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkColumnIndex(column);
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,column);
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkRowIndex(this,row);
MatrixUtils.checkColumnIndex(this,column);
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>0){
throw MathRuntimeException.createIllegalStateException("{0} values have been added before statistic is configured",serialVersionUID);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(omegaCount>0){
throw MathRuntimeException.createIllegalStateException("roots of unity have not been computed yet");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (ArrayIndexOutOfBoundsException e) {
  throw new MatrixIndexException("no entry at indices ({0}, {1}) in a {2}x{3} matrix",row,column,getRowDimension(),getColumnDimension());
}

UNKNOWN ASTNode type : catch (ArrayIndexOutOfBoundsException e) {
  throw new MatrixIndexException("no entry at indices ({0}, {1}) in a {2}x{3} matrix",row,column,getRowDimension(),getColumnDimension());
}

UNKNOWN ASTNode type : catch (ArrayIndexOutOfBoundsException e) {
  throw new MatrixIndexException("no entry at indices ({0}, {1}) in a {2}x{3} matrix",row,column,getRowDimension(),getColumnDimension());
}

UNKNOWN ASTNode type : catch (ArrayIndexOutOfBoundsException e) {
  throw new MatrixIndexException("no entry at indices ({0}, {1}) in a {2}x{3} matrix",row,column,getRowDimension(),getColumnDimension());
}

UNKNOWN ASTNode type : catch (ArrayIndexOutOfBoundsException e) {
  throw new MatrixIndexException("no entry at indices ({0}, {1}) in a {2}x{3} matrix",row,column,getRowDimension(),getColumnDimension());
}

UNKNOWN ASTNode type : catch (ArrayIndexOutOfBoundsException e) {
  throw new MatrixIndexException("no entry at indices ({0}, {1}) in a {2}x{3} matrix",row,column,getRowDimension(),getColumnDimension());
}

UNKNOWN ASTNode type : catch (ArrayIndexOutOfBoundsException e) {
  throw new MatrixIndexException("no entry at indices ({0}, {1}) in a {2}x{3} matrix",row,column,getRowDimension(),getColumnDimension());
}

UNKNOWN ASTNode type : catch (ArrayIndexOutOfBoundsException e) {
  throw new MatrixIndexException("no entry at indices ({0}, {1}) in a {2}x{3} matrix",row,column,getRowDimension(),getColumnDimension());
}

========
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("{0} values have been added before statistic is configured",serialVersionUID);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(omegaCount>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("roots of unity have not been computed yet");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw new MatrixIndexException("column index {0} out of allowed range [{1}, {2}]",column,0,getColumnDimension()-1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(value>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkColumnIndex(column);
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>getRowDimension()){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,getRowDimension(),1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkColumnIndex(column);
if(column>getRowDimension()){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,column);
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length>getRowDimension()){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,getRowDimension(),1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,column);
if(length>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>getRowDimension()){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,getRowDimension(),1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,column);
if(column>getRowDimension()){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkColumnIndex(this,column);
if(column>0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,getRowDimension(),1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>getRowDimension()){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,getRowDimension(),1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,column);
if(length>getRowDimension()){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,column);
if(length>0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,getRowDimension(),1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,column);
if(column>getRowDimension()){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,getRowDimension(),1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,column);
if(length>getRowDimension()){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,getRowDimension(),1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkColumnIndex(column);
if(nRows>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,column);
if(nRows>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>0){
throw MathRuntimeException.createIllegalStateException("{0} values have been added before statistic is configured",serialVersionUID);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(omegaCount>0){
throw MathRuntimeException.createIllegalStateException("roots of unity have not been computed yet");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (ArrayIndexOutOfBoundsException e) {
  throw MathRuntimeException.createIllegalArgumentException("vector must have at least one element");
}

UNKNOWN ASTNode type : catch (NoSuchMethodException e1) {
  throw MathRuntimeException.createIllegalArgumentException("percentile implementation {0} does not support setQuantile",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (IllegalAccessException e2) {
  throw MathRuntimeException.createIllegalArgumentException("cannot access setQuantile method in percentile implementation {0}",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (InvocationTargetException e3) {
  throw MathRuntimeException.createIllegalArgumentException(e3.getCause());
}

UNKNOWN ASTNode type : catch (NoSuchMethodException e1) {
  throw MathRuntimeException.createIllegalArgumentException("percentile implementation {0} does not support setQuantile",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (IllegalAccessException e2) {
  throw MathRuntimeException.createIllegalArgumentException("cannot access setQuantile method in percentile implementation {0}",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (InvocationTargetException e3) {
  throw MathRuntimeException.createIllegalArgumentException(e3.getCause());
}

UNKNOWN ASTNode type : catch (ClassCastException ex) {
  throw MathRuntimeException.createIllegalArgumentException("instance of class {0} not comparable to existing values",v.getClass().getName());
}

UNKNOWN ASTNode type : catch (ClassCastException cce) {
  throw MathRuntimeException.createIllegalArgumentException("function is not differentiable");
}

UNKNOWN ASTNode type : catch (ConvergenceException ex) {
  throw MathRuntimeException.createIllegalArgumentException("cannot convert given object to a fraction number: {0}",ex.getLocalizedMessage());
}

========
if(nRows==column){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("insufficient data: only {0} rows and {1} columns.",nRows,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==column){
throw MathRuntimeException.createIllegalArgumentException("insufficient data: only {0} rows and {1} columns.",nRows,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(v.length!=nRows){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length!=nRows){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("cannot discard {0} elements from a {1} elements array",column,nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("covariance matrix is null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("input values array is null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("input weights array is null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("observed counts are all 0 in first observed array");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("observed counts are all 0 in second observed array");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute 0-th root of unity, indefinite result");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("zero norm for rotation defining vector");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("empty polynomials coefficients array");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("function is null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("null imaginary format");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("null real format");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("whole format can not be null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("null fraction");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("denominator format can not be null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("numerator format can not be null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("length must be positive ({0})",nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("sample size must be positive ({0})",nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("invalid row dimension {0} (must be positive)",nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("invalid column dimension {0} (must be positive)",nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(d.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("vector must have at least one element");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(d.length==0){
throw MathRuntimeException.createIllegalArgumentException("vector must have at least one element");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("start position cannot be negative ({0})",nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("length cannot be negative ({0})",nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("bad value for maximum iterations number: {0}",nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("polynomial degree must be positive: degree={0}",nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("brightness exponent should be positive or null, but got {0}",nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("number of microsphere elements must be positive, but got {0}",nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("number of trials must be non-negative ({0})",nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("number of successes must be non-negative ({0})",nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("invalid number of elements {0} (must be positive)",nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("population size must be positive ({0})",nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute nth root for null or negative n: {0}",nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("must have n >= 0 for binomial coefficient (n,k), got n = {0}",nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("must have n >= 0 for n!, got n = {0}",nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("index ({0}) is not positive",nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((data==0)||(nRows==0)){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("no data");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",0,64);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",0,32);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("cannot raise an integral value to a negative power ({0}^{1})",column,nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("sample size ({0}) exceeds collection size ({1})");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("out of range root of unity index {0} (must be in [{1};{2}])",column,0,nRows-1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==column){
throw MathRuntimeException.createIllegalArgumentException("out of range root of unity index {0} (must be in [{1};{2}])",column,0,nRows-1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("equals vertices {0} and {1} in simplex configuration",nRows,j+1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==INFINITE_WINDOW){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("window size must be positive ({0})",nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("window size must be positive ({0})",nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",column,nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==column){
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",column,nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==ADDITIVE_MODE){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("unsupported expansion mode {0}, supported modes are {1} ({2}) and {3} ({4})",nRows,MULTIPLICATIVE_MODE,"MULTIPLICATIVE_MODE",ADDITIVE_MODE,"ADDITIVE_MODE");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("upper bound ({0}) must be greater than lower bound ({1})",nRows,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) exceeds n ({1})",column,nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nRows,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nRows,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column==0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nRows,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column!=0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nRows,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(weights.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==values.length){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("Different number of weights and values");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("Different number of weights and values");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("number of successes ({0}) must be less than or equal to population size ({1})",nRows,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==column){
throw MathRuntimeException.createIllegalArgumentException("number of successes ({0}) must be less than or equal to population size ({1})",nRows,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("sample size ({0}) must be less than or equal to population size ({1})",nRows,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==column){
throw MathRuntimeException.createIllegalArgumentException("sample size ({0}) must be less than or equal to population size ({1})",nRows,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("must have n >= k for binomial coefficient (n,k), got n = {0}, k = {1}",nRows,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==column){
throw MathRuntimeException.createIllegalArgumentException("must have n >= k for binomial coefficient (n,k), got n = {0}, k = {1}",nRows,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("subarray ends after array end");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==values.length){
throw MathRuntimeException.createIllegalArgumentException("subarray ends after array end");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("input arrays must have the same positive length ({0} and {1})",nRows,sample2.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("input arrays must have the same length and at least two elements ({0} and {1})",nRows,sample2.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("propagation direction mismatch");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(data.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",data.length,nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(data.length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",data.length,nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(data.length==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",data.length,nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(data.length!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",data.length,nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(v.length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v.length==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v.length!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subRow.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nRows,subRow.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(refI.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}",refI.length,nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}",nRows,startConfiguration.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("position {0} and size {1} don\'t fit to the size of the input array {2}",column,nRows,d.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=column){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==column){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=column){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",getDimension(),nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("function values at endpoints do not have different signs.  "+"Endpoints: [{0}, {1}], Values: [{2}, {3}]",data,data,data,data);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(array.length!=nRows){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nRows,1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw new NonSquareMatrixException(nRows,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw new NonSquareMatrixException(nRows,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==column){
throw new NonSquareMatrixException(nRows,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=column){
throw new NonSquareMatrixException(nRows,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
data=new BigDecimal[column][column];
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(subMatrix,0,data,0,subMatrix.length);
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(subMatrix,0,data,0,subMatrix.length);
if(nRows==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("cannot raise an integral value to a negative power ({0}^{1})",serialVersionUID,nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(array.length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nRows,1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=nRows){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nRows,1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nRows,1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nRows,1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("lower endpoint ({0}) must be less than or equal to upper endpoint ({1})",nRows,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==column){
throw MathRuntimeException.createIllegalArgumentException("lower endpoint ({0}) must be less than or equal to upper endpoint ({1})",nRows,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(v.length!=nRows){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subRow.length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nRows,subRow.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subRow.length==0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nRows,subRow.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subRow.length!=0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nRows,subRow.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",destination.length,subMatrix[0].length,column,nRows);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==column){
throw MathRuntimeException.createIllegalArgumentException("position {0} and size {1} don\'t fit to the size of the input array {2}",column,nRows,d.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (ArrayIndexOutOfBoundsException e) {
  throw MathRuntimeException.createIllegalArgumentException("vector must have at least one element");
}

UNKNOWN ASTNode type : catch (NoSuchMethodException e1) {
  throw MathRuntimeException.createIllegalArgumentException("percentile implementation {0} does not support setQuantile",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (IllegalAccessException e2) {
  throw MathRuntimeException.createIllegalArgumentException("cannot access setQuantile method in percentile implementation {0}",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (InvocationTargetException e3) {
  throw MathRuntimeException.createIllegalArgumentException(e3.getCause());
}

UNKNOWN ASTNode type : catch (NoSuchMethodException e1) {
  throw MathRuntimeException.createIllegalArgumentException("percentile implementation {0} does not support setQuantile",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (IllegalAccessException e2) {
  throw MathRuntimeException.createIllegalArgumentException("cannot access setQuantile method in percentile implementation {0}",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (InvocationTargetException e3) {
  throw MathRuntimeException.createIllegalArgumentException(e3.getCause());
}

UNKNOWN ASTNode type : catch (ClassCastException ex) {
  throw MathRuntimeException.createIllegalArgumentException("instance of class {0} not comparable to existing values",v.getClass().getName());
}

UNKNOWN ASTNode type : catch (ClassCastException cce) {
  throw MathRuntimeException.createIllegalArgumentException("function is not differentiable");
}

UNKNOWN ASTNode type : catch (ConvergenceException ex) {
  throw MathRuntimeException.createIllegalArgumentException("cannot convert given object to a fraction number: {0}",ex.getLocalizedMessage());
}

========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("insufficient data: only {0} rows and {1} columns.",column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(v.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("cannot discard {0} elements from a {1} elements array",column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("covariance matrix is null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("input values array is null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("input weights array is null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("observed counts are all 0 in first observed array");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("observed counts are all 0 in second observed array");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute 0-th root of unity, indefinite result");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("zero norm for rotation defining vector");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("empty polynomials coefficients array");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("function is null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("null imaginary format");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("null real format");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("whole format can not be null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("null fraction");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("denominator format can not be null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("numerator format can not be null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("length must be positive ({0})",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("sample size must be positive ({0})",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("invalid row dimension {0} (must be positive)",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("invalid column dimension {0} (must be positive)",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(d.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("vector must have at least one element");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(d.length==0){
throw MathRuntimeException.createIllegalArgumentException("vector must have at least one element");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("start position cannot be negative ({0})",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("length cannot be negative ({0})",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("bad value for maximum iterations number: {0}",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("polynomial degree must be positive: degree={0}",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("brightness exponent should be positive or null, but got {0}",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("number of microsphere elements must be positive, but got {0}",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("number of trials must be non-negative ({0})",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("number of successes must be non-negative ({0})",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("invalid number of elements {0} (must be positive)",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("population size must be positive ({0})",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute nth root for null or negative n: {0}",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("must have n >= 0 for binomial coefficient (n,k), got n = {0}",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("must have n >= 0 for n!, got n = {0}",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("index ({0}) is not positive",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((data==0)||(nCols==0)){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("no data");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",0,64);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",0,32);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("cannot raise an integral value to a negative power ({0}^{1})",column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("sample size ({0}) exceeds collection size ({1})");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==column){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("out of range root of unity index {0} (must be in [{1};{2}])",column,0,nCols-1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==column){
throw MathRuntimeException.createIllegalArgumentException("out of range root of unity index {0} (must be in [{1};{2}])",column,0,nCols-1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("equals vertices {0} and {1} in simplex configuration",nCols,j+1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==INFINITE_WINDOW){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("window size must be positive ({0})",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("window size must be positive ({0})",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==column){
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==ADDITIVE_MODE){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("unsupported expansion mode {0}, supported modes are {1} ({2}) and {3} ({4})",nCols,MULTIPLICATIVE_MODE,"MULTIPLICATIVE_MODE",ADDITIVE_MODE,"ADDITIVE_MODE");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("upper bound ({0}) must be greater than lower bound ({1})",nCols,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) exceeds n ({1})",column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column==0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column!=0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(weights.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==values.length){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("Different number of weights and values");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("Different number of weights and values");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("number of successes ({0}) must be less than or equal to population size ({1})",nCols,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==column){
throw MathRuntimeException.createIllegalArgumentException("number of successes ({0}) must be less than or equal to population size ({1})",nCols,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("sample size ({0}) must be less than or equal to population size ({1})",nCols,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==column){
throw MathRuntimeException.createIllegalArgumentException("sample size ({0}) must be less than or equal to population size ({1})",nCols,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("must have n >= k for binomial coefficient (n,k), got n = {0}, k = {1}",nCols,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==column){
throw MathRuntimeException.createIllegalArgumentException("must have n >= k for binomial coefficient (n,k), got n = {0}, k = {1}",nCols,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("subarray ends after array end");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==values.length){
throw MathRuntimeException.createIllegalArgumentException("subarray ends after array end");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("input arrays must have the same positive length ({0} and {1})",nCols,sample2.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("input arrays must have the same length and at least two elements ({0} and {1})",nCols,sample2.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("propagation direction mismatch");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(v.length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v.length==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v.length!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",data.length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(data.length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",data.length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(data.length==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",data.length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(data.length!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",data.length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(b.length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subRow.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subRow.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(refI.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}",refI.length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}",nCols,startConfiguration.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("position {0} and size {1} don\'t fit to the size of the input array {2}",column,nCols,d.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column!=nCols){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column!=nCols){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column!=0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",getDimension(),nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("function values at endpoints do not have different signs.  "+"Endpoints: [{0}, {1}], Values: [{2}, {3}]",data,data,data,data);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(array.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw new NonSquareMatrixException(column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw new NonSquareMatrixException(column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column!=nCols){
throw new NonSquareMatrixException(column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column==0){
throw new NonSquareMatrixException(column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column!=0){
throw new NonSquareMatrixException(column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
data=new BigDecimal[column][column];
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(subMatrix,0,data,0,subMatrix.length);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(subMatrix,0,data,0,subMatrix.length);
if(nCols==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(d.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("cannot raise an integral value to a negative power ({0}^{1})",serialVersionUID,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(array.length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=nCols){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("lower endpoint ({0}) must be less than or equal to upper endpoint ({1})",nCols,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==column){
throw MathRuntimeException.createIllegalArgumentException("lower endpoint ({0}) must be less than or equal to upper endpoint ({1})",nCols,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(v.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subRow.length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subRow.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subRow.length==0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subRow.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subRow.length!=0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subRow.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",destination.length,subMatrix[0].length,column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==column){
throw MathRuntimeException.createIllegalArgumentException("position {0} and size {1} don\'t fit to the size of the input array {2}",column,nCols,d.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (ArrayIndexOutOfBoundsException e) {
  throw MathRuntimeException.createIllegalArgumentException("vector must have at least one element");
}

UNKNOWN ASTNode type : catch (NoSuchMethodException e1) {
  throw MathRuntimeException.createIllegalArgumentException("percentile implementation {0} does not support setQuantile",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (IllegalAccessException e2) {
  throw MathRuntimeException.createIllegalArgumentException("cannot access setQuantile method in percentile implementation {0}",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (InvocationTargetException e3) {
  throw MathRuntimeException.createIllegalArgumentException(e3.getCause());
}

UNKNOWN ASTNode type : catch (NoSuchMethodException e1) {
  throw MathRuntimeException.createIllegalArgumentException("percentile implementation {0} does not support setQuantile",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (IllegalAccessException e2) {
  throw MathRuntimeException.createIllegalArgumentException("cannot access setQuantile method in percentile implementation {0}",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (InvocationTargetException e3) {
  throw MathRuntimeException.createIllegalArgumentException(e3.getCause());
}

UNKNOWN ASTNode type : catch (ClassCastException ex) {
  throw MathRuntimeException.createIllegalArgumentException("instance of class {0} not comparable to existing values",v.getClass().getName());
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (OptimizationException oe) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (OptimizationException oe) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (OptimizationException oe) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (ConvergenceException ce) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (ConvergenceException ce) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (ClassCastException cce) {
  throw MathRuntimeException.createIllegalArgumentException("function is not differentiable");
}

UNKNOWN ASTNode type : catch (ConvergenceException ex) {
  throw MathRuntimeException.createIllegalArgumentException("cannot convert given object to a fraction number: {0}",ex.getLocalizedMessage());
}

========
if(subMatrix[i].length==nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length==nCols){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(v.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(refI.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}",refI.length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("cannot discard {0} elements from a {1} elements array",nCols,length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("expected array length = {0}, must be at least 2",expected.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("observed array length = {0}, must be at least 2",observed1.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("invalid row dimension: {0} (must be at least 2)",in.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("two or more values required in each category, one has {0}",array.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mean.length!=standardDeviation.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mean.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=standardDeviation.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}",mean.length,standardDeviation.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length!=singularValues.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=singularValues.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,singularValues.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x.length!=covariance.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=covariance.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}",x.length,covariance.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(expected.length!=observed.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(expected.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=observed.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}",expected.length,observed.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(observed1.length!=observed2.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(observed1.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=observed2.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}",observed1.length,observed2.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(vector.length!=dimensionSize.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(vector.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=dimensionSize.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some dimensions don\'t match: {0} != {1}",vector.length,dimensionSize.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(observations.length!=weights.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(observations.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=weights.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}",observations.length,weights.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x.length!=y.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=y.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}",x.length,y.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",data.length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(data.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",data.length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subRow.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subRow.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("array sizes should have difference 1 ({0} != {1} + 1)",a.length,c.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=polynomials.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("number of polynomial interpolants must match the number of segments ({0} != {1} - 1)",polynomials.length,knots.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length==nCols){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("empty polynomials coefficients array");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some dimensions don\'t match: {0} != {1}",0,dimensionSize.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("{0} points are required, got only {1}",2,x.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("spline partition must have at least {0} points, got {1}",2,knots.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(d.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("vector must have at least one element");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(d.length==nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length==nCols){
throw MathRuntimeException.createIllegalArgumentException("vector must have at least one element");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(d.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("vector must have at least one element");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(d.length==nCols){
throw MathRuntimeException.createIllegalArgumentException("vector must have at least one element");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=startConfiguration.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}",nCols,startConfiguration.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("position {0} and size {1} don\'t fit to the size of the input array {2}",nCols,column,d.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("polynomial degree must be positive: degree={0}",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("input arrays must have the same positive length ({0} and {1})",nCols,sample2.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("not enough data ({0} rows) for this many predictors ({1} predictors)",x.length,subMatrix[0].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("a {0}x{1} matrix was provided instead of a square matrix",covariance.length,subMatrix[0].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("input arrays must have the same length and at least two elements ({0} and {1})",nCols,sample2.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("no data");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("observed counts are both zero for entry {0}",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("insufficient data for t statistic, needs at least 2, got {0}",(data==null)?0:data.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("index ({0}) is not positive",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((column+nCols)>internalArray.length){
expandTo(startIndex+i);
}
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
column=nCols;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("upper bound ({0}) must be greater than lower bound ({1})",nCols,length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) exceeds n ({1})",nCols,length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(weights.length!=values.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(weights.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=values.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("Different number of weights and values");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",nCols,length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("lower endpoint ({0}) must be less than or equal to upper endpoint ({1})",length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("number of successes ({0}) must be less than or equal to population size ({1})",nCols,length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("sample size ({0}) must be less than or equal to population size ({1})",nCols,length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("must have n >= k for binomial coefficient (n,k), got n = {0}, k = {1}",nCols,length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("subarray ends after array end");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",length,nCols,data);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols!=INFINITE_WINDOW){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=INFINITE_WINDOW){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("window size must be positive ({0})",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("unsupported expansion mode {0}, supported modes are {1} ({2}) and {3} ({4})",nCols,MULTIPLICATIVE_MODE,"MULTIPLICATIVE_MODE",ADDITIVE_MODE,"ADDITIVE_MODE");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",nCols,length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("contraction criteria ({0}) smaller than the expansion factor ({1}).  This would "+"lead to a never ending loop of expansion and contraction as a newly expanded ",length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("initial capacity ({0}) is not positive",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("propagation direction mismatch");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("function values at endpoints do not have different signs, "+"endpoints: [{0}, {1}], values: [{2}, {3}]",data,data,length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("cannot raise an integral value to a negative power ({0}^{1})",column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==null){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=null){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("input values array is null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
incrementAll(nCols,0,values.length);
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length==nCols){
throw MathRuntimeException.createIllegalArgumentException("input values array is null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("sample size ({0}) exceeds collection size ({1})");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length==null){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==null){
throw MathRuntimeException.createIllegalArgumentException("input values array is null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=null){
throw MathRuntimeException.createIllegalArgumentException("input values array is null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length==null){
throw MathRuntimeException.createIllegalArgumentException("input values array is null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("equals vertices {0} and {1} in simplex configuration",nCols,j+1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("out of range root of unity index {0} (must be in [{1};{2}])",nCols,0,column-1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("length must be positive ({0})",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("the Poisson mean must be positive ({0})",length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("standard deviation must be positive ({0})",length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("mean must be positive ({0})",length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length==nCols){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("sample size must be positive ({0})",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("invalid row dimension {0} (must be positive)",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("invalid column dimension {0} (must be positive)",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("start position cannot be negative ({0})",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("length cannot be negative ({0})",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("bad value for maximum iterations number: {0}",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("brightness exponent should be positive or null, but got {0}",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("number of microsphere elements must be positive, but got {0}",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("number of trials must be non-negative ({0})",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("number of successes must be non-negative ({0})",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("invalid number of elements {0} (must be positive)",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("invalid exponent {0} (must be positive)",length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("degrees of freedom must be positive ({0})",length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("shape must be positive ({0})",length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("scale must be positive ({0})",length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("population size must be positive ({0})",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("alpha must be positive ({0})",length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("beta must be positive ({0})",length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("negative complex module {0}",length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("cannot compute nth root for null or negative n: {0}",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("must have n >= 0 for binomial coefficient (n,k), got n = {0}",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("must have n >= 0 for n!, got n = {0}",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("expansion factor smaller than one ({0})",length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("invalid array dimensions. xArray has size {0}; yArray has {1} elements",xArray.length,yArray.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("out of bounds quantile value: {0}, must be in (0, 100]",length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,getColumnDimension());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("contraction criteria smaller than one ({0}).  This would lead to a never ending "+"loop of expansion and contraction as an internal storage array length equal ",length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("cannot compute 0-th root of unity, indefinite result");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length==nCols){
throw MathRuntimeException.createIllegalArgumentException("cannot compute 0-th root of unity, indefinite result");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=column*blockWidth(nCols)){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("out of bounds significance level {0}, must be between {1} and {2}",length,0.0,1.0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("out of bounds significance level {0}, must be between {1} and {2}",length,0,0.5);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("out of bounds significance level {0}, must be between {1} and {2}",length,0.0,0.5);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range",length,0.0,1.0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("insufficient data: only {0} rows and {1} columns.",nCols,length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,row);
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkRowIndex(this,row);
if(array.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkRowIndex(row);
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=nCols){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,row);
if(subMatrix[i].length!=nCols){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,row);
if(array.length!=nCols){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkRowIndex(row);
if(array.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkRowIndex(row);
if(subMatrix[i].length!=nCols){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkRowIndex(row);
if(array.length!=nCols){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getInterpolatedState().length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(point[i]!=otherPoint[i]){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data[nCols]!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
data=new BigDecimal[column][column];
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(subMatrix,0,data,0,subMatrix.length);
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(subMatrix,0,data,0,subMatrix.length);
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!isNonSingular()){
throw new SingularMatrixException();
}
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(point.length!=otherPoint.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(point.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=otherPoint.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
if(point.length!=otherPoint.length){
return false;
}
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
if(x.length!=y.length){
return false;
}
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(xvalI.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw new DimensionMismatchException(xvalI.length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column==bytes.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=bytes.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
if(column==bytes.length){
return ;
}
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column==nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(target.length!=weights.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(target.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw new OptimizationException("dimension mismatch {0} != {1}",target.length,weights.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v.length!=sums.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=sums.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw new DimensionMismatchException(v.length,sums.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v.length!=means.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=means.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw new DimensionMismatchException(v.length,means.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw new DimensionMismatchException(mean.length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(xval.length!=yval.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(xval.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=yval.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw new MathException("Loess expects the abscissa and ordinate arrays "+"to be of the same size, ",xval.length,yval.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(residuals.length!=observations.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(residuals.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=observations.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(jacobian.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objective.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw new NonSquareMatrixException(length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(f.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw new NotPositiveDefiniteMatrixException();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subVector.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",getDimension(),nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(list.length-1!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nCols,1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw new IntegratorException("dimensions mismatch: state vector has dimension {0},"+" absolute tolerance vector has dimension {1}",y0.length,vecAbsoluteTolerance.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw new IntegratorException("dimensions mismatch: state vector has dimension {0},"+" relative tolerance vector has dimension {1}",y0.length,vecRelativeTolerance.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
if(Math.abs(length-data)<=data){
setResult(x1,nCols);
return x1;
}
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
setResult(length,nCols);
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
if(Math.abs(length-data)<=data){
setResult(x,nCols);
return data;
}
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw new OptimizationException("sample contains {0} observed points, at least {1} are required",observations.length,4);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(2*column!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(2*column==nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=y0.length){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(selectedRows.length*selectedColumns.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw new MatrixIndexException("empty selected row index array");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw new MatrixIndexException("empty selected column index array");
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length==nCols){
throw new MatrixIndexException("empty selected row index array");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((length-1)!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==MULTIPLICATIVE_MODE){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=MULTIPLICATIVE_MODE){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(selectedRows.length*selectedColumns.length==nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length==nCols){
throw new MatrixIndexException("empty selected column index array");
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(selectedRows.length*selectedColumns.length!=nCols){
throw new MatrixIndexException("empty selected row index array");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(selectedRows.length*selectedColumns.length!=nCols){
throw new MatrixIndexException("empty selected column index array");
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw new MatrixIndexException("empty selected column index array");
throw new MatrixIndexException("empty selected row index array");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(selectedRows.length*selectedColumns.length==nCols){
throw new MatrixIndexException("empty selected row index array");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(selectedRows.length*selectedColumns.length==nCols){
throw new MatrixIndexException("empty selected column index array");
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length==nCols){
throw new MatrixIndexException("empty selected column index array");
throw new MatrixIndexException("empty selected row index array");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(selectedRows.length*selectedColumns.length!=nCols){
throw new MatrixIndexException("empty selected column index array");
throw new MatrixIndexException("empty selected row index array");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(selectedRows.length*selectedColumns.length==nCols){
throw new MatrixIndexException("empty selected column index array");
throw new MatrixIndexException("empty selected row index array");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length==MULTIPLICATIVE_MODE){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
if(Math.abs(nCols-length)<=data){
data=UnivariateRealSolverUtils.midpoint(min,max);
setResult(m,column);
return m;
}
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
m=UnivariateRealSolverUtils.midpoint(length,nCols);
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
setResult(data,column);
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
m=UnivariateRealSolverUtils.midpoint(length,nCols);
setResult(data,column);

throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw new NotARotationMatrixException("a {0}x{1} matrix cannot be a rotation matrix",m.length,subMatrix[0].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw new EstimationException("no degrees of freedom ({0} measurements, {1} parameters)",length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(coefficients.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
if(coefficients.length==1){
return "0";
}
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
if(nCols<0){
return ;
}
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
subMatrix[2][i]=data;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
subMatrix[3][i]=data;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i++;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column<0){
i=-i-2;
}
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
if((column+1>=nCols)&&(Math.abs(data-data)<=Math.max(data,data*(Math.abs(data)+Math.abs(data))))){
setResult(data,i);
return data;
}
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==-1){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=-1){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw new IllegalArgumentException("originalData and permutedData must contain the same objects.");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length==-1){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length==nCols){
throw new IllegalArgumentException("originalData and permutedData must contain the same objects.");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==-1){
throw new IllegalArgumentException("originalData and permutedData must contain the same objects.");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=-1){
throw new IllegalArgumentException("originalData and permutedData must contain the same objects.");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length==-1){
throw new IllegalArgumentException("originalData and permutedData must contain the same objects.");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
if((Math.abs(data-length)<=data*(Math.abs(length)+Math.abs(data)))||(delta<=data)){
setResult(data,nCols);
return data;
}
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
if(Math.abs(data-length)>(Math.max(Math.abs(mij),Math.abs(mji))*data)){
return false;
}
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column--!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i--!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
if((Math.abs(data-length)<=data*(Math.abs(length)+Math.abs(data)))||(delta<=data)){
setResult(data,column);
return data;
}
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=column){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i==nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length==column){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i!=column){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i==column){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
if((Math.abs((4*data-data)/3.0-length)<=data*(Math.abs(length)+Math.abs((4*data-data)/3.0)))||(delta<=data)){
setResult((4*data-data)/3.0,column);
return data;
}
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.getRowDimension()!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(this.getRowDimension()!=nCols){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",destination.length,subMatrix[0].length,selectedRows.length,selectedColumns.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",destination.length,subMatrix[0].length,nCols,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].subMatrix[i].column!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].subMatrix[i].column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(vector.length!=dimensionSize.length){
throw MathRuntimeException.createIllegalArgumentException("some dimensions don\'t match: {0} != {1}",vector.length,dimensionSize.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(vector.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some dimensions don\'t match: {0} != {1}",vector.length,dimensionSize.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=dimensionSize.length){
throw MathRuntimeException.createIllegalArgumentException("some dimensions don\'t match: {0} != {1}",vector.length,dimensionSize.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x.length!=y.length){
throw MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}",x.length,y.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}",x.length,y.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=y.length){
throw MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}",x.length,y.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subRow.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subRow.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=column*blockWidth(column)){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("wrong array shape (block length = {0}, expected {1})",subMatrix[i].length,column*blockWidth(nCols));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("upper bound ({0}) must be greater than lower bound ({1})",length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("lower endpoint ({0}) must be less than or equal to upper endpoint ({1})",nCols,length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
setResult(length,nCols);
if(Math.abs(length-data)<=data){
setResult(x,nCols);
return data;
}
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=nCols){
throw new NonSquareMatrixException(length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=nCols){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nCols,1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("cannot raise an integral value to a negative power ({0}^{1})",nCols,length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("cannot raise an integral value to a negative power ({0}^{1})",serialVersionUID,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("cannot raise an integral value to a negative power ({0}^{1})",serialVersionUID,length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix==null){
throw new NullPointerException();
}
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix==null){
throw new NullPointerException();
}
if(subMatrix[i].length==nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix==null){
throw new NullPointerException();
}
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(subMatrix==null){
throw new NullPointerException();
}
if(subMatrix[i].length==nCols){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(d.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(d.length==nCols){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (NoSuchMethodException e1) {
  throw MathRuntimeException.createIllegalArgumentException("percentile implementation {0} does not support setQuantile",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (IllegalAccessException e2) {
  throw MathRuntimeException.createIllegalArgumentException("cannot access setQuantile method in percentile implementation {0}",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (InvocationTargetException e3) {
  throw MathRuntimeException.createIllegalArgumentException(e3.getCause());
}

UNKNOWN ASTNode type : catch (NoSuchMethodException e1) {
  throw MathRuntimeException.createIllegalArgumentException("percentile implementation {0} does not support setQuantile",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (IllegalAccessException e2) {
  throw MathRuntimeException.createIllegalArgumentException("cannot access setQuantile method in percentile implementation {0}",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (InvocationTargetException e3) {
  throw MathRuntimeException.createIllegalArgumentException(e3.getCause());
}

UNKNOWN ASTNode type : catch (NoSuchMethodException e1) {
  throw MathRuntimeException.createIllegalArgumentException("percentile implementation {0} does not support setQuantile",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (IllegalAccessException e2) {
  throw MathRuntimeException.createIllegalArgumentException("cannot access setQuantile method in percentile implementation {0}",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (InvocationTargetException e3) {
  throw MathRuntimeException.createIllegalArgumentException(e3.getCause());
}

UNKNOWN ASTNode type : catch (NoSuchMethodException e1) {
  throw MathRuntimeException.createIllegalArgumentException("percentile implementation {0} does not support setQuantile",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (IllegalAccessException e2) {
  throw MathRuntimeException.createIllegalArgumentException("cannot access setQuantile method in percentile implementation {0}",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (InvocationTargetException e3) {
  throw MathRuntimeException.createIllegalArgumentException(e3.getCause());
}

UNKNOWN ASTNode type : catch (NoSuchMethodException e1) {
  throw MathRuntimeException.createIllegalArgumentException("percentile implementation {0} does not support setQuantile",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (IllegalAccessException e2) {
  throw MathRuntimeException.createIllegalArgumentException("cannot access setQuantile method in percentile implementation {0}",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (InvocationTargetException e3) {
  throw MathRuntimeException.createIllegalArgumentException(e3.getCause());
}

UNKNOWN ASTNode type : catch (NoSuchMethodException e1) {
  throw MathRuntimeException.createIllegalArgumentException("percentile implementation {0} does not support setQuantile",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (IllegalAccessException e2) {
  throw MathRuntimeException.createIllegalArgumentException("cannot access setQuantile method in percentile implementation {0}",percentileImpl.getClass().getName());
}

UNKNOWN ASTNode type : catch (InvocationTargetException e3) {
  throw MathRuntimeException.createIllegalArgumentException(e3.getCause());
}

========
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
subMatrix=new double[nCols][n];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
data=subMatrix;
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<in.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<dimensionSize.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
vector[i]++;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=nCols;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<row;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=nCols;i<row;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=column;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<column+row;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<data.length;++i){
if(weights[i]>0.0){
containsPositiveWeight=true;
}
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=column;i<column+row;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<newPols.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
outBlock=out.blocks[++outBlockIndex];
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<data.length;++i){
mBlock=matrix.blocks[++mBlockIndex];
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mIndex=column-nCols;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mBlock=matrix.blocks[++mBlockIndex];
mIndex=column-nCols;

if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mIndex+=column;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((length+nCols)>internalArray.length){
expandTo(startIndex+i);
}
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
column=nCols;
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<rawData.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,row);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkColumnIndex(this,column);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkRowIndex(this,row);
for(int i=0;i<row;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkColumnIndex(this,column);
for(int i=0;i<row;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkRowIndex(this,row);
MatrixUtils.checkColumnIndex(this,column);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkRowIndex(this,row);
MatrixUtils.checkColumnIndex(this,column);
for(int i=0;i<row;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<observed1.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("observed counts are both zero for entry {0}",i);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<observed1.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("observed counts are both zero for entry {0}",i);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(true){
throw MathRuntimeException.createIllegalArgumentException("equals vertices {0} and {1} in simplex configuration",nCols,column);
}
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<xArray.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkSubMatrixIndex(this,row,column,row,row+nCols-1);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
super();
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<simplex.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,y0.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(subMatrix,0,data,0,subMatrix.length);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
System.arraycopy(subMatrix,0,data,0,subMatrix.length);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
firstStepAlreadyComputed=true;
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,nCols);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
data=buildArray(column);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkRowIndex(nCols);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<interpolator.yDotK.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
yDotK[k]=new double[nCols];
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<column;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
checkSubMatrixIndex(row,column,row,row+nCols-1);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<ranks.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==1){
return new double[]{0};
}
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy((coefficients.length<p.coefficients.length)?p.coefficients:coefficients,nCols,new double[column],lowLength,column-lowLength);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(row==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<data.length;++i){
if(data[i]!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<point.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(point[i]!=otherPoint[i]){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<x.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<special.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<realEigenvalues.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
resetEvaluations();
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,nCols);
for(int i=0;i<column;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<coefficients.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<singularValues.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<result.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<results.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<bd.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkColumnIndex(column);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
incrementAll(length,0,values.length);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.length);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkRowIndex(nCols);
for(int i=0;i<row;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data[0].row;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<a.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<values.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<root.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkRowIndex(nCols);
for(int i=0;i<column;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<dx2.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<v.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.length);
for(int i=0;i<v.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<diagonal.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<parameters.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<random.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<c.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isNonSingular()){
throw new SingularMatrixException();
}
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<xval.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(xvalI.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw new DimensionMismatchException(xvalI.length,nCols);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<xval.length;++i){
if(xvalI.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<randomBytes.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<hash.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
bytes[bytesOut++]=(byte)nextInt();
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(row==bytes.length){
return ;
}
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
bytes[bytesOut++]=(byte)nextInt();
if(row==bytes.length){
return ;
}

if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<wm.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
outBlock[outIndex++]=block[i*jWidth+jColumn];
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
block[i*jWidth+jColumn]=mBlock[mIndex++];
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<p.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=c.length;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length==nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<data.length;++i){
if(i!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<data.length;++i){
list[target]=list[i];
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
list[i]=column;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
list[target]=list[i];
list[i]=column;

if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(i==nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<currentState.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<centroid.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<optima.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Arrays.sort(new double[nCols]);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<secondary.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<0){
i=-i-2;
}
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=polynomials.length){
i--;
}
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,column);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkRowIndex(this,column);
for(int i=0;i<row;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
checkColumnIndex(column);
for(int i=0;i<row;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
setResult(data,column);
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++column;
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<newCoefficients.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i++;
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw new NotPositiveDefiniteMatrixException();
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=column;i<row;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<y0.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=null){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
yDotK[k]=(nCols<0)?null:new double[nCols];
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
subMatrix=(column<0)?null:new double[kMax][];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
out[ranks[i].getPosition()]=column;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
data=data-data;
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
column++;
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<observed.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<main.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(nCols==-1){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=-1){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw new IllegalArgumentException("originalData and permutedData must contain the same objects.");
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<data.length;++i){
res[index]=(double)i/row;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<row;++i){
if(subMatrix[i].length==nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<row;++i){
if(nCols==-1){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<row;++i){
if(subMatrix[i].length!=-1){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<row;++i){
if(subMatrix[i].length!=nCols){
throw new IllegalArgumentException("originalData and permutedData must contain the same objects.");
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length==-1){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length==nCols){
throw new IllegalArgumentException("originalData and permutedData must contain the same objects.");
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<data.length;++i){
if(nCols==-1){
throw new IllegalArgumentException("originalData and permutedData must contain the same objects.");
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=-1){
throw new IllegalArgumentException("originalData and permutedData must contain the same objects.");
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<row;++i){
if(subMatrix[i].length==-1){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<row;++i){
if(subMatrix[i].length==nCols){
throw new IllegalArgumentException("originalData and permutedData must contain the same objects.");
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<row;++i){
if(nCols==-1){
throw new IllegalArgumentException("originalData and permutedData must contain the same objects.");
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<row;++i){
if(subMatrix[i].length!=-1){
throw new IllegalArgumentException("originalData and permutedData must contain the same objects.");
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length==-1){
throw new IllegalArgumentException("originalData and permutedData must contain the same objects.");
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<row;++i){
if(subMatrix[i].length==-1){
throw new IllegalArgumentException("originalData and permutedData must contain the same objects.");
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setSeed(19650218);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<=nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
if((i+1>=row)&&(Math.abs(data-data)<=Math.max(data,data*(Math.abs(data)+Math.abs(data))))){
setResult(data,i);
return data;
}
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
setResult(data,i);
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
oldt=data;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i++;
column++;
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<sums.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<after.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
sum=luRow[col];
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if((data-data<data)||(data-data<data*Math.max(Math.abs(data),Math.abs(data)))){
break;
}
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
luRow[col]=data;
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
sum=luRow[col];
luRow[col]=data;

System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=column;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
sum=luRow[col];
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<row;++i){
if((data-data<data)||(data-data<data*Math.max(Math.abs(data),Math.abs(data)))){
break;
}
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<measurements.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
if((Math.abs(data-data)<=data*(Math.abs(data)+Math.abs(data)))||(delta<=data)){
setResult(data,i);
return data;
}
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=data.length;++i){
oldt=data;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nCols;++i){
oldt=data;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=nCols;++i){
oldt=data;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=column){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<length;++i){
if(subMatrix[i].length==nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
if(i!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
if(subMatrix[i].length!=column){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length==column){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<data.length;++i){
if(i!=column){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<length;++i){
if(i==nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
if(subMatrix[i].length==column){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
if(i!=column){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(i==column){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<length;++i){
if(i==column){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
if((Math.abs((4*data-data)/3.0-data)<=data*(Math.abs(data)+Math.abs((4*data-data)/3.0)))||(delta<=data)){
setResult((4*data-data)/3.0,i);
return data;
}
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
olds=(4*data-data)/3.0;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
olds=(4*data-data)/3.0;
oldt=data;

if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<column;++i){
if(subMatrix[i].length!=nCols){
throw new NotPositiveDefiniteMatrixException();
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifyDataSet(data);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
scale=new double[y0.length];
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
setStartConfiguration(new double[startPoint.length]);
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<yMidDots.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,nCols);
MatrixUtils.checkColumnIndex(this,column);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<rawData.length;++i){
if(length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<rawData.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
if(length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<rawData.length;++i){
if(length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<row;++i){
outBlock[outIndex++]=block[i*jWidth+jColumn];
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<row;++i){
block[i*jWidth+jColumn]=mBlock[mIndex++];
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mBlock=matrix.blocks[++mBlockIndex];
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mIndex=column-nCols;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mBlock=matrix.blocks[++mBlockIndex];
mIndex=column-nCols;

if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mIndex+=column;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mBlock=matrix.blocks[++mBlockIndex];
mIndex=column-nCols;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mBlock=matrix.blocks[++mBlockIndex];
mBlock=matrix.blocks[++mBlockIndex];
mIndex=column-nCols;

if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mBlock=matrix.blocks[++mBlockIndex];
mIndex+=column;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mIndex=column-nCols;
mBlock=matrix.blocks[++mBlockIndex];
mIndex=column-nCols;

if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mIndex=column-nCols;
mIndex+=column;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mBlock=matrix.blocks[++mBlockIndex];
mIndex=column-nCols;

mIndex+=column;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mBlock=matrix.blocks[++mBlockIndex];
mIndex=column-nCols;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mBlock=matrix.blocks[++mBlockIndex];
mBlock=matrix.blocks[++mBlockIndex];
mIndex=column-nCols;

if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mBlock=matrix.blocks[++mBlockIndex];
mIndex+=column;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mIndex=column-nCols;
mBlock=matrix.blocks[++mBlockIndex];
mIndex=column-nCols;

if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mIndex=column-nCols;
mIndex+=column;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mBlock=matrix.blocks[++mBlockIndex];
mIndex=column-nCols;

mIndex+=column;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mBlock=matrix.blocks[++mBlockIndex];
mIndex=column-nCols;
mBlock=matrix.blocks[++mBlockIndex];
mIndex=column-nCols;

if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mBlock=matrix.blocks[++mBlockIndex];
mIndex=column-nCols;
mIndex+=column;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mBlock=matrix.blocks[++mBlockIndex];
mBlock=matrix.blocks[++mBlockIndex];
mIndex=column-nCols;

mIndex+=column;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mIndex=column-nCols;
mBlock=matrix.blocks[++mBlockIndex];
mIndex=column-nCols;

mIndex+=column;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mBlock=matrix.blocks[++mBlockIndex];
mIndex=column-nCols;
mBlock=matrix.blocks[++mBlockIndex];
mIndex=column-nCols;

if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mBlock=matrix.blocks[++mBlockIndex];
mIndex=column-nCols;
mIndex+=column;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mBlock=matrix.blocks[++mBlockIndex];
mBlock=matrix.blocks[++mBlockIndex];
mIndex=column-nCols;

mIndex+=column;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mIndex=column-nCols;
mBlock=matrix.blocks[++mBlockIndex];
mIndex=column-nCols;

mIndex+=column;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<data.length;++i){
mBlock=matrix.blocks[++mBlockIndex];
mIndex=column-nCols;
mBlock=matrix.blocks[++mBlockIndex];
mIndex=column-nCols;

mIndex+=column;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkRowIndex(nCols);
checkColumnIndex(column);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data==null){
System.arraycopy(subMatrix,0,data,0,subMatrix.length);
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
if(data==null){
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
if(data==null){
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((data==null)||(data.length<2)){
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(interpolator.polynoms==null){
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(polynoms==null){
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data==null){
currentDegree=-1;
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
subMatrix=null;
if(data==null){
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data==null){
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
nextColumn=i;
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data==null){
max=row;
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data==null){
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
mt[0]=mt[N-1];
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix==null){
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(startConfiguration==null){
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data==FULL){
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
column=nCols-1;
if(data==null){
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
column=nCols-1;
if(data==FULL){
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data==null){
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[interpolatedState.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data==null){
v2=new double[interpolatedState.length];
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data==null){
v3=new double[interpolatedState.length];
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data==null){
v4=new double[interpolatedState.length];
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data==null){
v2=new double[interpolatedState.length];
v3=new double[interpolatedState.length];
v4=new double[interpolatedState.length];

if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data==null){
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
nearest=i;
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data==null){
costPerStep=new int[column];
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data==null){
coeff=new double[column][];
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data==null){
costPerTimeUnit=new double[column];
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data==null){
optimalStep=new double[column];
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data==null){
costPerStep=new int[column];
coeff=new double[column][];
costPerTimeUnit=new double[column];
optimalStep=new double[column];

if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}
}else {
super.setSubMatrix(subMatrix,row,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.Array2DRowRealMatrix,315
org.apache.commons.math.linear.Array2DRowRealMatrix,320
org.apache.commons.math.linear.Array2DRowRealMatrix,325
========
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=d.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols>0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows>nRows){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>nRows){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("insufficient data: only {0} rows and {1} columns.",column,nRows);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("cannot discard {0} elements from a {1} elements array",row,column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(row>0){
throw MathRuntimeException.createIllegalArgumentException("cannot discard {0} elements from a {1} elements array",row,column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("expected array length = {0}, must be at least 2",expected.length);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("observed array length = {0}, must be at least 2",observed1.length);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("invalid row dimension: {0} (must be at least 2)",in.length);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("two or more values required in each category, one has {0}",array.length);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dimensionSize.length>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("some dimensions don\'t match: {0} != {1}",0,dimensionSize.length);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("{0} points are required, got only {1}",2,x.length);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("spline partition must have at least {0} points, got {1}",2,knots.length);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("{0} points are required, got only {1}",3,x.length);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",data.length,column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length>0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",data.length,column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",column,subRow.length);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}",refI.length,column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}",column,startConfiguration.length);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("input arrays must have the same positive length ({0} and {1})",column,sample2.length);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("input arrays must have the same length and at least two elements ({0} and {1})",column,sample2.length);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("position {0} and size {1} don\'t fit to the size of the input array {2}",nRows,column,d.length);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>nRows){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("input values array is null");
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rowsCount>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=coefficients.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("empty polynomials coefficients array");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==1){
return new double[]{0};
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(e>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("cannot raise an integral value to a negative power ({0}^{1})",nRows,column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,column,1);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(len>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("length must be positive ({0})",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(mean>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("the Poisson mean must be positive ({0})",data);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sigma>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("standard deviation must be positive ({0})",data);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("mean must be positive ({0})",data);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(mean>0){
throw MathRuntimeException.createIllegalArgumentException("mean must be positive ({0})",data);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("sample size must be positive ({0})",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k>0){
throw MathRuntimeException.createIllegalArgumentException("sample size must be positive ({0})",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>0){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rowDimension>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("invalid row dimension {0} (must be positive)",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(columnDimension>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("invalid column dimension {0} (must be positive)",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(begin>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("start position cannot be negative ({0})",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("length cannot be negative ({0})",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length>0){
throw MathRuntimeException.createIllegalArgumentException("length cannot be negative ({0})",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("{0} values have been added before statistic is configured",serialVersionUID);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>0){
throw MathRuntimeException.createIllegalStateException("{0} values have been added before statistic is configured",serialVersionUID);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nSteps==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maximumIterations>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("bad value for maximum iterations number: {0}",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("polynomial degree must be positive: degree={0}",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>0){
throw MathRuntimeException.createIllegalArgumentException("polynomial degree must be positive: degree={0}",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(brightnessExponent>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("brightness exponent should be positive or null, but got {0}",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(microsphereElements>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("number of microsphere elements must be positive, but got {0}",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(trials>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("number of trials must be non-negative ({0})",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(successes>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("number of successes must be non-negative ({0})",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("invalid number of elements {0} (must be positive)",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>0){
throw MathRuntimeException.createIllegalArgumentException("invalid number of elements {0} (must be positive)",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(s>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("invalid exponent {0} (must be positive)",data);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(degreesOfFreedom>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("degrees of freedom must be positive ({0})",data);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(alpha>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("shape must be positive ({0})",data);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(beta>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("scale must be positive ({0})",data);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(p>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(num>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(size>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("population size must be positive ({0})",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(size>0){
throw MathRuntimeException.createIllegalArgumentException("sample size must be positive ({0})",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sd>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(s>0){
throw MathRuntimeException.createIllegalArgumentException("scale must be positive ({0})",data);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("alpha must be positive ({0})",data);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(alpha>0){
throw MathRuntimeException.createIllegalArgumentException("alpha must be positive ({0})",data);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("beta must be positive ({0})",data);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(beta>0){
throw MathRuntimeException.createIllegalArgumentException("beta must be positive ({0})",data);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(r>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("negative complex module {0}",data);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute nth root for null or negative n: {0}",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute nth root for null or negative n: {0}",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("must have n >= 0 for binomial coefficient (n,k), got n = {0}",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>0){
throw MathRuntimeException.createIllegalArgumentException("must have n >= 0 for binomial coefficient (n,k), got n = {0}",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("must have n >= 0 for n!, got n = {0}",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>0){
throw MathRuntimeException.createIllegalArgumentException("must have n >= 0 for n!, got n = {0}",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(expansion>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("index ({0}) is not positive",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i>0){
throw MathRuntimeException.createIllegalArgumentException("index ({0}) is not positive",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("sample size ({0}) exceeds collection size ({1})");
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows>0){
throw MathRuntimeException.createIllegalArgumentException("sample size ({0}) exceeds collection size ({1})");
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>0){
throw MathRuntimeException.createIllegalArgumentException("sample size ({0}) exceeds collection size ({1})");
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(contraction>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(initialCapacity>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("initial capacity ({0}) is not positive",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(windowSize>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>INFINITE_WINDOW){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("window size must be positive ({0})",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(expansionMode>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(MULTIPLICATIVE_MODE>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>ADDITIVE_MODE){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("unsupported expansion mode {0}, supported modes are {1} ({2}) and {3} ({4})",column,MULTIPLICATIVE_MODE,"MULTIPLICATIVE_MODE",ADDITIVE_MODE,"ADDITIVE_MODE");
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minimalIterationCount>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",nRows,column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkRowIndex(row);
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkColumnIndex(column);
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkRowIndex(nRows+row-1);
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkColumnIndex(column+column-1);
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>=0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lower>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("upper bound ({0}) must be greater than lower bound ({1})",column,nRows);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows>=0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) exceeds n ({1})",nRows,column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dimension>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",column,nRows);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>values.length){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("Different number of weights and values");
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length>0){
throw MathRuntimeException.createIllegalArgumentException("Different number of weights and values");
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",data,data);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lower>0){
throw MathRuntimeException.createIllegalArgumentException("endpoints do not specify an interval: [{0}, {1}]",data,data);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x0>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("lower endpoint ({0}) must be less than or equal to upper endpoint ({1})",data,data);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(numberOfSuccesses>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("number of successes ({0}) must be less than or equal to population size ({1})",column,nRows);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sampleSize>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("sample size ({0}) must be less than or equal to population size ({1})",column,nRows);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("must have n >= k for binomial coefficient (n,k), got n = {0}, k = {1}",column,nRows);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>nRows){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("out of range root of unity index {0} (must be in [{1};{2}])",column,0,nRows-1);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>nRows){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("out of bounds quantile value: {0}, must be in (0, 100]",data);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(p>0){
throw MathRuntimeException.createIllegalArgumentException("out of bounds quantile value: {0}, must be in (0, 100]",data);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(y0>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(y1>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("function values at endpoints do not have different signs, "+"endpoints: [{0}, {1}], values: [{2}, {3}]",data,data,data,data);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column+nRows>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("subarray ends after array end");
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(begin>values.length){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(begin>0){
throw MathRuntimeException.createIllegalArgumentException("subarray ends after array end");
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>values.length){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>0){
throw MathRuntimeException.createIllegalArgumentException("subarray ends after array end");
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>values.length){
throw MathRuntimeException.createIllegalArgumentException("subarray ends after array end");
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(begin>values.length){
throw MathRuntimeException.createIllegalArgumentException("subarray ends after array end");
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>values.length){
throw MathRuntimeException.createIllegalArgumentException("subarray ends after array end");
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,getColumnDimension());
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(refLength>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(omegaCount>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("roots of unity have not been computed yet");
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute 0-th root of unity, indefinite result");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute 0-th root of unity, indefinite result");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("empty polynomials coefficients array");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=f.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
if(nRows==1){
new double[f.length][0]=0.0;
return transformed;
}
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
transformed[0]=0.0;
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("propagation direction mismatch");
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=columnData.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(initial>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lowerBound>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(upperBound>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",data,data,data);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("out of bounds significance level {0}, must be between {1} and {2}",data,0.0,1.0);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(alpha>0){
throw MathRuntimeException.createIllegalArgumentException("out of bounds significance level {0}, must be between {1} and {2}",data,0.0,1.0);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("out of bounds significance level {0}, must be between {1} and {2}",data,0,0.5);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(alpha>0){
throw MathRuntimeException.createIllegalArgumentException("out of bounds significance level {0}, must be between {1} and {2}",data,0,0.5);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("out of bounds significance level {0}, must be between {1} and {2}",data,0.0,0.5);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(alpha>0){
throw MathRuntimeException.createIllegalArgumentException("out of bounds significance level {0}, must be between {1} and {2}",data,0.0,0.5);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range",data,0.0,1.0);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(p>0){
throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range",data,0.0,1.0);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maximalIterationCount>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",0,64);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",0,32);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(maximalIterationCount>0){
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",0,32);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=rowData.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw new NonSquareMatrixException(column,nRows);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=column;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=column;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw new MatrixIndexException("column index {0} out of allowed range [{1}, {2}]",column,0,getColumnDimension()-1);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=qrt.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isNonSingular()){
throw new SingularMatrixException();
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
MatrixUtils.checkColumnIndex(this,column);
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
checkColumnIndex(column);
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("arrays must have the same length and both must have at "+"least two elements. xArray has size {0}, yArray has {1} elements",column,yArray.length);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw new OptimizationException("sample contains {0} observed points, at least {1} are required",observations.length,4);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",getDimension(),column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols>nRows){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(j>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(j>nRows){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final double nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final double nRows=f.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=currentState.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
try{
finalizeStep();
}catch (DerivativeException e) {
  throw MathRuntimeException.createIOException(e);
}

 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=xval.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw new MathException("Loess expects at least 1 point");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
if(xval.length!=yval.length){
throw new MathException("Loess expects the abscissa and ordinate arrays "+"to be of the same size, ",xval.length,yval.length);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows>0){
throw new NonSquareMatrixException(column,nRows);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>nRows){
throw new NonSquareMatrixException(column,nRows);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows>nRows){
throw new NonSquareMatrixException(column,nRows);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw new DimensionMismatchException(mean.length,column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw new DimensionMismatchException(xvalI.length,column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((column+(nRows+1))>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(startIndex>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(numElements>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((column+nRows)>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
row=1;
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows>0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>nRows){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows>nRows){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=data.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
if(nRows==1){
new Complex[nRows][0]=data[0];
return f;
}
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
f[0]=data[0];
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
verifyDataSet(data);
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=data.length;
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(value==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
MatrixUtils.checkRowIndex(this,row);
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
MatrixUtils.checkColumnIndex(this,column);
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
MatrixUtils.checkRowIndex(this,row);
 final double nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
MatrixUtils.checkColumnIndex(this,column);
 final double nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
MatrixUtils.checkRowIndex(this,row);
MatrixUtils.checkColumnIndex(this,column);
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
MatrixUtils.checkRowIndex(this,row);
MatrixUtils.checkColumnIndex(this,column);
 final double nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final double nRows=subMatrix.length;
if(value==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
MatrixUtils.checkRowIndex(this,row);
 final int nRows=subMatrix.length;
if(value==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
MatrixUtils.checkColumnIndex(this,column);
 final int nRows=subMatrix.length;
if(value==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
MatrixUtils.checkRowIndex(this,row);
 final double nRows=subMatrix.length;
if(value==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
MatrixUtils.checkColumnIndex(this,column);
 final double nRows=subMatrix.length;
if(value==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
MatrixUtils.checkRowIndex(this,row);
MatrixUtils.checkColumnIndex(this,column);
 final int nRows=subMatrix.length;
if(value==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
MatrixUtils.checkRowIndex(this,row);
MatrixUtils.checkColumnIndex(this,column);
 final double nRows=subMatrix.length;
if(value==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=upperBounds.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(i==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((nRows+column)>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(startIndex>=0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(outIndex>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mIndex>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(j==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(si==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw new SingularMatrixException();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=pivot.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>MULTIPLICATIVE_MODE){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=eigenvectors.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iterations>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=counts.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final boolean nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(colIndex>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=point.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
subMatrix=(column<0)?null:new double[kMax][];
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
checkVectorDimensions(v.length);
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
checkVectorDimensions(v.length);
 final double nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
checkRowIndex(row);
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
checkColumnIndex(column);
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
checkRowIndex(row);
checkColumnIndex(column);
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=main.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=y0.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
resetEvaluations();
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("cannot raise an integral value to a negative power ({0}^{1})",nRows,serialVersionUID);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("cannot raise an integral value to a negative power ({0}^{1})",serialVersionUID,column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(e>0){
throw MathRuntimeException.createIllegalArgumentException("cannot raise an integral value to a negative power ({0}^{1})",serialVersionUID,column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("cannot raise an integral value to a negative power ({0}^{1})",serialVersionUID,serialVersionUID);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(e>0){
throw MathRuntimeException.createIllegalArgumentException("cannot raise an integral value to a negative power ({0}^{1})",serialVersionUID,serialVersionUID);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
if(subMatrix==null){
throw new NullPointerException();
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
if(subMatrix==null){
throw new NullPointerException();
}
 final int nRows=d.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(m>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=d.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
 final int nRows=d.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols>0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
 final int nRows=d.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dimensionSize.length>0){
throw MathRuntimeException.createIllegalArgumentException("some dimensions don\'t match: {0} != {1}",0,dimensionSize.length);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>0){
throw MathRuntimeException.createIllegalArgumentException("some dimensions don\'t match: {0} != {1}",0,dimensionSize.length);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(expansionMode==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==MULTIPLICATIVE_MODE){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,column,1);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(len>0){
throw MathRuntimeException.createIllegalArgumentException("length must be positive ({0})",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rowDimension>0){
throw MathRuntimeException.createIllegalArgumentException("invalid row dimension {0} (must be positive)",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(columnDimension>0){
throw MathRuntimeException.createIllegalArgumentException("invalid column dimension {0} (must be positive)",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(degreesOfFreedom>0){
throw MathRuntimeException.createIllegalArgumentException("degrees of freedom must be positive ({0})",data);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=householderVectors.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(idx==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
resetTables(row);
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
column=row;
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setInterpolatedTime(data);
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw new EstimationException("no degrees of freedom ({0} measurements, {1} parameters)",column,nRows);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(m>nRows){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(m>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final double nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>nRows){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final double nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(m>nRows){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final double nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows>0){
throw MathRuntimeException.createIllegalArgumentException("insufficient data: only {0} rows and {1} columns.",column,nRows);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>nRows){
throw MathRuntimeException.createIllegalArgumentException("insufficient data: only {0} rows and {1} columns.",column,nRows);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows>nRows){
throw MathRuntimeException.createIllegalArgumentException("insufficient data: only {0} rows and {1} columns.",column,nRows);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("upper bound ({0}) must be greater than lower bound ({1})",serialVersionUID,serialVersionUID);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lower>0){
throw MathRuntimeException.createIllegalArgumentException("upper bound ({0}) must be greater than lower bound ({1})",serialVersionUID,serialVersionUID);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lower>=0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>=0){
throw MathRuntimeException.createIllegalArgumentException("upper bound ({0}) must be greater than lower bound ({1})",column,nRows);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows>0){
throw MathRuntimeException.createIllegalArgumentException("upper bound ({0}) must be greater than lower bound ({1})",column,nRows);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lower>0){
throw MathRuntimeException.createIllegalArgumentException("upper bound ({0}) must be greater than lower bound ({1})",column,nRows);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows>=0){
throw MathRuntimeException.createIllegalArgumentException("upper bound ({0}) must be greater than lower bound ({1})",column,nRows);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lower>=0){
throw MathRuntimeException.createIllegalArgumentException("upper bound ({0}) must be greater than lower bound ({1})",column,nRows);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("upper bound ({0}) must be greater than lower bound ({1})",data,data);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lower>0){
throw MathRuntimeException.createIllegalArgumentException("upper bound ({0}) must be greater than lower bound ({1})",data,data);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",column,nRows);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("lower endpoint ({0}) must be less than or equal to upper endpoint ({1})",column,nRows);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x0>nRows){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x0>0){
throw MathRuntimeException.createIllegalArgumentException("lower endpoint ({0}) must be less than or equal to upper endpoint ({1})",data,data);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>0){
throw MathRuntimeException.createIllegalArgumentException("out of range root of unity index {0} (must be in [{1};{2}])",column,0,nRows-1);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>nRows){
throw MathRuntimeException.createIllegalArgumentException("out of range root of unity index {0} (must be in [{1};{2}])",column,0,nRows-1);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>nRows){
throw MathRuntimeException.createIllegalArgumentException("out of range root of unity index {0} (must be in [{1};{2}])",column,0,nRows-1);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
checkVectorDimensions(v.length);
 final int nRows=data.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
if((column+1>=row)&&(data<=Math.max(data,data*(Math.abs(data)+Math.abs(data))))){
setResult(data,i);
return data;
}
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
setResult(data,column);
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
nRows=Math.max((int)(Math.min(4,Math.pow(data/Math.max(data,data*(Math.abs(data)+Math.abs(data))),0.5/abscissas.length))*n),n+1);
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
data=data;
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final double nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
data=data;
if(i>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minimalIterationCount>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final double nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
data=data;
if(minimalIterationCount>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
data=data;
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final double nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
data=data;
if(i>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final double nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
data=data;
if(minimalIterationCount>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final double nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=simplex.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",column,subRow.length);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(refLength>0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(omegaCount>0){
throw MathRuntimeException.createIllegalStateException("roots of unity have not been computed yet");
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=row;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(right>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=c.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",destination.length,subMatrix[0].length,nRows,column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=realEigenvalues.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=sums.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
checkVectorDimensions(v.length);
 final int nRows=subMatrix.length;
if(idx==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>0){
throw MathRuntimeException.createIllegalArgumentException("position {0} and size {1} don\'t fit to the size of the input array {2}",nRows,column,d.length);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>nRows){
throw MathRuntimeException.createIllegalArgumentException("position {0} and size {1} don\'t fit to the size of the input array {2}",nRows,column,d.length);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>nRows){
throw MathRuntimeException.createIllegalArgumentException("position {0} and size {1} don\'t fit to the size of the input array {2}",nRows,column,d.length);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=x.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(startIndex>nRows){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy((coefficients.length<p.coefficients.length)?p.coefficients:coefficients,column,new double[nRows],lowLength,nRows-lowLength);
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=optima.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>nRows){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalArgumentException("wrong array shape (block length = {0}, expected {1})",subMatrix[row].column,nRows*blockWidth(row));
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(coefficients.length<p.coefficients.length){
for(int column=column;i<nRows;++i){
new double[nRows][i]=-p.coefficients[i];
}
}else {
System.arraycopy(coefficients,lowLength,newCoefficients,lowLength,highLength-lowLength);
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=outBlock.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=mBlock.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(outIndex>=0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mIndex>=0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maximalIterationCount>0){
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",0,64);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data+0.01*data<=0.0){
den=1.0;
}
if(column>0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",column);
}
 final int nRows=subMatrix.length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.Array2DRowRealMatrix,326
org.apache.commons.math.linear.Array2DRowRealMatrix,330
========
if(nRows==nCols){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("insufficient data: only {0} rows and {1} columns.",nRows,nCols);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("cannot discard {0} elements from a {1} elements array",column,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(v.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(v.length!=nRows){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v.length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v.length==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v.length!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length!=nRows){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(d.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("vector must have at least one element");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(d.length==0){
throw MathRuntimeException.createIllegalArgumentException("vector must have at least one element");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("vector must have at least one element");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("empty polynomials coefficients array");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("empty polynomials coefficients array");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("no data");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("no data");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
transformed[0]=0.0;
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(column==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(nRows==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(nRows==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(nRows==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(column==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(row>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(nRows==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("input arrays must have the same positive length ({0} and {1})",nRows,sample2.length);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("input arrays must have the same length and at least two elements ({0} and {1})",nRows,sample2.length);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",data.length,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(data.length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",data.length,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(data.length==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",data.length,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",data.length,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data.length!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",data.length,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",data.length,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subRow.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nRows,subRow.length);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(refI.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}",refI.length,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}",nRows,startConfiguration.length);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("position {0} and size {1} don\'t fit to the size of the input array {2}",nCols,nRows,d.length);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==nCols){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rowsCount==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dimension==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(len==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("length must be positive ({0})",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("sample size must be positive ({0})",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k==0){
throw MathRuntimeException.createIllegalArgumentException("sample size must be positive ({0})",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rowDimension==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("invalid row dimension {0} (must be positive)",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(columnDimension==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("invalid column dimension {0} (must be positive)",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(begin==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("start position cannot be negative ({0})",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("length cannot be negative ({0})",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("length cannot be negative ({0})",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nSteps==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maximumIterations==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("bad value for maximum iterations number: {0}",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("polynomial degree must be positive: degree={0}",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("polynomial degree must be positive: degree={0}",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(brightnessExponent==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("brightness exponent should be positive or null, but got {0}",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(microsphereElements==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("number of microsphere elements must be positive, but got {0}",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(trials==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("number of trials must be non-negative ({0})",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(successes==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("number of successes must be non-negative ({0})",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("invalid number of elements {0} (must be positive)",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("invalid number of elements {0} (must be positive)",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(num==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(size==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("population size must be positive ({0})",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(size==0){
throw MathRuntimeException.createIllegalArgumentException("sample size must be positive ({0})",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute nth root for null or negative n: {0}",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute nth root for null or negative n: {0}",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("must have n >= 0 for binomial coefficient (n,k), got n = {0}",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("must have n >= 0 for binomial coefficient (n,k), got n = {0}",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("must have n >= 0 for n!, got n = {0}",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("must have n >= 0 for n!, got n = {0}",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("index ({0}) is not positive",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i==0){
throw MathRuntimeException.createIllegalArgumentException("index ({0}) is not positive",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(e==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("cannot raise an integral value to a negative power ({0}^{1})",column,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("equals vertices {0} and {1} in simplex configuration",nRows,j+1);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(refLength==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("covariance matrix is null");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("input values array is null");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("input weights array is null");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(countSum1==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("observed counts are all 0 in first observed array");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(countSum2==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("observed counts are all 0 in second observed array");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute 0-th root of unity, indefinite result");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute 0-th root of unity, indefinite result");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(normProduct==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("zero norm for rotation defining vector");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("empty polynomials coefficients array");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("function is null");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("null imaginary format");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("null real format");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("whole format can not be null");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("null fraction");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("denominator format can not be null");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("numerator format can not be null");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==column){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("out of range root of unity index {0} (must be in [{1};{2}])",column,0,nRows-1);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k==column){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k==0){
throw MathRuntimeException.createIllegalArgumentException("out of range root of unity index {0} (must be in [{1};{2}])",column,0,nRows-1);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==column){
throw MathRuntimeException.createIllegalArgumentException("out of range root of unity index {0} (must be in [{1};{2}])",column,0,nRows-1);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k==column){
throw MathRuntimeException.createIllegalArgumentException("out of range root of unity index {0} (must be in [{1};{2}])",column,0,nRows-1);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("sample size ({0}) exceeds collection size ({1})");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k==0){
throw MathRuntimeException.createIllegalArgumentException("sample size ({0}) exceeds collection size ({1})");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(u1u1==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(expansionMode==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(MULTIPLICATIVE_MODE==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==ADDITIVE_MODE){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("unsupported expansion mode {0}, supported modes are {1} ({2}) and {3} ({4})",nRows,MULTIPLICATIVE_MODE,"MULTIPLICATIVE_MODE",ADDITIVE_MODE,"ADDITIVE_MODE");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minimalIterationCount==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",column,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==column){
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",column,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(windowSize==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==INFINITE_WINDOW){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("window size must be positive ({0})",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("window size must be positive ({0})",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lower==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("upper bound ({0}) must be greater than lower bound ({1})",nRows,nCols);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) exceeds n ({1})",nCols,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nRows,nCols);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(weights.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==values.length){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("Different number of weights and values");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("Different number of weights and values");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("Different number of weights and values");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=0){
throw MathRuntimeException.createIllegalArgumentException("Different number of weights and values");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(numberOfSuccesses==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("number of successes ({0}) must be less than or equal to population size ({1})",nRows,nCols);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sampleSize==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("sample size ({0}) must be less than or equal to population size ({1})",nRows,nCols);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("must have n >= k for binomial coefficient (n,k), got n = {0}, k = {1}",nRows,nCols);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==nCols){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("subarray ends after array end");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(begin==values.length){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(begin==0){
throw MathRuntimeException.createIllegalArgumentException("subarray ends after array end");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==values.length){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("subarray ends after array end");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==values.length){
throw MathRuntimeException.createIllegalArgumentException("subarray ends after array end");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(begin==values.length){
throw MathRuntimeException.createIllegalArgumentException("subarray ends after array end");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==values.length){
throw MathRuntimeException.createIllegalArgumentException("subarray ends after array end");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maximalIterationCount==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",0,64);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",0,32);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(maximalIterationCount==0){
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",0,32);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("propagation direction mismatch");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
transformed[0]=0.5*(f[0]+f[1]);
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
transformed[1]=0.5*(f[0]-f[1]);
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
transformed[0]=0.5*(f[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);

throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(!FastFourierTransformer.isPowerOf2(nCols)){
throw MathRuntimeException.createIllegalArgumentException("{0} is not a power of 2 plus one",f.length);
}
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(b.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isNonSingular()){
throw new SingularMatrixException();
}
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("function values at endpoints do not have different signs.  "+"Endpoints: [{0}, {1}], Values: [{2}, {3}]",data,data,data,data);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",getDimension(),nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw new NonSquareMatrixException(nRows,nCols);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows!=nCols){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(row==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
data=new BigDecimal[nRows][nCols];
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(subMatrix,0,data,0,subMatrix.length);
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(row==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(subMatrix,0,data,0,subMatrix.length);
if(column==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(row==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(subMatrix,0,data,0,subMatrix.length);
if(nRows==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(row==0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(subMatrix,0,data,0,subMatrix.length);
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(row==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(subMatrix,0,data,0,subMatrix.length);
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(row==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(subMatrix,0,data,0,subMatrix.length);
if(column==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(row==0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(subMatrix,0,data,0,subMatrix.length);
if(column==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(row==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(subMatrix,0,data,0,subMatrix.length);
if(column==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(row==0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(subMatrix,0,data,0,subMatrix.length);
if(nRows==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(row==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(subMatrix,0,data,0,subMatrix.length);
if(nRows==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(subMatrix,0,data,0,subMatrix.length);
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(row==0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(row==0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(subMatrix,0,data,0,subMatrix.length);
if(column==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(row==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(subMatrix,0,data,0,subMatrix.length);
if(column==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(subMatrix,0,data,0,subMatrix.length);
if(column==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(row==0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(subMatrix,0,data,0,subMatrix.length);
if(nRows==0){
throw MathRuntimeException.createIllegalStateException("first {0} columns are not initialized yet",nRows);
}
 final int nCols=subMatrix[0].length;
if(row==0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(array.length!=nRows){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nRows,1);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(coefficients.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
if(coefficients.length==1){
return "0";
}
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(f.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
nCols=1;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows!=0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw new NonSquareMatrixException(nRows,nCols);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==nCols){
throw new NonSquareMatrixException(nRows,nCols);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows!=nCols){
throw new NonSquareMatrixException(nRows,nCols);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(2*nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(j==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw new IntegratorException("dimensions mismatch: state vector has dimension {0},"+" absolute tolerance vector has dimension {1}",y0.length,vecAbsoluteTolerance.length);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw new IntegratorException("dimensions mismatch: state vector has dimension {0},"+" relative tolerance vector has dimension {1}",y0.length,vecRelativeTolerance.length);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw new MathException("Loess expects at least 1 point");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(xval.length!=yval.length){
throw new MathException("Loess expects the abscissa and ordinate arrays "+"to be of the same size, ",xval.length,yval.length);
}
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(startIndex==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(numElements==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(jacobian.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objective.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
if(nCols==1){
new Complex[nCols][0]=data[0];
return f;
}
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
f[0]=data[0];
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
verifyDataSet(data);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mean.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw new DimensionMismatchException(mean.length,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(xvalI.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw new DimensionMismatchException(xvalI.length,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(j==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(i==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final double nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iterations==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bytesOut==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
if(nRows==bytes.length){
return ;
}
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(colIndex==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(outIndex==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mIndex==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(len==0){
throw MathRuntimeException.createIllegalArgumentException("length must be positive ({0})",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rowDimension==0){
throw MathRuntimeException.createIllegalArgumentException("invalid row dimension {0} (must be positive)",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(columnDimension==0){
throw MathRuntimeException.createIllegalArgumentException("invalid column dimension {0} (must be positive)",nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("cannot raise an integral value to a negative power ({0}^{1})",serialVersionUID,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(e==0){
throw MathRuntimeException.createIllegalArgumentException("cannot raise an integral value to a negative power ({0}^{1})",serialVersionUID,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(si==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw new SingularMatrixException();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(subMatrix==null){
throw new NullPointerException();
}
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(subMatrix==null){
throw new NullPointerException();
}
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(subMatrix==null){
throw new NullPointerException();
}
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(subMatrix==null){
throw new NullPointerException();
}
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(idx==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nRows,1);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=nRows){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nRows,1);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nRows,1);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nRows,1);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nRows,1);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nRows,1);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==nCols){
throw MathRuntimeException.createIllegalArgumentException("insufficient data: only {0} rows and {1} columns.",nRows,nCols);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(refLength==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==MULTIPLICATIVE_MODE){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(m==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(right==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(expansionMode==MULTIPLICATIVE_MODE){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(idx==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
checkVectorDimensions(v.length);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lower==0){
throw MathRuntimeException.createIllegalArgumentException("upper bound ({0}) must be greater than lower bound ({1})",nRows,nCols);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nRows,nCols);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nRows,nCols);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nRows,nCols);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nRows,nCols);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nRows,nCols);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x0==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("lower endpoint ({0}) must be less than or equal to upper endpoint ({1})",nRows,nCols);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw new EstimationException("no degrees of freedom ({0} measurements, {1} parameters)",nRows,nCols);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(m==nCols){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maximalIterationCount==0){
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",0,64);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",destination.length,subMatrix[0].length,nCols,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(difference==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(relativeThreshold==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
if((data>(data*data))&&(difference>data)){
return false;
}
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(currentDegree==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
if((column+1>=nRows)&&(data<=Math.max(data,data*(Math.abs(data)+Math.abs(data))))){
setResult(data,i);
return data;
}
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
setResult(data,column);
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
nCols=Math.max((int)(Math.min(4,Math.pow(data/Math.max(data,data*(Math.abs(data)+Math.abs(data))),0.5/abscissas.length))*n),n+1);
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
data=data;
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
data=data;
if(i==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
data=data;
if(minimalIterationCount==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v.length!=nRows){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nRows);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subRow.length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nRows,subRow.length);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subRow.length==0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nRows,subRow.length);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nRows,subRow.length);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subRow.length!=0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nRows,subRow.length);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nRows,subRow.length);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
if((Math.abs(data-data)>(Math.max(Math.abs(data),Math.abs(data))*data))&&(difference>data)){
return false;
}
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("position {0} and size {1} don\'t fit to the size of the input array {2}",nCols,nRows,d.length);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==nCols){
throw MathRuntimeException.createIllegalArgumentException("position {0} and size {1} don\'t fit to the size of the input array {2}",nCols,nRows,d.length);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==nCols){
throw MathRuntimeException.createIllegalArgumentException("position {0} and size {1} don\'t fit to the size of the input array {2}",nCols,nRows,d.length);
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(index==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(difference==0){
if((Math.abs(data-data)>(Math.max(Math.abs(data),Math.abs(data))*data))&&(difference>data)){
return false;
}
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(size==0){
if((Math.abs(data-data)>(Math.max(Math.abs(data),Math.abs(data))*data))&&(difference>data)){
return false;
}
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(relativeThreshold==0){
if((Math.abs(data-data)>(Math.max(Math.abs(data),Math.abs(data))*data))&&(difference>data)){
return false;
}
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
 final int nCols=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.Array2DRowRealMatrix,331
org.apache.commons.math.linear.Array2DRowRealMatrix,334
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nCols][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][length];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x.length<3){
throw MathRuntimeException.createIllegalArgumentException("{0} points are required, got only {1}",3,x.length);
}
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(refI.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}",refI.length,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[column][i]!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(true){
throw MathRuntimeException.createIllegalArgumentException("equals vertices {0} and {1} in simplex configuration",column,nRows);
}
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[column][i]!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(true){
throw MathRuntimeException.createIllegalArgumentException("equals vertices {0} and {1} in simplex configuration",column,nRows);
}
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(true){
throw MathRuntimeException.createIllegalArgumentException("equals vertices {0} and {1} in simplex configuration",column,nRows);
}
if(subMatrix[column][i]!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(true){
throw MathRuntimeException.createIllegalArgumentException("equals vertices {0} and {1} in simplex configuration",column,nRows);
}
if(subMatrix[column][i]!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==column){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("cannot discard {0} elements from a {1} elements array",nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==column){
throw MathRuntimeException.createIllegalArgumentException("cannot discard {0} elements from a {1} elements array",nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(knots.length-1!=polynomials.length){
throw MathRuntimeException.createIllegalArgumentException("number of polynomial interpolants must match the number of segments ({0} != {1} - 1)",polynomials.length,knots.length);
}
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.nCols=knots.length-1;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(refLength==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
MatrixUtils.checkSubMatrixIndex(this,row,row+subMatrix.length-1,column,column+nCols-1);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkRowIndex(this,row);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkColumnIndex(this,column);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkRowIndex(this,nRows+row-1);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkRowIndex(this,row);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkColumnIndex(this,column);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkRowIndex(this,nRows+row-1);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkRowIndex(this,row);
MatrixUtils.checkColumnIndex(this,column);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkRowIndex(this,row);
MatrixUtils.checkRowIndex(this,nRows+row-1);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkColumnIndex(this,column);
MatrixUtils.checkRowIndex(this,nRows+row-1);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkRowIndex(this,row);
MatrixUtils.checkColumnIndex(this,column);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkRowIndex(this,row);
MatrixUtils.checkRowIndex(this,nRows+row-1);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkColumnIndex(this,column);
MatrixUtils.checkRowIndex(this,nRows+row-1);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkRowIndex(this,row);
MatrixUtils.checkColumnIndex(this,column);
MatrixUtils.checkRowIndex(this,nRows+row-1);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkRowIndex(this,row);
MatrixUtils.checkColumnIndex(this,column);
MatrixUtils.checkRowIndex(this,nRows+row-1);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<in.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("equals vertices {0} and {1} in simplex configuration",nCols,j+1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][n];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
checkSubMatrixIndex(row,row+subMatrix.length-1,column,column+nCols-1);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length==0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix[i].length!=0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("polynomial degree must be positive: degree={0}",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("input arrays must have the same positive length ({0} and {1})",nCols,sample2.length);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("empty polynomials coefficients array");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("empty polynomials coefficients array");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("index ({0}) is not positive",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
column=nCols;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
throw MathRuntimeException.createIllegalArgumentException("index ({0}) is not positive",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("position {0} and size {1} don\'t fit to the size of the input array {2}",row,nCols,d.length);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
data=new double[nCols];
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<observed1.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("observed counts are both zero for entry {0}",i);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<observed1.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("observed counts are both zero for entry {0}",i);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,length);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v.length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v.length==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v.length!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",v.length,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("position {0} and size {1} don\'t fit to the size of the input array {2}",nCols,column,d.length);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==column){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("input arrays must have the same length and at least two elements ({0} and {1})",nCols,sample2.length);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("polynomial degree must be positive: degree={0}",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<xArray.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rowsCount==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
super();
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
out[col]=ZERO;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("position {0} and size {1} don\'t fit to the size of the input array {2}",column,nCols,d.length);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
data=buildArray(nCols);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}",nCols,startConfiguration.length);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<newPols.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
out[row]=getField().getZero();
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lower==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("upper bound ({0}) must be greater than lower bound ({1})",nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) exceeds n ({1})",nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==column){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) exceeds n ({1})",nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(numberOfSuccesses==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("number of successes ({0}) must be less than or equal to population size ({1})",nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==column){
throw MathRuntimeException.createIllegalArgumentException("number of successes ({0}) must be less than or equal to population size ({1})",nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sampleSize==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("sample size ({0}) must be less than or equal to population size ({1})",nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==column){
throw MathRuntimeException.createIllegalArgumentException("sample size ({0}) must be less than or equal to population size ({1})",nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("must have n >= k for binomial coefficient (n,k), got n = {0}, k = {1}",nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==column){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("must have n >= k for binomial coefficient (n,k), got n = {0}, k = {1}",nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==column){
throw MathRuntimeException.createIllegalArgumentException("must have n >= k for binomial coefficient (n,k), got n = {0}, k = {1}",nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==column){
throw MathRuntimeException.createIllegalArgumentException("must have n >= k for binomial coefficient (n,k), got n = {0}, k = {1}",nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(jWidth==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(begin==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==values.length){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("subarray ends after array end");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("subarray ends after array end");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(expansionMode==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(MULTIPLICATIVE_MODE==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==ADDITIVE_MODE){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("unsupported expansion mode {0}, supported modes are {1} ({2}) and {3} ({4})",nCols,MULTIPLICATIVE_MODE,"MULTIPLICATIVE_MODE",ADDITIVE_MODE,"ADDITIVE_MODE");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(windowSize==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==INFINITE_WINDOW){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("window size must be positive ({0})",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("window size must be positive ({0})",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(initial==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lowerBound==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(upperBound==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",length,data,data);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(initialCapacity==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("initial capacity ({0}) is not positive",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
out[col]=getField().getZero();
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("insufficient data: only {0} rows and {1} columns.",nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==column){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("insufficient data: only {0} rows and {1} columns.",nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==column){
throw MathRuntimeException.createIllegalArgumentException("insufficient data: only {0} rows and {1} columns.",nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==column){
throw MathRuntimeException.createIllegalArgumentException("insufficient data: only {0} rows and {1} columns.",nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(minimalIterationCount==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==column){
throw MathRuntimeException.createIllegalArgumentException("invalid iteration limits: min={0}, max={1}",nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("arrays must have the same length and both must have at "+"least two elements. xArray has size {0}, yArray has {1} elements",nCols,yArray.length);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,column);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkRowIndex(this,column);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkRowIndex(this,column);
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkRowIndex(this,column);
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,column);
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkRowIndex(this,column);
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,column);
if(length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,column);
if(length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkRowIndex(column);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=nCols){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=nCols){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("out of range root of unity index {0} (must be in [{1};{2}])",nCols,0,row-1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k==row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k==0){
throw MathRuntimeException.createIllegalArgumentException("out of range root of unity index {0} (must be in [{1};{2}])",nCols,0,row-1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==row){
throw MathRuntimeException.createIllegalArgumentException("out of range root of unity index {0} (must be in [{1};{2}])",nCols,0,row-1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k==row){
throw MathRuntimeException.createIllegalArgumentException("out of range root of unity index {0} (must be in [{1};{2}])",nCols,0,row-1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(xval.length!=yval.length){
throw new DimensionMismatchException(xval.length,yval.length);
}
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
column=subMatrix[0].length;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.nRows=brightnessExponent;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(len==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("length must be positive ({0})",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("sample size must be positive ({0})",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k==0){
throw MathRuntimeException.createIllegalArgumentException("sample size must be positive ({0})",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rowDimension==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("invalid row dimension {0} (must be positive)",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(columnDimension==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("invalid column dimension {0} (must be positive)",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("start position cannot be negative ({0})",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(begin==0){
throw MathRuntimeException.createIllegalArgumentException("start position cannot be negative ({0})",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("length cannot be negative ({0})",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("length cannot be negative ({0})",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maximumIterations==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("bad value for maximum iterations number: {0}",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(brightnessExponent==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("brightness exponent should be positive or null, but got {0}",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(microsphereElements==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("number of microsphere elements must be positive, but got {0}",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(trials==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("number of trials must be non-negative ({0})",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(successes==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("number of successes must be non-negative ({0})",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("invalid number of elements {0} (must be positive)",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("invalid number of elements {0} (must be positive)",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(num==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(size==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("population size must be positive ({0})",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(size==0){
throw MathRuntimeException.createIllegalArgumentException("sample size must be positive ({0})",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute nth root for null or negative n: {0}",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute nth root for null or negative n: {0}",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("must have n >= 0 for binomial coefficient (n,k), got n = {0}",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("must have n >= 0 for binomial coefficient (n,k), got n = {0}",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("must have n >= 0 for n!, got n = {0}",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("must have n >= 0 for n!, got n = {0}",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[y0.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,y0.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
resetEvaluations();
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subVector.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<simplex.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<ranks.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
firstStepAlreadyComputed=true;
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(startIndex==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<dimensionSize.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
vector[i]++;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<row;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
MatrixUtils.checkRowIndex(this,column);
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy((coefficients.length<p.coefficients.length)?p.coefficients:coefficients,nCols,new double[column],lowLength,column-lowLength);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(data[i]!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
MatrixUtils.checkRowIndex(this,column);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
MatrixUtils.checkRowIndex(this,column);
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<interpolator.yDotK.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
yDotK[k]=new double[nCols];
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<x.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<point.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(point[i]!=otherPoint[i]){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
checkRowIndex(column);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
checkRowIndex(row);
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=threshold){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<special.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<realEigenvalues.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkRowIndex(column);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkRowIndex(column);
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkRowIndex(column);
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<singularValues.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(coefficients.length<p.coefficients.length){
for(int i=nCols;i<Math.max(coefficients.length,p.coefficients.length);++i){
new double[Math.max(coefficients.length,p.coefficients.length)][i]=-p.coefficients[i];
}
}else {
System.arraycopy(coefficients,lowLength,newCoefficients,lowLength,highLength-lowLength);
}
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nCols,1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkColumnIndex(this,column);
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(array.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,column);
if(array.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,column);
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,column);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(array.length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,column);
if(array.length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,column);
if(length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,column);
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkColumnIndex(this,column);
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkColumnIndex(this,column);
if(array.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,column);
if(array.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,column);
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,column);
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,column);
if(array.length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,column);
if(array.length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,column);
if(length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,column);
if(length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkColumnIndex(column);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nCols,1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nCols,1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nCols,1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nCols,1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nCols,1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nCols,1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nCols,1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nCols,1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nCols,1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nCols,1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nCols,1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nCols,1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nCols,1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nCols,1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nCols,1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nCols,1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",array.length,1,nCols,1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
checkVectorDimensions(v.length);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data[0].row;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<root.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<a.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<dx2.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=r){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<values.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols!=column){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw new NonSquareMatrixException(nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw new NonSquareMatrixException(nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=column){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==column){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw new NonSquareMatrixException(nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw new NonSquareMatrixException(nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=column){
throw new NonSquareMatrixException(nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=column){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==column){
throw new NonSquareMatrixException(nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==column){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw new NonSquareMatrixException(nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==column){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw new NonSquareMatrixException(nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=column){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw new NonSquareMatrixException(nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==column){
throw new NonSquareMatrixException(nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==column){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw new NonSquareMatrixException(nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw new NonSquareMatrixException(nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=column){
throw new NonSquareMatrixException(nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==column){
throw new NonSquareMatrixException(nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw new NonSquareMatrixException(nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=column){
throw new NonSquareMatrixException(nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==column){
throw new NonSquareMatrixException(nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=column){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw new NonSquareMatrixException(nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==column){
throw new NonSquareMatrixException(nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=column){
throw new NonSquareMatrixException(nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=column){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw new NonSquareMatrixException(nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==column){
throw new NonSquareMatrixException(nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
if(data==0){
throw new SingularMatrixException();
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
outIndex+=nCols;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,row);
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkRowIndex(this,row);
if(array.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,row);
if(array.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,row);
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,row);
if(nCols==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,row);
if(array.length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,row);
if(length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,row);
if(nCols!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,row);
if(array.length!=nCols){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,row);
if(array.length==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,row);
if(length==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,row);
if(array.length!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,row);
if(length!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkRowIndex(row);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
outIndex+=nCols;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
outIndex+=nCols;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
outIndex+=nCols;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
outIndex+=nCols;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
outIndex+=nCols;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
outIndex+=nCols;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
outIndex+=nCols;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
outIndex+=nCols;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=nCols){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
outIndex+=nCols;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
outIndex+=nCols;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
outIndex+=nCols;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
outIndex+=nCols;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=0){
throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",1,array.length,1,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
outIndex+=nCols;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<v.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
checkVectorDimensions(v.length);
for(int i=0;i<v.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<diagonal.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
resetEvaluations();
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,y0.length);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<randomBytes.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<hash.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bytesOut==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
if(nCols==bytes.length){
return ;
}
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<wm.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getVT().walkInOptimizedOrder(new DefaultRealMatrixPreservingVisitor(){
  /** 
 * {@inheritDoc} 
 */
  @Override public void visit(  final int row,  final int column,  final double value){
    data[row][column]=value / singularValues[row];
  }
}
,0,i-1,0,nCols-1);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(right==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<xval.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<singularValues.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
if(data==0){
throw new SingularMatrixException();
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<p.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length==nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(i!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
list[target]=list[i];
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
list[i]=column;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
list[target]=list[i];
list[i]=column;

if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(i==nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=c.length;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<centroid.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(currentDegree==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=polynomials.length){
i--;
}
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
resetEvaluations();
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<optima.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<pivot.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<coefficients.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(column<0){
coefficients[i]=0;
continue;
}
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<newCoefficients.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<secondary.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=max){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<column;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][kMax];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
yDotK[k]=(nCols<0)?null:new double[nCols];
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
out[ranks[i].getPosition()]=column;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<y0.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
MatrixUtils.checkColumnIndex(this,column);
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
MatrixUtils.checkColumnIndex(this,column);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
MatrixUtils.checkColumnIndex(this,column);
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
MatrixUtils.checkColumnIndex(this,column);
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
checkColumnIndex(column);
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=nRows;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=nRows;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
checkColumnIndex(column);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<errors.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(m==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw new EstimationException("no degrees of freedom ({0} measurements, {1} parameters)",column,nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
Arrays.sort(new double[nCols]);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data>=data){
return new double[nCols][nCols-1];
}
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<observed.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,column);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<observations.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(i-1--!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
curr=observations[j];
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :

if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkColumnIndex(column);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkColumnIndex(column);
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data==0.0){
return data;
}
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=column;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=small){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw new NotPositiveDefiniteMatrixException();
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=column;i<row;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=delta){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=limit){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
if((i+1>=row)&&(Math.abs(data-data)<=Math.max(data,data*(Math.abs(data)+Math.abs(data))))){
setResult(data,i);
return data;
}
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
setResult(data,i);
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
oldt=data;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw new IllegalArgumentException("originalData and permutedData must contain the same objects.");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<sums.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],nRows,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
MatrixUtils.checkRowIndex(this,length);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
outIndex+=nCols;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],nRows,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=i){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkColumnIndex(this,column);
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkColumnIndex(this,column);
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MatrixUtils.checkColumnIndex(this,column);
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<column+row;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=column;i<column+row;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<after.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkColumnIndex(column);
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkColumnIndex(column);
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkColumnIndex(column);
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(data-data)<=data){
data=UnivariateRealSolverUtils.midpoint(min,max);
setResult(m,column);
return m;
}
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++column;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=p){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=i){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
MatrixUtils.checkRowIndex(this,length);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],nRows,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
MatrixUtils.checkRowIndex(this,length);
for(int i=0;i<data.length;++i){
outIndex+=nCols;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
MatrixUtils.checkRowIndex(this,length);
for(int i=0;i<data.length;++i){
outIndex+=nCols;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],nRows,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<measurements.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
data=data;
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
data=x1+data;
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
data=data-data;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
column++;
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<row;++i){
if(subMatrix[i].length==nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
sum=luRow[col];
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=column;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
sum=luRow[col];
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
luRow[col]=data;
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
sum=luRow[col];
luRow[col]=data;

System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][m];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
checkRowIndex(length);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nRows];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nRows];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[nRows][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[nRows][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[nRows][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nRows];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[nRows][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[nRows][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[nRows][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[nRows][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[nRows][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[nRows][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nRows];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[nRows][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[nRows][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[nRows][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[nRows][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows!=0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nRows==row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nRows];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nRows];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nRows];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[nRows][nRows];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[nRows][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nRows];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[nRows][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nRows];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[nRows][nRows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==row){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nRows][nRows];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[nRows][nRows];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[nRows][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[nRows][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[nRows][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[nRows][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[nRows][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[nRows][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nRows];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols!=0){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==row){
throw new NonSquareMatrixException(getRowDimension(),getColumnDimension());
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<=data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=minimalIterationCount){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
if((Math.abs(data-data)<=data*(Math.abs(data)+Math.abs(data)))||(delta<=data)){
setResult(data,i);
return data;
}
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<=nRows;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<=data.length;++i){
oldt=data;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
oldt=data;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<=nRows;++i){
oldt=data;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=column){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=j){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length==nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(i!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=column){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length==column){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(i!=column){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(i==nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(subMatrix[i].length==column){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(i!=column){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(i==column){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nCols;++i){
if(i==column){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
setStartConfiguration(new double[startPoint.length]);
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
checkRowIndex(length);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],nRows,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
checkRowIndex(length);
for(int i=0;i<data.length;++i){
outIndex+=nCols;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
checkRowIndex(length);
for(int i=0;i<data.length;++i){
outIndex+=nCols;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],nRows,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
scale=new double[y0.length];
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
if((Math.abs((4*data-data)/3.0-data)<=data*(Math.abs(data)+Math.abs((4*data-data)/3.0)))||(delta<=data)){
setResult((4*data-data)/3.0,i);
return data;
}
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
olds=(4*data-data)/3.0;
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
olds=(4*data-data)/3.0;
oldt=data;

if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<=data.length;++i){
if(subMatrix[i].length!=minimalIterationCount){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
if(subMatrix[i].length!=minimalIterationCount){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
oldt=data;
if(subMatrix[i].length!=minimalIterationCount){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<=nRows;++i){
if(subMatrix[i].length!=minimalIterationCount){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<=data.length;++i){
oldt=data;
if(subMatrix[i].length!=minimalIterationCount){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<nRows;++i){
oldt=data;
if(subMatrix[i].length!=minimalIterationCount){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<=nRows;++i){
oldt=data;
if(subMatrix[i].length!=minimalIterationCount){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
subMatrix[1][i]=data;
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
subMatrix[2][i]=data-data;
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
subMatrix[3][i]=data-data;
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((data>0)==(data>0)){
data=data;
y2=data;
data=data-x0;
data=delta;
}
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=row){
 final double Math.abs(data-data)=Math.abs(data-data);
 final double data*(Math.abs(data)+Math.abs(data))=data*(Math.abs(olds)+Math.abs(s));
if((delta<=rLimit)||(delta<=data)){
setResult(s,i);
return data;
}
}
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(i!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=column){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=j){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(i!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=column){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=j){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(i!=j){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(i!=column){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(i!=j){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(i!=column){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(i!=j){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
column=values.length;
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
this.data=epsilon;
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
checkVectorDimensions(v.length);
for(int i=0;i<nCols;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=column;i<column;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=column;i<=data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<=column;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=column;i<=column;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
resetTables(column);
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
nRows=column;
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[sequence.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[y0.length][length];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
column=ret*31+row;
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
column=ret*31+nCols;
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=nCols;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
column=ret*31+row;
column=ret*31+nCols;
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][rows];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][cols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
nRows=target.length;
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
column=point.length;
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
verifyDataSet(data);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==2){
new Complex[i][0]=data[0].add(data[1]);
f[1]=data[0].subtract(data[1]);
return f;
}
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(qrtMinor[minor]!=0.0){
for(int nCols=Math.min(nRows,column)-1;nCols<nRows;nCols++){
double data=0;
alpha/=rDiag[minor]*qrtMinor[minor];
}
}
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mu==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
MatrixUtils.checkRowIndex(this,row);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
MatrixUtils.checkRowIndex(this,row);
MatrixUtils.checkColumnIndex(this,column);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[nCols][length];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,length);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols!=0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,length);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=0){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,length);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",destination.length,subMatrix[0].length,nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rowsCount==column){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data+0.01*data<=0.0){
den=1.0;
}
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
checkRowIndex(row);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
checkRowIndex(row);
checkColumnIndex(column);
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lower==0){
throw MathRuntimeException.createIllegalArgumentException("upper bound ({0}) must be greater than lower bound ({1})",nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x0==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw MathRuntimeException.createIllegalArgumentException("lower endpoint ({0}) must be less than or equal to upper endpoint ({1})",nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==column){
throw MathRuntimeException.createIllegalArgumentException("lower endpoint ({0}) must be less than or equal to upper endpoint ({1})",nCols,column);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(startIndex==column){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(endIndex==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(row==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(len==0){
throw MathRuntimeException.createIllegalArgumentException("length must be positive ({0})",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rowDimension==0){
throw MathRuntimeException.createIllegalArgumentException("invalid row dimension {0} (must be positive)",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(columnDimension==0){
throw MathRuntimeException.createIllegalArgumentException("invalid column dimension {0} (must be positive)",nCols);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nCols==0){
throw new MatrixIndexException("row index {0} out of allowed range [{1}, {2}]",nCols,0,getRowDimension()-1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(row==0){
throw new MatrixIndexException("row index {0} out of allowed range [{1}, {2}]",nCols,0,getRowDimension()-1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nCols==0){
throw new MatrixIndexException("column index {0} out of allowed range [{1}, {2}]",nCols,0,getColumnDimension()-1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(column==0){
throw new MatrixIndexException("column index {0} out of allowed range [{1}, {2}]",nCols,0,getColumnDimension()-1);
}
data=new double[subMatrix.length][nCols];
for(int i=0;i<data.length;++i){
if(subMatrix[i].length!=nCols){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",nCols,subMatrix[i].length);
}
System.arraycopy(subMatrix[i],0,data[i+row],column,nCols);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math.linear.Array2DRowRealMatrix,335
org.apache.commons.math.linear.Array2DRowRealMatrix,336
org.apache.commons.math.linear.Array2DRowRealMatrix,341
org.apache.commons.math.linear.Array2DRowRealMatrix,343
Find no block!
org.apache.commons.math.linear.Array2DRowRealMatrix,347
Find no block!
org.apache.commons.math.linear.Array2DRowRealMatrix,622
org.apache.commons.math.linear.Array2DRowRealMatrix,623
Find no block!
org.apache.commons.math.linear.EigenDecompositionImpl,1084
========
if(dMin>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=1;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dMin>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=1;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dMin>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=1;
}else {
tau*=0.25;
tType-=1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dMin>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=1;
}else {
tau*=0.25;
tType-=1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.5;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sumOffDiag>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(start,2);
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(start);
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin1=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tau=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
initialSplits(start);
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
tType=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
dMin1=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
tau=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(start);
tType=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(start);
dMin1=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(start);
tau=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(start);
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
dMin1=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
tau=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin1=0;
tau=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin1=0;
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tau=0;
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
initialSplits(start);
tType=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
initialSplits(start);
dMin1=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
initialSplits(start);
tau=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
initialSplits(start);
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
tType=0;
dMin1=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
tType=0;
tau=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
tType=0;
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
dMin1=0;
tau=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
dMin1=0;
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
tau=0;
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(start);
tType=0;
dMin1=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(start);
tType=0;
tau=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(start);
tType=0;
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(start);
dMin1=0;
tau=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(start);
dMin1=0;
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(start);
tau=0;
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
dMin1=0;
tau=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
dMin1=0;
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
tau=0;
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin1=0;
tau=0;
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
initialSplits(start);
tType=0;
dMin1=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
initialSplits(start);
tType=0;
tau=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
initialSplits(start);
tType=0;
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
initialSplits(start);
dMin1=0;
tau=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
initialSplits(start);
dMin1=0;
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
initialSplits(start);
tau=0;
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
tType=0;
dMin1=0;
tau=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
tType=0;
dMin1=0;
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
tType=0;
tau=0;
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
dMin1=0;
tau=0;
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(start);
tType=0;
dMin1=0;
tau=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(start);
tType=0;
dMin1=0;
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(start);
tType=0;
tau=0;
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(start);
dMin1=0;
tau=0;
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
dMin1=0;
tau=0;
dN=0;
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(gap2>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=8;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a2>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isInfinite(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(TOLERANCE)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.abs(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(dMin)){
pendingEventTime=TOLERANCE;
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(dMin)){
if(loop&&(Math.abs(TOLERANCE-TOLERANCE)<=TOLERANCE)){
return false;
}
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(dMin)){
return true;
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(dMin)){
pendingEventTime=TOLERANCE;
if(loop&&(Math.abs(TOLERANCE-TOLERANCE)<=TOLERANCE)){
return false;
}
return true;

tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isInfinite(TOLERANCE)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.ulp(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin1<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(d<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gap2<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a2<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.abs(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin<0.0){
pendingEventTime=TOLERANCE;
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin<0.0){
pendingEvent=true;
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin<0.0){
return true;
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin<0.0){
pendingEventTime=TOLERANCE;
pendingEvent=true;
return true;

if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(min<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(max<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE*a2;
if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE<dMin){
TOLERANCE=TOLERANCE*(1-Math.sqrt(a2))/(1+a2);
}
if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=TOLERANCE;
if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tau=TOLERANCE;
if(a2<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :

if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(im<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin<1.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dMin<=0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(error<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin<=1.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(error<=0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(error<1.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(error<=1.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((dMin==0)&&(dMin1>0.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((d<0.0)&&(dMin1>0.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin1>dMin&&(dMin1>0.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dMin1<dMin&&(dMin1>0.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((dMin<0.0)&&(dMin1>0.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(d<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((dMin<0.0)&&dMin1>TOLERANCE*dMin){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((dMin<0.0)&&(dMin<=0.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((dMin<0.0)&&(Math.abs(tau-TOLERANCE)>dMin1)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((dMin<0.0)&&(dMin1>0.0)){
if(loop&&(Math.abs(TOLERANCE-dMin)<=dMin1)){
return false;
}
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((dMin<0.0)&&(dMin1>0.0)){
pendingEvent=true;
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((dMin<0.0)&&(dMin1>0.0)){
if(loop&&(Math.abs(TOLERANCE-dMin)<=dMin1)){
return false;
}
pendingEvent=true;

work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((dMin<0.0)&&(dMin1>0.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(x<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((dMin<0.0)&&(dMin1>0.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(a<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((dMin<0.0)&&(dMin1>0.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<1.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((dMin<0.0)&&(dMin1>0.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(x<1.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((dMin1<=0)||(deflatedEnd<pingPong)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((dMin1<=0)&&(dMin1>0.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((dMin<0.0)&&(deflatedEnd<pingPong)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((dMin1<=0)&&(deflatedEnd<pingPong)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-4;
if((dMin<0.0)&&(dMin1>0.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((dMin<0.0)&&(dMin1>0.0)){
d=work[i];
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :

if((dMin<0.0)&&(dMin1>0.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(dMin,TOLERANCE)<TOLERANCE||dMin1<TOLERANCE){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(dMin,TOLERANCE)<TOLERANCE&&(dMin1>0.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((dMin<0.0)&&dMin1<TOLERANCE){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(dMin,TOLERANCE)<TOLERANCE&&dMin1<TOLERANCE){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&(dMin1>0.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((dMin<0.0)&&(start-start>3)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((dMin<0.0)&&(dMin1>0.0)){
diagMax=work[4*i0];
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((dMin<0.0)&&(dMin1>0.0)){
offDiagMin=work[4*i0+2];
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((dMin<0.0)&&(dMin1>0.0)){
work[4*n0-2]=eMin;
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((dMin<0.0)&&(dMin1>0.0)){
work[4*n0-1]=work[4*start+3];
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((dMin<0.0)&&(dMin1>0.0)){
i0=start-1+1;
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((dMin<0.0)&&(dMin1>0.0)){
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
work[4*n0-2]=eMin;
work[4*n0-1]=work[4*start+3];
i0=start-1+1;

work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
start=goodStep(start,n0);
if((dMin<0.0)&&(dMin1>0.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
pingPong=1-pingPong;
if((dMin<0.0)&&(dMin1>0.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
pingPong=1-pingPong;
if((pingPong==0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&(start-start>3)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
pingPong=1-pingPong;
if((pingPong==0)&&(dMin1>0.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
pingPong=1-pingPong;
if((dMin<0.0)&&(start-start>3)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
pingPong=1-pingPong;
if((pingPong==0)&&(start-start>3)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if((dMin<0.0)&&(dMin1>0.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(error<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((dMin1<=1.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((dMin<0.0)&&(dMin1<=1.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((dMin<0.0)&&(error>0.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((dMin<0.0)&&(dMin1>1.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((dMin<0.0)&&(dMin1>0.0)){
offDiagMax=Math.max(tau,work[start+2]);
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((start==deflatedEnd-1)||((start!=deflatedEnd-2)&&((work[k-5]<=TOLERANCE_2*(sigma+work[k-3]))||(work[k-2*pingPong-4]<=TOLERANCE_2*work[k-7])))){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((start==deflatedEnd-1)&&(dMin1>0.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((dMin<0.0)&&((start!=deflatedEnd-2)&&((work[4*deflatedEnd+pingPong-1-5]<=TOLERANCE_2*(sigma+work[k-3]))||(work[k-2*pingPong-4]<=TOLERANCE_2*work[k-7])))){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((dMin<0.0)&&(dMin1>0.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<=0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((dMin<0.0)&&(dMin1>0.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(s<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((dMin<0.0)&&(dMin1>0.0)){
deflatedEnd-=1;
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((start==deflatedEnd-1)&&(dMin1>0.0)){
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<=0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((start==deflatedEnd-1)&&(dMin1>0.0)){
deflatedEnd-=1;
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((dMin<0.0)&&(dMin1>0.0)){
deflatedEnd-=1;
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<=0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((start==deflatedEnd-1)&&(dMin1>0.0)){
deflatedEnd-=1;
work[4*deflatedEnd-3-pingPong]=0.0;
dMin=0.0;
updateSigma(tau);
return deflatedEnd;
}else if(dMin<=0.0){
if(tType<-22){
tau=0.0;
}else if(dMin1>0.0){
tau=(tau+dMin)*(1.0-2.0*MathUtils.EPSILON);
tType-=11;
}else {
tau*=0.25;
tType-=12;
}
}else if(Double.isNaN(dMin)){
tau=0.0;
}else {
loop=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math.linear.EigenDecompositionImpl,1093
org.apache.commons.math.linear.EigenDecompositionImpl,1095
org.apache.commons.math.linear.EigenDecompositionImpl,1098
Find no block!
org.apache.commons.math.linear.EigenDecompositionImpl,1100
org.apache.commons.math.linear.EigenDecompositionImpl,1101
org.apache.commons.math.linear.EigenDecompositionImpl,1474
========
tType=-5;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-1;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-2;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-3;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a2>(b1+b2)){
TOLERANCE=Math.min(s,a2-(b1+b2));
}
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
s=Math.max(TOLERANCE,0.333*dMin);
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-7;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-4;
double s=0.333*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-4;
double s=0.25*dMin1;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-7]){
return ;
}
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-7;
double s=0.333*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-7;
double s=0.25*dMin1;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-7]){
return ;
}
tType=-7;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-4;
double s=0.333*dMin1;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-7]){
return ;
}
tType=-4;
double s=0.333*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-7]){
return ;
}
tType=-4;
double s=0.25*dMin1;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-7;
double s=0.333*dMin1;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-7]){
return ;
}
tType=-7;
double s=0.333*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-7]){
return ;
}
tType=-7;
double s=0.25*dMin1;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-7]){
return ;
}
tType=-4;
double s=0.333*dMin1;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-7]){
return ;
}
tType=-7;
double s=0.333*dMin1;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-10;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-4;
double s=0.25*dMin2;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-10;
double s=0.333*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-10;
double s=0.25*dMin2;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-7]){
return ;
}
tType=-10;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-4;
double s=0.333*dMin2;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-7]){
return ;
}
tType=-4;
double s=0.25*dMin2;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-10;
double s=0.333*dMin2;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-7]){
return ;
}
tType=-10;
double s=0.333*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-7]){
return ;
}
tType=-10;
double s=0.25*dMin2;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-7]){
return ;
}
tType=-4;
double s=0.333*dMin2;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-7]){
return ;
}
tType=-10;
double s=0.333*dMin2;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-11;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-6;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tType==-6){
g+=0.333*(1-g);
}else if(tType==-18){
g=0.25*0.333;
}else {
g=0.25;
}
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
s=g*dMin;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tType==-6){
g+=0.333*(1-g);
}else if(tType==-18){
g=0.25*0.333;
}else {
g=0.25;
}
tType=-6;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-12;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-8;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-9;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
s=0.25*dMin1;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin1==dMin){
s=0.5*dMin1;
}
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-4;
int s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-4;
dN2=dN2;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-4;
s=dMin;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*start-2]=eMin;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin=-Math.max(0,eMin-2*Math.sqrt(diagMin*qMax));
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*start-2]=eMin;
tType=-4;
int s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
s=0.0;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=Math.min(dMin,dN1);
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
s=dMin;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
start=j4+4;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-4;
double s=0.25*e12;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(s<0){
throw new InvalidMatrixException("cannot solve degree {0} equation",2);
}
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[start-1]=0.0;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN2=work[start+2];
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[start-1]=0.0;
dN2=work[start+2];
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[start-1]=0.0;
s=0.0;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN2=work[start+2];
s=0.0;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[start-1]=0.0;
dN2=work[start+2];
s=0.0;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
s=work[start-2];
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[start-4]>work[np-2]){
return ;
}
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN1=work[tType+2]*(dMin/work[start-2])-tau;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN1=work[tType+2]*(dMin/work[start-2])-tau;
dMin=Math.min(dMin,dN1);
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN1=work[tType+2]*(dMin/work[start-2])-tau;
s=dMin;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN1=work[tType+2]*(dMin/work[start-2])-tau;
start=j4+4;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=Math.min(dMin,dN1);
s=dMin;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=Math.min(dMin,dN1);
start=j4+4;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
s=dMin;
start=j4+4;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN1=work[tType+2]*(dMin/work[start-2])-tau;
dMin=Math.min(dMin,dN1);
s=dMin;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN1=work[tType+2]*(dMin/work[start-2])-tau;
dMin=Math.min(dMin,dN1);
start=j4+4;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN1=work[tType+2]*(dMin/work[start-2])-tau;
s=dMin;
start=j4+4;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=Math.min(dMin,dN1);
s=dMin;
start=j4+4;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN1=work[tType+2]*(dMin/work[start-2])-tau;
dMin=Math.min(dMin,dN1);
s=dMin;
start=j4+4;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[start]=0.0;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN2=work[start+1];
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[start]=0.0;
dN2=work[start+1];
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[start]=0.0;
s=0.0;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN2=work[start+1];
s=0.0;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[start]=0.0;
dN2=work[start+1];
s=0.0;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN1=work[start+2];
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[start]=0.0;
dN1=work[start+2];
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN1=work[start+2];
s=0.0;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[start]=0.0;
dN1=work[start+2];
s=0.0;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN=work[start+2];
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[start]=0.0;
dN=work[start+2];
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN=work[start+2];
s=0.0;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[start]=0.0;
dN=work[start+2];
s=0.0;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-4;
double s=0.25*tau;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-4;
s=work[4*start+pingPong+4];
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=work[4*start+pingPong]-dMin;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin=work[4*start+pingPong]-dMin;
tType=-4;
double s=0.25*tau;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(start);
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin1=0;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
s=0;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(start,2);
initialSplits(start);
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
dMin1=0;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(start);
dMin1=0;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(start,2);
initialSplits(start);
dMin1=0;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-4;
double s=0.25*theta;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-4;
double s=0.25*fourTheta;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-4;
double s=0.25*x;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-4;
double s=0.25*mu;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=v*v;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
qMax=0.5*Math.sqrt(dMin+1.0);
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-4;
dN2=dN2;
int s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-4;
s=dMin;
int s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-4;
dN2=dN2;
s=dMin;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-4;
dN2=dN2;
s=dMin;
int s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[start]=(work[start]-TOLERANCE)/work[pj];
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
s+=(work[start]-TOLERANCE)/work[pj]*s;
tType=-4;
double s=0.25*dMin;
double gam;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,1475
org.apache.commons.math.linear.EigenDecompositionImpl,1478
========
if(work[nn-9]>work[nn-11]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-9]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-11]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[np-4]>work[np-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[nn-4]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-4]>work[nn-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i4]>work[i4-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[nn]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn]>work[nn-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[k-3]>work[k-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[nn-3]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[k-5]>TOLERANCE_2*work[k-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[start-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>TOLERANCE_2*work[start-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[start-5]>TOLERANCE_2*work[start-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[np-5]>work[np-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[np-4]>work[np-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[np-5]>work[np-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-9]>work[nn-11]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[np-9]>work[np-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[np-4]>work[np-11]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[np-9]>work[np-11]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i4]>work[i4-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[np]>work[np-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[k-3]>work[k-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[np-3]>work[np-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[np-3]>work[np-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[k-5]>TOLERANCE_2*work[k-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[start-5]>work[np-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[np-4]>TOLERANCE_2*work[start-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[start-5]>TOLERANCE_2*work[start-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-11]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-9]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[np-4]>work[np-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-4]>work[nn-11]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-9]>work[nn-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-4]>work[nn-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i4]>work[i4-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[nn]>work[nn-11]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn]>work[nn-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[k-3]>work[k-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[nn-3]>work[nn-11]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-3]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[k-5]>TOLERANCE_2*work[k-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[start-5]>work[nn-11]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-9]>TOLERANCE_2*work[start-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[start-5]>TOLERANCE_2*work[start-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a2==a2){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a2==dN){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dMin==cnst1){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dMin==a2){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a2==cnst1){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-5;
if(dMin==dN){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[np-8]>b2||work[np-4]>b2){
return ;
}
if(dMin==dN){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-5;
if(a2==dN){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-5;
if(dMin==a2){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-5;
if(dMin==cnst1){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-5;
if(a2==a2){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-5;
if(a2==cnst1){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(absG==dN){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin==minG){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin==dN){
minG=dN;
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin==dN){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
minG=dN;
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin==dN){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin==offDiagMax){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin==SAFE_MIN){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin==qMax){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dMin==dN){
computeShiftIncrement(start,deflated,pingPong-deflatedEnd);
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin==dN){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
computeShiftIncrement(start,deflated,pingPong-deflatedEnd);
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE_2==TOLERANCE_2){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(TOLERANCE_2==dN){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dMin==TOLERANCE_2){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dMin==sigma){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dMin==dN){
gam=dN;
work[i+2]=-dMin;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin==dN){
offDiagMin=work[i+6];
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin==dN){
work[i+2]=-dMin;
offDiagMin=work[i+6];

gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin==dN){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
offDiagMin=Math.min(eMin,work[nn+2]);
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE_2==sigma){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dMin==b1){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(gap2==gap2){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gap2==dN){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin==gap2){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin==b2){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(gap2==b2){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gap2==a2){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dN==dMin){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dMin1==dN){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dMin==dN1){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dMin1==dN1){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math.linear.EigenDecompositionImpl,1479
========
b2=work[nn-5]/work[nn-7];
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
gam=dN1;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
gam=dN;
a2=0.0;
if(work[np-4]>work[np-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
gam=dN;
a2=0.0;
if(work[np-4]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
gam=dN;
a2=0.0;
if(work[nn-5]>work[np-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
gam=dN;
np=nn-2*pingPong;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
gam=dN1;
np=nn-2*pingPong;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
gam=dN;
a2=0.0;
if(work[nn-9]>work[nn-11]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
gam=dN;
a2=0.0;
if(work[nn-9]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-11]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
nn=nn-13;
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
nn=nn-13;
gam=dN;
a2=0.0;
if(work[nn-9]>work[nn-11]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
nn=nn-13;
gam=dN;
a2=0.0;
if(work[nn-9]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
nn=nn-13;
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-11]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
gam=dMin;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
gam=dN;
b2=Math.sqrt(cnst3*b2);
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
gam=dN;
a2=0.0;
if(work[i4]>work[i4-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
gam=dN;
a2=0.0;
if(work[nn]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
b2=b2*(work[nn]/work[i4-2]);
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
a2=a2+b2;
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,a2)<a2||cnst1<a2){
break;
}
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
gam=dN;
a2=0.0;
if(work[nn]>work[nn-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
a2=a2+b2;
gam=dN;
a2=0.0;
if(work[nn]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,a2)<a2||cnst1<a2){
break;
}
gam=dN;
a2=0.0;
if(work[nn]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
a2=a2+b2;
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,a2)<a2||cnst1<a2){
break;
}
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
a2=a2+b2;
if(100*Math.max(b2,a2)<a2||cnst1<a2){
break;
}
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
a2=a2+b2;
gam=dN;
a2=0.0;
if(work[nn]>work[nn-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,a2)<a2||cnst1<a2){
break;
}
gam=dN;
a2=0.0;
if(work[nn]>work[nn-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
a2=a2+b2;
if(100*Math.max(b2,a2)<a2||cnst1<a2){
break;
}
gam=dN;
a2=0.0;
if(work[nn]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
a2=a2+b2;
if(100*Math.max(b2,a2)<a2||cnst1<a2){
break;
}
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
a2=a2+b2;
if(100*Math.max(b2,a2)<a2||cnst1<a2){
break;
}
gam=dN;
a2=0.0;
if(work[nn]>work[nn-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
gam=dN;
a2=0.0;
if(work[k-3]>work[k-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
gam=dN;
a2=0.0;
if(work[nn-3]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
gam=absG;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN2=work[pingPong];
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
gam=b2;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
gam=b1;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*nn-2]=dN;
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin=-Math.max(0,eMin-2*Math.sqrt(diagMin*qMax));
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
gam=d;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
gam=dN;
a2=0.0;
if(work[k-5]>TOLERANCE_2*work[k-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
gam=dN;
a2=0.0;
if(work[start-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
gam=dN;
a2=0.0;
if(work[nn-5]>TOLERANCE_2*work[start-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*nn-8]=sigma+work[start-7];
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*nn-4]=sigma+work[start-3];
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
nn-=2;
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
gam=dN;
a2=0.0;
if(work[start-5]>TOLERANCE_2*work[start-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*nn-8]=sigma+work[start-7];
gam=dN;
a2=0.0;
if(work[start-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*nn-4]=sigma+work[start-3];
gam=dN;
a2=0.0;
if(work[start-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
nn-=2;
gam=dN;
a2=0.0;
if(work[start-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*nn-8]=sigma+work[start-7];
gam=dN;
a2=0.0;
if(work[nn-5]>TOLERANCE_2*work[start-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*nn-4]=sigma+work[start-3];
gam=dN;
a2=0.0;
if(work[nn-5]>TOLERANCE_2*work[start-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
nn-=2;
gam=dN;
a2=0.0;
if(work[nn-5]>TOLERANCE_2*work[start-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*nn-8]=sigma+work[start-7];
work[4*nn-4]=sigma+work[start-3];
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*nn-8]=sigma+work[start-7];
nn-=2;
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*nn-4]=sigma+work[start-3];
nn-=2;
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*nn-8]=sigma+work[start-7];
gam=dN;
a2=0.0;
if(work[start-5]>TOLERANCE_2*work[start-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*nn-4]=sigma+work[start-3];
gam=dN;
a2=0.0;
if(work[start-5]>TOLERANCE_2*work[start-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
nn-=2;
gam=dN;
a2=0.0;
if(work[start-5]>TOLERANCE_2*work[start-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*nn-8]=sigma+work[start-7];
work[4*nn-4]=sigma+work[start-3];
gam=dN;
a2=0.0;
if(work[start-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*nn-8]=sigma+work[start-7];
nn-=2;
gam=dN;
a2=0.0;
if(work[start-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*nn-4]=sigma+work[start-3];
nn-=2;
gam=dN;
a2=0.0;
if(work[start-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*nn-8]=sigma+work[start-7];
work[4*nn-4]=sigma+work[start-3];
gam=dN;
a2=0.0;
if(work[nn-5]>TOLERANCE_2*work[start-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*nn-8]=sigma+work[start-7];
nn-=2;
gam=dN;
a2=0.0;
if(work[nn-5]>TOLERANCE_2*work[start-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*nn-4]=sigma+work[start-3];
nn-=2;
gam=dN;
a2=0.0;
if(work[nn-5]>TOLERANCE_2*work[start-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*nn-8]=sigma+work[start-7];
work[4*nn-4]=sigma+work[start-3];
nn-=2;
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*nn-8]=sigma+work[start-7];
work[4*nn-4]=sigma+work[start-3];
gam=dN;
a2=0.0;
if(work[start-5]>TOLERANCE_2*work[start-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*nn-8]=sigma+work[start-7];
nn-=2;
gam=dN;
a2=0.0;
if(work[start-5]>TOLERANCE_2*work[start-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*nn-4]=sigma+work[start-3];
nn-=2;
gam=dN;
a2=0.0;
if(work[start-5]>TOLERANCE_2*work[start-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*nn-8]=sigma+work[start-7];
work[4*nn-4]=sigma+work[start-3];
nn-=2;
gam=dN;
a2=0.0;
if(work[start-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*nn-8]=sigma+work[start-7];
work[4*nn-4]=sigma+work[start-3];
nn-=2;
gam=dN;
a2=0.0;
if(work[nn-5]>TOLERANCE_2*work[start-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math.linear.EigenDecompositionImpl,1480
org.apache.commons.math.linear.EigenDecompositionImpl,1481
org.apache.commons.math.linear.EigenDecompositionImpl,1484
========
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-9]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-11]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
np=nn-13;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
np=nn-13;
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
np=nn-13;
if(work[nn-9]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
np=nn-13;
if(work[nn-5]>work[nn-11]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i4]>work[i4-2]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[nn-17]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-17-2]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-17]>work[nn-17-2]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[4*end-9+nn]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[4*end-9+nn-2]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[4*end-9+nn]>work[4*end-9+nn-2]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[k-3]>work[k-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[nn-3]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-2]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn]>work[nn-2]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[4*end-10+nn]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[4*end-10+nn-2]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[4*end-10+nn]>work[4*end-10+nn-2]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-7]){
return ;
}
work[4*nn-2]=eMin;
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-7]){
return ;
}
dMin=-Math.max(0,eMin-2*Math.sqrt(diagMin*qMax));
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[k-5]>TOLERANCE_2*work[k-3]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[nn-5]>TOLERANCE_2*work[nn-3]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
work[4*np-8]=sigma+work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
work[4*np-4]=sigma+work[nn-3];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dN>b1){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dN>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>b1){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math.linear.EigenDecompositionImpl,1485
org.apache.commons.math.linear.EigenDecompositionImpl,1502
========
if(b1==0.0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a2==0.0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i4-5]>work[i4-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i4]>work[i4-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i4-5]>work[i4-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[np-4]>work[np-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i4-4]>work[i4-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-9]>work[nn-11]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i4-9]>work[i4-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i4]>work[i4-11]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i4-9]>work[i4-11]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[k-3]>work[k-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[start-3]>work[i4-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i4]>work[start-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[start-3]>work[start-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[k-5]>TOLERANCE_2*work[k-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[start-5]>work[i4-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i4]>TOLERANCE_2*work[start-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[start-5]>TOLERANCE_2*work[start-3]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<a2||gap2<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<a2||cnst1<b2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<a2||gap2<b2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
a2=cnst3*a2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<yB||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<a2||b1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<a2||b1<b2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<splitTolerance||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<absoluteTolerance||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<a2||a2<cnst1*Math.max(Math.abs(b1),Math.abs(b2))){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<a2||cnst1<cnst1*Math.max(Math.abs(b1),Math.abs(b2))){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<a2||range<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<a2||cnst1<relativeTolerance){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<splitTolerance||a2<cnst1*Math.max(Math.abs(b1),Math.abs(b2))){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<splitTolerance||cnst1<cnst1*Math.max(Math.abs(b1),Math.abs(b2))){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<size||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<relativeThreshold||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<a2||difference<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<a2||cnst1<absoluteThreshold){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<a2||cnst1<eps){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<size||difference<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<size||cnst1<absoluteThreshold){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<relativeThreshold||difference<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<relativeThreshold||cnst1<absoluteThreshold){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<a2||difference<absoluteThreshold){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<size||difference<absoluteThreshold){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<relativeThreshold||difference<absoluteThreshold){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<b2||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<a2||cnst1<b1){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<b2||cnst1<b1){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
b1=cnst1;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[start]>work[i4-2]){
return ;
}
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
b1=cnst1;
if(work[start]>work[i4-2]){
return ;
}
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
gam=dN;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
a2=0.0;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
gam=dN;
a2=0.0;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<b1||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
b1*=work[start]/work[i4-2];
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
cnst1+=b1;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
b1*=work[start]/work[i4-2];
if(100*Math.max(b2,b1)<b1||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[np-4]>work[np-2]){
return ;
}
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
a2=work[np-4]/work[np-2];
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<splitTolerance||range<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<splitTolerance||cnst1<relativeTolerance){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<absoluteTolerance||a2<cnst1*Math.max(Math.abs(b1),Math.abs(b2))){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<absoluteTolerance||cnst1<cnst1*Math.max(Math.abs(b1),Math.abs(b2))){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<absoluteTolerance||range<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<absoluteTolerance||cnst1<relativeTolerance){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<a2||range<cnst1*Math.max(Math.abs(b1),Math.abs(b2))){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<a2||range<relativeTolerance){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<splitTolerance||range<cnst1*Math.max(Math.abs(b1),Math.abs(b2))){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<splitTolerance||range<relativeTolerance){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<absoluteTolerance||range<cnst1*Math.max(Math.abs(b1),Math.abs(b2))){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<absoluteTolerance||range<relativeTolerance){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<=a2||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<a2||cnst1<=a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(TOLERANCE))||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<rLimit||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<a2||a2<=cnst1){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<a2||delta<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<a2||cnst1<absoluteAccuracy){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<=a2||cnst1<=a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<=TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(TOLERANCE))||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<=a2||a2<=cnst1){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(TOLERANCE))||cnst1<=a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(TOLERANCE))||a2<=cnst1){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<=TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(TOLERANCE))||cnst1<=a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<=TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(TOLERANCE))||a2<=cnst1){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(s))||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<=TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(s))||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<=rLimit||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<=a2||delta<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<=a2||cnst1<absoluteAccuracy){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(s))||cnst1<=a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<rLimit||cnst1<=a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<a2||delta<=a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<a2||cnst1<=absoluteAccuracy){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(s))||a2<=cnst1){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(s))||delta<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(s))||cnst1<absoluteAccuracy){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<rLimit||a2<=cnst1){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<rLimit||delta<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<rLimit||cnst1<absoluteAccuracy){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<a2||delta<absoluteAccuracy){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<=TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(s))||cnst1<=a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<=rLimit||cnst1<=a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<=a2||delta<=a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<=a2||cnst1<=absoluteAccuracy){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<=TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(s))||a2<=cnst1){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(b2,b1)<=TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(s))||delta<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<=TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(s))||cnst1<absoluteAccuracy){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<=rLimit||a2<=cnst1){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<=rLimit||delta<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<=rLimit||cnst1<absoluteAccuracy){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<=a2||delta<absoluteAccuracy){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(s))||delta<=a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(s))||cnst1<=absoluteAccuracy){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<rLimit||delta<=a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<rLimit||cnst1<=absoluteAccuracy){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<a2||delta<=absoluteAccuracy){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(s))||delta<absoluteAccuracy){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<rLimit||delta<absoluteAccuracy){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<=TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(s))||delta<=a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<=TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(s))||cnst1<=absoluteAccuracy){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<=rLimit||delta<=a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<=rLimit||cnst1<=absoluteAccuracy){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<=a2||delta<=absoluteAccuracy){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<=TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(s))||delta<absoluteAccuracy){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<=rLimit||delta<absoluteAccuracy){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(s))||delta<=absoluteAccuracy){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<rLimit||delta<=absoluteAccuracy){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<yMin||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(qMax)<=cnst1){
setResult(yMax,0);
return TOLERANCE;
}
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<y1||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(b2,b1)<fmin||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifyInterval(b1,b2);
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=nn;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
tau=Math.max(s,a2*(1-cnst1*b2));
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i4=end;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i4=pingPong;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b1;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i4=end;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b1;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i4=pingPong;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b1;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=dN;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TOLERANCE=0;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE>0){
b2=Math.max(parl,TOLERANCE);
}else if(fp<0){
b1=Math.min(paru,lmPar);
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.max(b2,lmPar+TOLERANCE/(TOLERANCE*TOLERANCE));
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.max(b2,lmPar+TOLERANCE/(cnst1*TOLERANCE));
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=0;
if(TOLERANCE>0){
b2=Math.max(parl,TOLERANCE);
}else if(fp<0){
b1=Math.min(paru,lmPar);
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
i4++;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
np++;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(np>=seed.length){
j=0;
}
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
i4++;
np++;
if(np>=seed.length){
j=0;
}

if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
i4++;
np++;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(b2!=0.0){
for(int i4=4*pingPong-9+pingPong;i4>=4*start+2+pingPong;i4-=4){
if(work[i4]>work[i4-2]){
return ;
}
b1*=work[i4]/work[i4-2];
b2+=b1;
if(100*b1<b2){
break;
}
}
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
b2=Math.sqrt(cnst1*b2);
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(b2!=0.0){
for(int i4=4*pingPong-9+pingPong;i4>=4*start+2+pingPong;i4-=4){
if(work[i4]>work[i4-2]){
return ;
}
b1*=work[i4]/work[i4-2];
b2+=b1;
if(100*b1<b2){
break;
}
}
}
b2=Math.sqrt(cnst1*b2);
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(range==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(absoluteTolerance==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
b1=Math.max(lower,b2-100*MathUtils.EPSILON);
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
b2=b1-TOLERANCE;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i4=h;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(yA==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(yB==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=length;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(singularValues[i]>a2){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>a2){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
index+=np;
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
work[i+2]=-cnst1;
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
split=i4/4;
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
offDiagMin=work[i+6];
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
work[i+2]=-cnst1;
split=i4/4;
offDiagMin=work[i+6];

b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
offDiagMin=Math.min(eMin,work[i4+2]);
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
work[l-1]=Math.min(work[start-1],Math.min(work[3+pingPong],work[7+pingPong]));
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
work[l-2*pingPong]=Math.min(work[start-2*pingPong],Math.min(work[6+pingPong],work[6+pingPong]));
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
dMin=-0.0;
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
work[l-1]=Math.min(work[start-1],Math.min(work[3+pingPong],work[7+pingPong]));
work[l-2*pingPong]=Math.min(work[start-2*pingPong],Math.min(work[6+pingPong],work[6+pingPong]));
dMin=-0.0;

if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=ratio;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
after[i]+=previous[i]+scaled[i];
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.length);
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=ratio1;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.sqrt(yDDotOnScale)/b2;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
b2=Math.min(100.0*Math.abs(h),b1);
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
b2=Math.max(h,1.0E-12*Math.abs(TOLERANCE));
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b2<getMinStep()){
h=getMinStep();
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b2>getMaxStep()){
h=getMaxStep();
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=sum;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
sum/=diag[pj];
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b2==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.min(b2,Math.max(lmPar,TOLERANCE));
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE==0){
lmPar=a2/cnst1;
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
sum/=diag[pj];
b1=sum;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b2==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=sum;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.min(b2,Math.max(lmPar,TOLERANCE));
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=sum;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE==0){
lmPar=a2/cnst1;
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=sum;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b2==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
sum/=diag[pj];
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.min(b2,Math.max(lmPar,TOLERANCE));
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
sum/=diag[pj];
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE==0){
lmPar=a2/cnst1;
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
sum/=diag[pj];
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b2==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
TOLERANCE=Math.min(b2,Math.max(lmPar,TOLERANCE));
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b2==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
if(TOLERANCE==0){
lmPar=a2/cnst1;
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.min(b2,Math.max(lmPar,TOLERANCE));
if(TOLERANCE==0){
lmPar=a2/cnst1;
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b2==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
sum/=diag[pj];
b1=sum;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.min(b2,Math.max(lmPar,TOLERANCE));
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
sum/=diag[pj];
b1=sum;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE==0){
lmPar=a2/cnst1;
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
sum/=diag[pj];
b1=sum;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b2==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
TOLERANCE=Math.min(b2,Math.max(lmPar,TOLERANCE));
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=sum;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b2==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
if(TOLERANCE==0){
lmPar=a2/cnst1;
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=sum;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.min(b2,Math.max(lmPar,TOLERANCE));
if(TOLERANCE==0){
lmPar=a2/cnst1;
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=sum;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b2==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
TOLERANCE=Math.min(b2,Math.max(lmPar,TOLERANCE));
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
sum/=diag[pj];
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b2==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
if(TOLERANCE==0){
lmPar=a2/cnst1;
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
sum/=diag[pj];
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.min(b2,Math.max(lmPar,TOLERANCE));
if(TOLERANCE==0){
lmPar=a2/cnst1;
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
sum/=diag[pj];
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b2==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
TOLERANCE=Math.min(b2,Math.max(lmPar,TOLERANCE));
if(TOLERANCE==0){
lmPar=a2/cnst1;
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b2==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
TOLERANCE=Math.min(b2,Math.max(lmPar,TOLERANCE));
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
sum/=diag[pj];
b1=sum;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b2==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
if(TOLERANCE==0){
lmPar=a2/cnst1;
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
sum/=diag[pj];
b1=sum;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.min(b2,Math.max(lmPar,TOLERANCE));
if(TOLERANCE==0){
lmPar=a2/cnst1;
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
sum/=diag[pj];
b1=sum;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b2==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
TOLERANCE=Math.min(b2,Math.max(lmPar,TOLERANCE));
if(TOLERANCE==0){
lmPar=a2/cnst1;
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=sum;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b2==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
TOLERANCE=Math.min(b2,Math.max(lmPar,TOLERANCE));
if(TOLERANCE==0){
lmPar=a2/cnst1;
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
sum/=diag[pj];
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
n=Math.max((int)(Math.min(4,Math.pow(Math.abs(TOLERANCE-TOLERANCE)/a2,0.5/abscissas.length))*i4),n+1);
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
oldt=TOLERANCE;
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
n=Math.max((int)(Math.min(4,Math.pow(Math.abs(TOLERANCE-TOLERANCE)/a2,0.5/abscissas.length))*i4),n+1);
oldt=TOLERANCE;

if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<size||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<relativeThreshold||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||difference<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<absoluteThreshold){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<size||difference<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<size||cnst1<absoluteThreshold){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<relativeThreshold||difference<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<relativeThreshold||cnst1<absoluteThreshold){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||difference<absoluteThreshold){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<size||difference<absoluteThreshold){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<relativeThreshold||difference<absoluteThreshold){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(coefficients.length<p.coefficients.length){
for(int i4=Math.min(coefficients.length,p.coefficients.length);i<Math.max(coefficients.length,p.coefficients.length);++i){
new double[Math.max(coefficients.length,p.coefficients.length)][i]=-p.coefficients[i];
}
}else {
System.arraycopy(coefficients,lowLength,newCoefficients,lowLength,highLength-lowLength);
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy((coefficients.length<p.coefficients.length)?p.coefficients:coefficients,Math.min(coefficients.length,p.coefficients.length),new double[Math.max(coefficients.length,p.coefficients.length)],lowLength,Math.max(coefficients.length,p.coefficients.length)-lowLength);
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=i;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
lJ[i]=0;
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=gam;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=a2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
rescale(work,y,new double[y0.length]);
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
null.storeTime(TOLERANCE);
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=s;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i4=n;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(b1)<=cnst1){
setResult(isSequence(b2,TOLERANCE,a2)?xplus:TOLERANCE+(-2.0*TOLERANCE)/(TOLERANCE-Math.sqrt(TOLERANCE)),np);
return TOLERANCE;
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(absG==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
sixI+=6;
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
x0=TOLERANCE;
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
x1=b2;
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
y0=TOLERANCE;
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
y1=TOLERANCE;
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
y2=TOLERANCE;
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
x0=TOLERANCE;
x1=b2;
y0=TOLERANCE;
y1=TOLERANCE;
y2=TOLERANCE;

if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(TOLERANCE)<=cnst1){
setResult(TOLERANCE,np);
return TOLERANCE;
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(b1)<=a2){
setResult(TOLERANCE,np);
return TOLERANCE;
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(TOLERANCE)<=cnst1){
setResult(TOLERANCE-a2,np);
return TOLERANCE;
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=start;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=d*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=tmp*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
work[j4-2]=b2+work[j4-1];
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
dMin=Math.min(dMin,b2);
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
work[j4]=work[j4-1]*a2;
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
work[j4-2]=b2+work[j4-1];
dMin=Math.min(dMin,b2);
work[j4]=work[j4-1]*a2;

b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
work[j4-3]=b2+work[j4];
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
work[j4-1]=work[j4]*a2;
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
work[j4-3]=b2+work[j4];
dMin=Math.min(dMin,b2);
work[j4-1]=work[j4]*a2;

b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=start;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
dMin=Math.min(dMin,b2);
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
work[j4]=work[j4p2]*a2;
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
work[j4]=work[j4p2+2]*(work[j4p2]/work[j4-2]);
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
b1=Math.min(dMin,b2);
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[start+2]=b2;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*end-pingPong-1]=eMin;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
b1=Math.min(dMin,b2);
work[start+2]=b2;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
b1=Math.min(dMin,b2);
work[4*end-pingPong-1]=eMin;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[start+2]=b2;
work[4*end-pingPong-1]=eMin;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
b1=Math.min(dMin,b2);
work[start+2]=b2;
work[4*end-pingPong-1]=eMin;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
work[j]=b2+work[i];
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=result;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=cos*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
cos=b2*a2;
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
cos=1.0/Math.sqrt(1.0+i4*tan);
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cnst1=-b2*work[start]+TOLERANCE*qtbpj;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[start]=b1;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
imagEigenvalues[np*np+start]=TOLERANCE*TOLERANCE+i4*imagEigenvalues[k];
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
b2=-i4*work[np]+TOLERANCE*qtbpj;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[np]=b1;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
work[j4]=work[j4+1]*(work[j4-1]/work[j4-2]);
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=Math.min(dMin,b2);
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
b1=Math.min(eMin,work[start]);
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin=Math.min(dMin,b2);
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
work[j4]=work[j4-1]*a2;
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
b1=Math.min(eMin,work[start]);
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
work[j4]=work[j4-1]*a2;
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=Math.min(dMin,b2);
b1=Math.min(eMin,work[start]);
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin=Math.min(dMin,b2);
b1=Math.min(eMin,work[start]);
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
work[j4]=work[j4-1]*a2;
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
work[j4-1]=work[j4+2]*(work[j4]/work[j4-3]);
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
b1=Math.min(eMin,work[start-1]);
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin=Math.min(dMin,b2);
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
work[j4-1]=work[j4]*a2;
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
b1=Math.min(eMin,work[start-1]);
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
work[j4-1]=work[j4]*a2;
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=Math.min(dMin,b2);
b1=Math.min(eMin,work[start-1]);
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin=Math.min(dMin,b2);
b1=Math.min(eMin,work[start-1]);
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
work[j4-1]=work[j4]*a2;
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=spacing;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[0]=cnst1+a2;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[start-1]=TOLERANCE;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[0]=cnst1+a2;
work[start-1]=TOLERANCE;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
imagEigenvalues=work;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work=imagEigenvalues;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(np>=start){
 final double a2=Math.abs(s-TOLERANCE);
 final double TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(s))=TOLERANCE*(Math.abs(olds)+Math.abs(s));
if((delta<=rLimit)||(delta<=cnst1)){
setResult(s,i);
return TOLERANCE;
}
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues=work;
work=imagEigenvalues;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
olds=s;
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
olds=s;
oldt=TOLERANCE;

if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifyInterval(b2,cnst1);
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=m;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a2==0.0){
return b2;
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new CombinedEventsManager().addEventHandler(new EndTimeChecker(TOLERANCE),Double.POSITIVE_INFINITY,Math.ulp(Math.max(Math.abs(b1),Math.abs(endTime))),100);
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=begin;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a2==0.0){
return TOLERANCE;
}
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
setResult(b1,start);
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
clearResult();
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifySequence(b1,TOLERANCE,TOLERANCE);
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
largest=Math.abs(TOLERANCE);
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifySequence(minPivot,TOLERANCE,TOLERANCE);
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=(a2-cnst1)/(Double.valueOf(start)).doubleValue();
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
tType=-4;
double s=0.25*dMin;
double gam;
int np;
if(dMin==orderControl1){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}
a2=a2+b2;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}
a2=cnst3*a2;
if(a2<cnst1){
s=gam*(1-Math.sqrt(a2))/(1+a2);
}
tau=s;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
tType=-4;
double s=0.25*dMin;
double gam;
int np;
fac=Math.max(cnst1/TOLERANCE,Math.min(1/pow,gam));
if(dMin==dN){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}
a2=a2+b2;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}
a2=cnst3*a2;
if(a2<cnst1){
s=gam*(1-Math.sqrt(a2))/(1+a2);
}
tau=s;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
tType=-4;
double s=0.25*dMin;
double gam;
int np;
costPerTimeUnit[k]=costPerStep[k]/optimalStep[k];
if(dMin==dN){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}
a2=a2+b2;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}
a2=cnst3*a2;
if(a2<cnst1){
s=gam*(1-Math.sqrt(a2))/(1+a2);
}
tau=s;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
tType=-4;
double s=0.25*dMin;
double gam;
int np;
fac=Math.max(cnst1/TOLERANCE,Math.min(1/pow,gam));
costPerTimeUnit[k]=costPerStep[k]/optimalStep[k];

if(dMin==dN){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}
a2=a2+b2;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}
a2=cnst3*a2;
if(a2<cnst1){
s=gam*(1-Math.sqrt(a2))/(1+a2);
}
tau=s;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
tType=-4;
double s=0.25*dMin;
double gam;
int np;
if(dMin==convergence){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}
a2=a2+b2;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}
a2=cnst3*a2;
if(a2<cnst1){
s=gam*(1-Math.sqrt(a2))/(1+a2);
}
tau=s;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
pendingEvent=false;
tType=-4;
double s=0.25*dMin;
double gam;
int np;
if(dMin==dN){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}
a2=a2+b2;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}
a2=cnst3*a2;
if(a2<cnst1){
s=gam*(1-Math.sqrt(a2))/(1+a2);
}
tau=s;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
pendingEventTime=Double.NaN;
tType=-4;
double s=0.25*dMin;
double gam;
int np;
if(dMin==dN){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}
a2=a2+b2;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}
a2=cnst3*a2;
if(a2<cnst1){
s=gam*(1-Math.sqrt(a2))/(1+a2);
}
tau=s;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
pendingEvent=false;
pendingEventTime=Double.NaN;

tType=-4;
double s=0.25*dMin;
double gam;
int np;
if(dMin==dN){
gam=dN;
a2=0.0;
if(work[nn-5]>work[nn-7]){
return ;
}
b2=work[nn-5]/work[nn-7];
np=nn-9;
}else {
np=nn-2*pingPong;
b2=work[np-2];
gam=dN1;
if(work[np-4]>work[np-2]){
return ;
}
a2=work[np-4]/work[np-2];
if(work[nn-9]>work[nn-11]){
return ;
}
b2=work[nn-9]/work[nn-11];
np=nn-13;
}
a2=a2+b2;
for(int i4=np;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
}
a2=cnst3*a2;
if(a2<cnst1){
s=gam*(1-Math.sqrt(a2))/(1+a2);
}
tau=s;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,1503
org.apache.commons.math.linear.EigenDecompositionImpl,1504
org.apache.commons.math.linear.EigenDecompositionImpl,1507
========
if(b1==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(b2==0.0){
break;
}
b1=b2;
if(work[k-3]>work[k-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b2==0.0){
break;
}
b1=b2;
if(work[start-3]>work[i4-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[start-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(b2==0.0){
break;
}
b1=b2;
if(work[start-3]>work[start-7]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(absG==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dN==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(gap2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN2=work[pingPong];
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(TOLERANCE_2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin=Math.min(dMin,dN2);
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
b1=Math.min(eMin,work[start]);
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin=Math.min(dMin,dN2);
b1=Math.min(eMin,work[start]);
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
b1=Math.min(eMin,work[start-1]);
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin=Math.min(dMin,dN2);
b1=Math.min(eMin,work[start-1]);
if(b2==0.0){
break;
}
b1=b2;
if(work[i4]>work[i4-2]){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math.linear.EigenDecompositionImpl,1508
org.apache.commons.math.linear.EigenDecompositionImpl,1509
org.apache.commons.math.linear.EigenDecompositionImpl,1511
========
if(100*Math.max(b2,b1)<a2||cnst1<a2){
break;
}
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-7]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i4-5]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i4]>work[i4-7]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
gam=dN;
a2=a2+b2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-5]>work[nn-7]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
gam=dN;
a2=a2+b2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i4-5]>work[i4-7]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i4-5]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
gam=dN;
a2=a2+b2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i4]>work[i4-7]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
gam=dN;
a2=a2+b2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i4-5]>work[i4-7]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
gam=dN;
a2=a2+b2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[nn-9]>work[nn-11]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i4-9]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i4]>work[i4-11]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
np=i4-13;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
np=i4-13;
if(work[nn-9]>work[nn-11]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i4-9]>work[i4-11]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
np=i4-13;
if(work[i4-9]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
np=i4-13;
if(work[i4]>work[i4-11]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
np=i4-13;
if(work[i4-9]>work[i4-11]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[np-4]>work[np-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[np-4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i4]>work[np-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
b2=work[np-2];
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 0
TESTING : math_81
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_1/math/math_81_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
Failing tests: 0
Successfully repair!
