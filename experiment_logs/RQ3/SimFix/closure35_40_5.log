java version "1.7.0_231"
OpenJDK Runtime Environment (rhel-2.6.19.1.el7_6-x86_64 u231-b01)
OpenJDK 64-Bit Server VM (build 24.231-b01, mixed mode)
Check out 22784dc9 to /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/ OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Run post-checkout hook..................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff 22784dc9:7e3e1a66..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Closure-35b..................................... OK
Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK
Failing tests: 1
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5
PURIFY IS FALSE
=================================================
Project : closure_35	start : 19/10/19 14:24

Field type inconsistancy 'errors' with types : JSError[] and List<JSError>
Field type inconsistancy 'SUPER' with types : FunctionInjector.Reference and SimpleReference<SimpleSlot>
Variable type inconsistancy of 'start' in method 'parseRegExp,String,String' with types : int and char
Variable type inconsistancy of 'end' in method 'parseRegExp,String,String' with types : int and char
Field type inconsistancy 'type' with types : Type and JSType
Variable type inconsistancy of 'name' in method 'visit,NodeTraversal,Node,Node' with types : String and Name
Field type inconsistancy 'THIS' with types : Token and int
readFailedTest: path is /mnt/nfs/work1/brun/mmotwani/SimFix/d4j-info/failed_tests/closure/35.txt#ATTEMPTS: 1

# FAILING TESTS: 1
TIMEOUT : 18000000
===========
locations= [<com.google.javascript.jscomp.TypeValidator,377>, <com.google.javascript.jscomp.TypeValidator,382>, <com.google.javascript.jscomp.TypeValidator,384>, <com.google.javascript.jscomp.TypeValidator,390>, <com.google.javascript.jscomp.TypeCheck,764>, <com.google.javascript.jscomp.TypeCheck,765>, <com.google.javascript.jscomp.TypeCheck,913>, <com.google.javascript.jscomp.TypeCheck,914>, <com.google.javascript.jscomp.TypeCheck,915>, <com.google.javascript.jscomp.TypeCheck,916>, <com.google.javascript.jscomp.TypeCheck,917>, <com.google.javascript.jscomp.TypeCheck,1235>, <com.google.javascript.jscomp.TypeCheck,1236>, <com.google.javascript.jscomp.TypeCheck,1237>, <com.google.javascript.jscomp.TypeCheck,1238>, <com.google.javascript.jscomp.TypeCheck,1239>, <com.google.javascript.jscomp.TypeCheck,1240>, <com.google.javascript.jscomp.TypeCheck,1798>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1314>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1329>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1331>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1332>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1456>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1491>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1492>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1494>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1493>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1497>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1617>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1620>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1621>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1625>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1626>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1628>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1629>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1630>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1633>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1638>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1643>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1645>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1647>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1655>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1622>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1664>, <com.google.javascript.rhino.jstype.UnknownType,191>, <com.google.javascript.rhino.jstype.PrototypeObjectType,186>, <com.google.javascript.rhino.jstype.PrototypeObjectType,354>, <com.google.javascript.rhino.jstype.PrototypeObjectType,356>, <com.google.javascript.rhino.jstype.PrototypeObjectType,358>, <com.google.javascript.rhino.jstype.PrototypeObjectType,361>, <com.google.javascript.rhino.jstype.PrototypeObjectType,362>, <com.google.javascript.rhino.jstype.PrototypeObjectType,363>, <com.google.javascript.rhino.jstype.PrototypeObjectType,366>, <com.google.javascript.rhino.jstype.PrototypeObjectType,365>, <com.google.javascript.rhino.jstype.PrototypeObjectType,369>, <com.google.javascript.rhino.jstype.PrototypeObjectType,370>, <com.google.javascript.rhino.jstype.PrototypeObjectType,372>, <com.google.javascript.rhino.jstype.PrototypeObjectType,373>, <com.google.javascript.rhino.jstype.PrototypeObjectType,374>, <com.google.javascript.rhino.jstype.PrototypeObjectType,378>, <com.google.javascript.rhino.jstype.PrototypeObjectType,379>, <com.google.javascript.rhino.jstype.PrototypeObjectType,380>, <com.google.javascript.rhino.jstype.PrototypeObjectType,382>, <com.google.javascript.rhino.jstype.PrototypeObjectType,383>, <com.google.javascript.rhino.jstype.PrototypeObjectType,387>, <com.google.javascript.rhino.jstype.PrototypeObjectType,389>, <com.google.javascript.rhino.jstype.PrototypeObjectType,391>, <com.google.javascript.rhino.jstype.PrototypeObjectType,392>, <com.google.javascript.rhino.jstype.PrototypeObjectType,458>, <com.google.javascript.rhino.Node,2350>, <com.google.javascript.jscomp.parsing.IRFactory,211>, <com.google.javascript.jscomp.parsing.IRFactory,212>, <com.google.javascript.jscomp.parsing.IRFactory,224>, <com.google.javascript.jscomp.parsing.TypeSafeDispatcher,173>, <com.google.javascript.jscomp.parsing.TypeSafeDispatcher,174>, <com.google.javascript.jscomp.parsing.TypeSafeDispatcher,236>, <com.google.javascript.jscomp.parsing.IRFactory,681>, <com.google.javascript.jscomp.parsing.IRFactory,682>, <com.google.javascript.jscomp.parsing.IRFactory,683>, <com.google.javascript.jscomp.parsing.IRFactory,684>, <com.google.javascript.jscomp.parsing.IRFactory,685>, <com.google.javascript.jscomp.parsing.IRFactory,687>, <com.google.javascript.jscomp.parsing.IRFactory,874>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1713>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1714>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1716>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1717>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1724>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1967>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1975>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1976>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1980>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1982>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1983>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1984>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1985>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1988>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1989>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1993>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1994>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1996>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1997>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2001>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2003>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2005>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2006>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2007>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2010>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2012>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2060>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2061>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2063>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2067>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2068>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2072>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2074>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2075>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2082>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2085>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2087>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2091>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2093>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2094>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2095>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2106>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2113>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2115>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2119>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2120>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2125>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2129>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2130>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2132>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2136>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2137>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2138>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2139>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2147>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2149>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2150>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2251>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2252>, <com.google.javascript.jscomp.parsing.JsDocTokenStream,135>, <com.google.javascript.jscomp.parsing.JsDocTokenStream,136>, <com.google.javascript.rhino.JSDocInfo,939>, <com.google.javascript.jscomp.NodeTraversal,554>, <com.google.javascript.jscomp.NodeUtil,1450>, <com.google.javascript.jscomp.NodeUtil,1630>, <com.google.javascript.jscomp.NodeUtil,1672>, <com.google.javascript.jscomp.NodeUtil,1675>, <com.google.javascript.jscomp.TypedScopeCreator,642>, <com.google.javascript.jscomp.TypedScopeCreator,1477>, <com.google.javascript.jscomp.TypeInference,156>, <com.google.javascript.jscomp.TypeInference,187>, <com.google.javascript.jscomp.TypeInference,188>, <com.google.javascript.jscomp.TypeInference,189>, <com.google.javascript.jscomp.TypeInference,201>, <com.google.javascript.jscomp.TypeInference,202>, <com.google.javascript.jscomp.TypeInference,232>, <com.google.javascript.jscomp.TypeInference,233>, <com.google.javascript.jscomp.TypeInference,236>, <com.google.javascript.jscomp.TypeInference,671>, <com.google.javascript.jscomp.TypeInference,673>, <com.google.javascript.jscomp.TypeInference,675>, <com.google.javascript.jscomp.TypeInference,676>, <com.google.javascript.jscomp.TypeInference,677>, <com.google.javascript.jscomp.TypeInference,678>, <com.google.javascript.jscomp.TypeInference,679>, <com.google.javascript.jscomp.TypeInference,681>, <com.google.javascript.jscomp.TypeInference,684>, <com.google.javascript.jscomp.TypeInference,687>, <com.google.javascript.jscomp.TypeInference,688>, <com.google.javascript.jscomp.TypeInference,689>, <com.google.javascript.jscomp.TypeInference,690>, <com.google.javascript.jscomp.TypeInference,691>, <com.google.javascript.jscomp.TypeInference,692>, <com.google.javascript.jscomp.TypeInference,696>, <com.google.javascript.jscomp.TypeInference,700>, <com.google.javascript.jscomp.TypeInference,674>, <com.google.javascript.jscomp.TypeInference,704>, <com.google.javascript.jscomp.TypeInference,1122>, <com.google.javascript.jscomp.TypeInference,1123>, <com.google.javascript.jscomp.TypeInference,1181>, <com.google.javascript.jscomp.TypeInference,1182>, <com.google.javascript.jscomp.ControlFlowAnalysis,260>, <com.google.javascript.jscomp.ControlFlowAnalysis,298>, <com.google.javascript.jscomp.ControlFlowAnalysis,299>, <com.google.javascript.jscomp.ControlFlowAnalysis,358>, <com.google.javascript.jscomp.ControlFlowAnalysis,359>, <com.google.javascript.jscomp.ControlFlowAnalysis,360>, <com.google.javascript.jscomp.ControlFlowAnalysis,362>, <com.google.javascript.jscomp.ControlFlowAnalysis,366>, <com.google.javascript.jscomp.ControlFlowAnalysis,368>, <com.google.javascript.jscomp.ControlFlowAnalysis,370>, <com.google.javascript.jscomp.ControlFlowAnalysis,720>, <com.google.javascript.jscomp.LinkedFlowScope,115>, <com.google.javascript.jscomp.LinkedFlowScope,116>, <com.google.javascript.jscomp.LinkedFlowScope,119>, <com.google.javascript.jscomp.LinkedFlowScope,450>, <com.google.javascript.jscomp.LinkedFlowScope,452>]
======================com.google.javascript.jscomp.TypeValidator,377
========
ensureTyped(t,n,BOOLEAN_TYPE);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,OBJECT_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,STRING_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,NUMBER_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
return false;
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
return false;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
if(n.isGetProp()&&!t.inGlobalScope()){
return true;
}
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
if(n.isGetProp()&&!t.inGlobalScope()){
return true;
}
return false;

registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
if(n.isGetProp()&&!t.inGlobalScope()){
return true;
}
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
if(n.isGetProp()&&!t.inGlobalScope()){
return true;
}
return false;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(n.isGetProp()&&!t.inGlobalScope()){
return true;
}
return false;
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(n.isGetProp()&&!t.inGlobalScope()){
return true;
}
registerMismatch(rightType,leftType,null);
}else {
if(n.isGetProp()&&!t.inGlobalScope()){
return true;
}
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
if(n.isGetProp()&&!t.inGlobalScope()){
return true;
}
registerMismatch(rightType,leftType,null);
}else {
return false;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return false;
registerMismatch(rightType,leftType,null);
}else {
if(n.isGetProp()&&!t.inGlobalScope()){
return true;
}
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return false;
registerMismatch(rightType,leftType,null);
}else {
return false;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
if(n.isGetProp()&&!t.inGlobalScope()){
return true;
}
return false;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(n.isGetProp()&&!t.inGlobalScope()){
return true;
}
return false;
registerMismatch(rightType,leftType,null);
}else {
if(n.isGetProp()&&!t.inGlobalScope()){
return true;
}
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(n.isGetProp()&&!t.inGlobalScope()){
return true;
}
return false;
registerMismatch(rightType,leftType,null);
}else {
return false;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(n.isGetProp()&&!t.inGlobalScope()){
return true;
}
registerMismatch(rightType,leftType,null);
}else {
if(n.isGetProp()&&!t.inGlobalScope()){
return true;
}
return false;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return false;
registerMismatch(rightType,leftType,null);
}else {
if(n.isGetProp()&&!t.inGlobalScope()){
return true;
}
return false;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(n.isGetProp()&&!t.inGlobalScope()){
return true;
}
return false;
registerMismatch(rightType,leftType,null);
}else {
if(n.isGetProp()&&!t.inGlobalScope()){
return true;
}
return false;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
return ;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rightType==null){
rightType=getNativeType(UNKNOWN_TYPE);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
hasVar=true;
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
hasVar=true;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
super.visit(t,n,n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
ensureTyped(t,n);
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
ensureTyped(t,n);
return ;

registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
ensureTyped(t,n);
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
ensureTyped(t,n);
return ;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
return ;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(t.getScopeDepth()<2){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
info.occurrences.add(new StringOccurrence(n,n));
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
info.numOccurrences++;
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
type=leftType;
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
type=leftType;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ensureTyped(t,n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
global.uses.add(n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case GET_BOOLEAN :

if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(createNameInformation(t,n,n)==null){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addSuppression("duplicate");
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.addSuppression("duplicate");
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.addSuppression("duplicate");
registerMismatch(rightType,leftType,null);
}else {
n.addSuppression("duplicate");
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case OVERRIDE_DEFAULT_VALUE :

if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
findFunctionExpressions(t,n);
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
findFunctionExpressions(t,n);
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(t.getScope().getVar(n.getString())==null){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.getBestLValueName(NodeUtil.getBestLValue(n))!=null&&lValueName.endsWith(".prototype")){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
nameObj.type=type;
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.setString(FOUND_REQUIRED);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.setString(FOUND_REQUIRED);
compiler.reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.GETPROP :

if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
childType=rightType.autobox();
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
childType=rightType.autobox();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n.getNext();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
defineSlot(n,n,leftType,shouldReport);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.detachChildren();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()&&n==n.getFirstChild()&&NodeUtil.isAssignmentOp(parent)){
return false;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
addSymbolUse(FOUND_REQUIRED,t.getModule(),PROPERTY);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
this.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return IR.breakNode();
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
this.reportCodeChange();
return IR.breakNode();

registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
this.reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
return IR.breakNode();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
this.reportCodeChange();
return IR.breakNode();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.getParent().replaceChild(n,n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
Preconditions.checkState(n.hasOneChild());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
newInitializer=n.getFirstChild();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
Preconditions.checkState(n.hasOneChild());
newInitializer=n.getFirstChild();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.putProp(Node.ORIGINALNAME_PROP,FOUND_REQUIRED);
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.putProp(Node.ORIGINALNAME_PROP,FOUND_REQUIRED);
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.putProp(Node.ORIGINALNAME_PROP,FOUND_REQUIRED);
registerMismatch(rightType,leftType,null);
}else {
n.putProp(Node.ORIGINALNAME_PROP,FOUND_REQUIRED);
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.isCall());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.isString());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.isCall());
Preconditions.checkArgument(n.isString());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==null||n==n){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(!NodeUtil.isObjectLitKey(n,n.getParent()));
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.getLastChild().detachFromParent();
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
return IR.exprResult(n).srcref(n);
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return IR.exprResult(n).srcref(n);

registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
return IR.exprResult(n).srcref(n);
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
return IR.exprResult(n).srcref(n);

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return null;
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
return null;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n;
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
return n;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n!=null){
newReportFunctionExitNode().addChildToBack(returnRhs);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.addChildToFront(newReportFunctionExitNode());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
tryDefineLexicalQualifiedNameRef(NodeUtil.getBestLValueName(n),n);
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
tryDefineLexicalQualifiedNameRef(NodeUtil.getBestLValueName(n),n);
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
new Node(Token.AND).addChildToBack(NodeUtil.getConditionExpression(n));
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
new Node(Token.AND).addChildToBack(IR.not(n).srcref(ifCondition));
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
new Node(Token.AND).addChildToBack(NodeUtil.getConditionExpression(n));
new Node(Token.AND).addChildToBack(IR.not(n).srcref(ifCondition));

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
Preconditions.checkState(n.getLastChild()==n);
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
Preconditions.checkState(n.getLastChild()==n);
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
Preconditions.checkState(n.getLastChild()==n);
registerMismatch(rightType,leftType,null);
}else {
Preconditions.checkState(n.getLastChild()==n);
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(TWEAK_FUNCTIONS_MAP.get(msg)==null){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
defineSlot(n,n,typeRegistry.getNativeObjectType(UNKNOWN_TYPE),true);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isName());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
add(getFirstNonEmptyChild(n),Context.STATEMENT);
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
add(getFirstNonEmptyChild(n),Context.STATEMENT);
return ;

registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
Preconditions.checkState(n.isName());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
return null;
registerMismatch(rightType,leftType,null);
}else {
return null;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.setString(coalescedVar.name);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,n.getFirstChild().getNext());
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
return n.getFirstChild().getNext();
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,n.getFirstChild().getNext());
reportCodeChange();
return n.getFirstChild().getNext();

registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,n.getFirstChild().getNext());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
return n.getFirstChild().getNext();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,n.getFirstChild().getNext());
reportCodeChange();
return n.getFirstChild().getNext();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,n.getFirstChild().getNext());
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,n.getFirstChild().getNext());
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,n.getFirstChild().getNext());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,n.getFirstChild().getNext());
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,n.getFirstChild().getNext());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,n.getFirstChild().getNext());
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,n.getFirstChild().getNext());
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,n.getFirstChild().getNext());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,n.getFirstChild().getNext());
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,n.getFirstChild().getNext());
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,n.getFirstChild().getNext());
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,n.getFirstChild().getNext());
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,n.getFirstChild().getNext());
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,n.getFirstChild().getNext());
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
key=n.getFirstChild().getNext();
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
key=n.getFirstChild().getNext();
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n;
registerMismatch(rightType,leftType,null);
}else {
return n;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getString().isEmpty()){
Preconditions.checkState(n.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(parent));
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(NodeUtil.isGet(n));
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isAssignmentTarget(n)){
return n;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return NodeUtil.newExpr(n);
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return NodeUtil.newExpr(n);

registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
return NodeUtil.newExpr(n);
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
return NodeUtil.newExpr(n);

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
return n;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n;
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n;
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n;
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
return n;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
return n;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
return n;
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
return n;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
return n;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
return n;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
return n;
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n;
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n;
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
return n;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n;
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n;
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
return n;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n;
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n;
registerMismatch(rightType,leftType,null);
}else {
return n;
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
return n;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
return n;
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
return n;
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
return n;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
return n;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
return n;
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
return n;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
return n;
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
return n;
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n;
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
return n;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n;
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n;
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
return n;
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n;
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
return n;
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
return n;
reportCodeChange();
return n;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
elseBody=null;
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
elseBody=null;
reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
elseBody=null;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
elseBody=null;
reportCodeChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(!n.getFirstChild().isEmpty()){
IR.block().srcref(n).addChildrenToFront(n.getFirstChild());
}else {
IR.block().srcref(n).setWasEmptyNode(true);
}
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
c=IR.block().srcref(n);
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportChange();
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(!n.getFirstChild().isEmpty()){
IR.block().srcref(n).addChildrenToFront(n.getFirstChild());
}else {
IR.block().srcref(n).setWasEmptyNode(true);
}
c=IR.block().srcref(n);
reportChange();

registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
if(!n.getFirstChild().isEmpty()){
IR.block().srcref(n).addChildrenToFront(n.getFirstChild());
}else {
IR.block().srcref(n).setWasEmptyNode(true);
}
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
c=IR.block().srcref(n);
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
reportChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
if(!n.getFirstChild().isEmpty()){
IR.block().srcref(n).addChildrenToFront(n.getFirstChild());
}else {
IR.block().srcref(n).setWasEmptyNode(true);
}
c=IR.block().srcref(n);
reportChange();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
validateVar(n);
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(NodeUtil.isObjectLitKey(n,n.getParent())||n.getType()==Token.NAME||nType==Token.GETPROP);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.setJSType(leftType);
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.setJSType(leftType);
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.setJSType(leftType);
registerMismatch(rightType,leftType,null);
}else {
n.setJSType(leftType);
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.isNew());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isFunction());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
sourceName=getSourceName(n);
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
curNode=n;
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
traverseBranch(n.getFirstChild().getNext(),n);
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
traverseBranch(n,n);
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
popScope();
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
sourceName=getSourceName(n);
curNode=n;
traverseBranch(n.getFirstChild().getNext(),n);
traverseBranch(n,n);
popScope();

registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
staleInputs=true;
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
return ;

registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
return ;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
return ;
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
return ;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
return ;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
return ;
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
return ;
registerMismatch(rightType,leftType,null);
}else {
return ;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
return ;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
return ;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
return ;
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
return ;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!typeA.isEnumType()){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
return n;
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
return n;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
return n;
registerMismatch(rightType,leftType,null);
}else {
return n;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(shouldReport&&!n.getFirstChild().hasChildren()){
throw new IllegalStateException("Empty VAR node.");
}
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
if(shouldReport&&!n.getFirstChild().hasChildren()){
throw new IllegalStateException("Empty VAR node.");
}
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
if(shouldReport&&!n.getFirstChild().hasChildren()){
throw new IllegalStateException("Empty VAR node.");
}
registerMismatch(rightType,leftType,null);
}else {
if(shouldReport&&!n.getFirstChild().hasChildren()){
throw new IllegalStateException("Empty VAR node.");
}
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
trueBlock=n.getFirstChild().getNext();
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
falseBlock=n.getNext();
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
trueBlock=n.getFirstChild().getNext();
falseBlock=n.getNext();
trueBlock=n.getFirstChild().getNext();
falseBlock=n.getNext();

registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
trueBlock=n.getFirstChild().getNext();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
falseBlock=n.getNext();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
trueBlock=n.getFirstChild().getNext();
falseBlock=n.getNext();
trueBlock=n.getFirstChild().getNext();
falseBlock=n.getNext();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(NodeUtil.isImmutableValue(n)){
replacementNode=IR.falseNode();
}
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
if(NodeUtil.isImmutableValue(n)){
replacementNode=IR.falseNode();
}
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.hasOneChild());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
backwardsInferenceFromCallSite(n,getJSType(n).restrictByNotNullOrUndefined().toMaybeFunctionType());
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.getParent().replaceChild(n,n);
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return true;
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
return true;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!n.getNext().getFirstChild().isCall()){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,n.getFirstChild());
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
return n.getFirstChild();
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,n.getFirstChild());
reportCodeChange();
return n.getFirstChild();

registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,n.getFirstChild());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
return n.getFirstChild();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,n.getFirstChild());
reportCodeChange();
return n.getFirstChild();

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isTry());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,n.getFirstChild());
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,n.getFirstChild());
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,n.getFirstChild());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,n.getFirstChild());
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isTry());
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,n.getFirstChild());
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,n.getFirstChild());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isTry());
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,n.getFirstChild());
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isTry());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,n.getFirstChild());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isTry());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,n.getFirstChild());
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,n.getFirstChild());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,n.getFirstChild());
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isTry());
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,n.getFirstChild());
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,n.getFirstChild());
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,n.getFirstChild());
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isTry());
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,n.getFirstChild());
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,n.getFirstChild());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isTry());
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,n.getFirstChild());
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,n.getFirstChild());
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isTry());
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,n.getFirstChild());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isTry());
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isTry());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,n.getFirstChild());
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,n.getFirstChild());
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,n.getFirstChild());
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isTry());
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,n.getFirstChild());
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,n.getFirstChild());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isTry());
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,n.getFirstChild());
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isTry());
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,n.getFirstChild());
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,n.getFirstChild());
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isTry());
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,n.getFirstChild());
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getFirstChild().getNext()!=null){
if(right.getNext()!=null||!NodeUtil.isImmutableValue(right)){
return n;
}
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isExprAssign(n)){
return false;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 0
TESTING : closure_35
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - com.google.javascript.jscomp.TypeValidatorTest::testFunctionMismatch2
  - com.google.javascript.jscomp.TypeValidatorTest::testFunctionMismatch
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceInheritanceCheck9
  - com.google.javascript.jscomp.TypeCheckTest::testNullAnd
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceAssignment11
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceAssignment10
  - com.google.javascript.jscomp.TypeCheckTest::testClosure7
  - com.google.javascript.jscomp.TypeCheckTest::testThis10
  - com.google.javascript.jscomp.TypeCheckTest::testMethodInference5
  - com.google.javascript.jscomp.TypeCheckTest::testMethodInference4
  - com.google.javascript.jscomp.TypeCheckTest::testMethodInference3
  - com.google.javascript.jscomp.TypeCheckTest::testMethodInference2
  - com.google.javascript.jscomp.TypeCheckTest::testMethodInference1
  - com.google.javascript.jscomp.TypeCheckTest::testIssue86
  - com.google.javascript.jscomp.TypeCheckTest::testNullOr
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference9
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference8
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference7
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference6
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference5
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference4
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference3
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference2
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference1
  - com.google.javascript.jscomp.TypeCheckTest::testNumberUnboxing
  - com.google.javascript.jscomp.TypeCheckTest::testGoodExtends8
  - com.google.javascript.jscomp.TypeCheckTest::testGoodExtends7
  - com.google.javascript.jscomp.TypeCheckTest::testGoodExtends6
  - com.google.javascript.jscomp.TypeCheckTest::testEnum41
  - com.google.javascript.jscomp.TypeCheckTest::testEnum40
  - com.google.javascript.jscomp.TypeCheckTest::testEnum39
  - com.google.javascript.jscomp.TypeCheckTest::testEnum36
  - com.google.javascript.jscomp.TypeCheckTest::testEnum31
  - com.google.javascript.jscomp.TypeCheckTest::testEnum29
  - com.google.javascript.jscomp.TypeCheckTest::testEnum24
  - com.google.javascript.jscomp.TypeCheckTest::testEnum23
  - com.google.javascript.jscomp.TypeCheckTest::testEnum19
  - com.google.javascript.jscomp.TypeCheckTest::testEnum13
  - com.google.javascript.jscomp.TypeCheckTest::testHigherOrderFunctions2
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments13
  - com.google.javascript.jscomp.TypeCheckTest::testDuplicateLocalVarDecl
  - com.google.javascript.jscomp.TypeCheckTest::testStringUnboxing
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyTypeOfUnionType
  - com.google.javascript.jscomp.TypeCheckTest::testTypeOfReduction7
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyInference7
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyInference4
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyInference3
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyInference2
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyInference1
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedArray7
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedArray6
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedArray4
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedArray2
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedArray1
  - com.google.javascript.jscomp.TypeCheckTest::testTypeCheck16
  - com.google.javascript.jscomp.TypeCheckTest::testTypeCheck15
  - com.google.javascript.jscomp.TypeCheckTest::testTypeCheck13
  - com.google.javascript.jscomp.TypeCheckTest::testTypeCheck11
  - com.google.javascript.jscomp.TypeCheckTest::testOverriddenReturn1
  - com.google.javascript.jscomp.TypeCheckTest::testQualifiedNameReduction5c
  - com.google.javascript.jscomp.TypeCheckTest::testQualifiedNameReduction5b
  - com.google.javascript.jscomp.TypeCheckTest::testQualifiedNameReduction10
  - com.google.javascript.jscomp.TypeCheckTest::testReturn8
  - com.google.javascript.jscomp.TypeCheckTest::testReturn7
  - com.google.javascript.jscomp.TypeCheckTest::testReturn6
  - com.google.javascript.jscomp.TypeCheckTest::testReturn4
  - com.google.javascript.jscomp.TypeCheckTest::testReturn3
  - com.google.javascript.jscomp.TypeCheckTest::testReturn2
  - com.google.javascript.jscomp.TypeCheckTest::testReturn1
  - com.google.javascript.jscomp.TypeCheckTest::testInnerFunction10
  - com.google.javascript.jscomp.TypeCheckTest::testScopedConstructors1
  - com.google.javascript.jscomp.TypeCheckTest::testNoTypeCheck9
  - com.google.javascript.jscomp.TypeCheckTest::testInnerFunction5
  - com.google.javascript.jscomp.TypeCheckTest::testInnerFunction4
  - com.google.javascript.jscomp.TypeCheckTest::testInnerFunction3
  - com.google.javascript.jscomp.TypeCheckTest::testInnerFunction2
  - com.google.javascript.jscomp.TypeCheckTest::testInnerFunction1
  - com.google.javascript.jscomp.TypeCheckTest::testBooleanPreservation4
  - com.google.javascript.jscomp.TypeCheckTest::testBooleanPreservation2
  - com.google.javascript.jscomp.TypeCheckTest::testBooleanPreservation1
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference20
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference19
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference18
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference17
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference16
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference15
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference14
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference13
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference12
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference11
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference10
  - com.google.javascript.jscomp.TypeCheckTest::testResolutionViaRegistry4
  - com.google.javascript.jscomp.TypeCheckTest::testResolutionViaRegistry3
  - com.google.javascript.jscomp.TypeCheckTest::testResolutionViaRegistry2
  - com.google.javascript.jscomp.TypeCheckTest::testResolutionViaRegistry1
  - com.google.javascript.jscomp.TypeCheckTest::testControlFlowRestrictsType2
  - com.google.javascript.jscomp.TypeCheckTest::testBug909000
  - com.google.javascript.jscomp.TypeCheckTest::testTypeCheckNoDowncastToNumber
  - com.google.javascript.jscomp.TypeCheckTest::testNumberAutoboxing
  - com.google.javascript.jscomp.TypeCheckTest::testNoTypeCheck13
  - com.google.javascript.jscomp.TypeCheckTest::testNoTypeCheck10
  - com.google.javascript.jscomp.TypeCheckTest::testQualifiedNameReduction7
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceInheritanceCheck10
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration9
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration8
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration7
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration6
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration5
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration4
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration3
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration2
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration1
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias10
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedObject5
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedObject4
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedObject3
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedObject2
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedObject1
  - com.google.javascript.jscomp.TypeCheckTest::testLends11
  - com.google.javascript.jscomp.TypeCheckTest::testLends10
  - com.google.javascript.jscomp.TypeCheckTest::testDefinePropertyOnNullableObject2
  - com.google.javascript.jscomp.TypeCheckTest::testDefinePropertyOnNullableObject1
  - com.google.javascript.jscomp.TypeCheckTest::testDirectPrototypeAssignment1
  - com.google.javascript.jscomp.TypeCheckTest::testStringAutoboxing
  - com.google.javascript.jscomp.TypeCheckTest::testBooleanAutoboxing
  - com.google.javascript.jscomp.TypeCheckTest::testBooleanUnboxing
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration10
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyUsedBeforeDefinition2
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyUsedBeforeDefinition1
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceAssignment9
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceAssignment6
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceAssignment2
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias9
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias8
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias7
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias4
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias3
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias2
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias1
  - com.google.javascript.jscomp.TypeCheckTest::testOptionalUnknownNamedType
  - com.google.javascript.jscomp.TypeCheckTest::testInferredReturn8
  - com.google.javascript.jscomp.TypeCheckTest::testInferredReturn7
  - com.google.javascript.jscomp.TypeCheckTest::testInferredReturn6
  - com.google.javascript.jscomp.TypeCheckTest::testInferredReturn5
  - com.google.javascript.jscomp.TypeCheckTest::testInferredReturn4
  - com.google.javascript.jscomp.TypeCheckTest::testVar6
  - com.google.javascript.jscomp.TypeCheckTest::testVar5
  - com.google.javascript.jscomp.TypeCheckTest::testAnd3
  - com.google.javascript.jscomp.TypeCheckTest::testAnd2
  - com.google.javascript.jscomp.TypeCheckTest::testAdd9
  - com.google.javascript.jscomp.TypeCheckTest::testAdd8
  - com.google.javascript.jscomp.TypeCheckTest::testAdd7
  - com.google.javascript.jscomp.TypeCheckTest::testVar15
  - com.google.javascript.jscomp.TypeCheckTest::testVar14
  - com.google.javascript.jscomp.TypeCheckTest::testVar12
  - com.google.javascript.jscomp.TypeCheckTest::testVar11
  - com.google.javascript.jscomp.TypeCheckTest::testVar10
  - com.google.javascript.jscomp.TypeCheckTest::testThis8
  - com.google.javascript.jscomp.TypeCheckTest::testThis7
  - com.google.javascript.jscomp.TypeCheckTest::testThis6
  - com.google.javascript.jscomp.TypeCheckTest::testThis5
  - com.google.javascript.jscomp.TypeCheckTest::testThis4
  - com.google.javascript.jscomp.TypeCheckTest::testThis2
  - com.google.javascript.jscomp.TypeCheckTest::testThis1
  - com.google.javascript.jscomp.TypeCheckTest::testEnum8
  - com.google.javascript.jscomp.TypeCheckTest::testEnum6
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments4
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments3
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments2
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments1
  - com.google.javascript.jscomp.TypeCheckTest::testCast3
  - com.google.javascript.jscomp.TypeCheckTest::testBang1
  - com.google.javascript.jscomp.TypeCheckTest::testAdd18
  - com.google.javascript.jscomp.TypeCheckTest::testAdd17
  - com.google.javascript.jscomp.TypeCheckTest::testAdd16
  - com.google.javascript.jscomp.TypeCheckTest::testAdd15
  - com.google.javascript.jscomp.TypeCheckTest::testAdd14
  - com.google.javascript.jscomp.TypeCheckTest::testAdd13
  - com.google.javascript.jscomp.TypeCheckTest::testAdd12
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorType8
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorType4
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorType1
  - com.google.javascript.jscomp.TypeCheckTest::testOr5
  - com.google.javascript.jscomp.TypeCheckTest::testOr4
  - com.google.javascript.jscomp.TypeCheckTest::testOr2
  - com.google.javascript.jscomp.TypeCheckTest::testObjectPropertyTypeInferredInLocalScope3
  - com.google.javascript.jscomp.TypeCheckTest::testObjectPropertyTypeInferredInLocalScope2
  - com.google.javascript.jscomp.TypeCheckTest::testObjectPropertyTypeInferredInLocalScope1
  - com.google.javascript.jscomp.TypeCheckTest::testScoping12
  - com.google.javascript.jscomp.TypeCheckTest::testScoping11
  - com.google.javascript.jscomp.TypeCheckTest::testObjLitDef3b
  - com.google.javascript.jscomp.TypeCheckTest::testObjLitDef3a
  - com.google.javascript.jscomp.TypeCheckTest::testBackwardsEnumUse4
  - com.google.javascript.jscomp.TypeCheckTest::testBackwardsEnumUse2
  - com.google.javascript.jscomp.TypeCheckTest::testBackwardsTypedefUse6
  - com.google.javascript.jscomp.TypeCheckTest::testBackwardsTypedefUse4
  - com.google.javascript.jscomp.TypeCheckTest::testForwardPropertyReference
  - com.google.javascript.jscomp.TypeCheckTest::testNestedFunctionInference1
  - com.google.javascript.jscomp.TypeCheckTest::testDeleteOperator1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testNullAnd
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInterfaceAssignment11
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInterfaceAssignment10
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis10
  - com.google.javascript.jscomp.LooseTypeCheckTest::testMethodInference5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testMethodInference4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testMethodInference3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testMethodInference2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testMethodInference1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testIssue86
  - com.google.javascript.jscomp.LooseTypeCheckTest::testNullOr
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference9
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testNumberUnboxing
  - com.google.javascript.jscomp.LooseTypeCheckTest::testGoodExtends8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testGoodExtends7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testGoodExtends6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum40
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum39
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum36
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum31
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum29
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum24
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum23
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum19
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum13
  - com.google.javascript.jscomp.LooseTypeCheckTest::testHigherOrderFunctions2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments13
  - com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateLocalVarDecl
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStringUnboxing
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyTypeOfUnionType
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeOfReduction7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyInference7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyInference4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyInference3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyInference2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyInference1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedArray7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedArray6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedArray4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedArray2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedArray1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeCheck15
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeCheck13
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeCheck11
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInnerFunction5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInnerFunction4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInnerFunction3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInnerFunction2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInnerFunction1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBooleanPreservation4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBooleanPreservation2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBooleanPreservation1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference20
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference19
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference18
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference17
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference16
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference15
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference14
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference13
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference12
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference11
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference10
  - com.google.javascript.jscomp.LooseTypeCheckTest::testResolutionViaRegistry4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testResolutionViaRegistry3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testResolutionViaRegistry2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testResolutionViaRegistry1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testControlFlowRestrictsType2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testScopedConstructors
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBug909000
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeCheckNoDowncastToNumber
  - com.google.javascript.jscomp.LooseTypeCheckTest::testNumberAutoboxing
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration9
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias10
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedObject4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedObject3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedObject2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedObject1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testDefinePropertyOnNullableObject2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testDefinePropertyOnNullableObject1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testDirectPrototypeAssignment1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStringAutoboxing
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBooleanAutoboxing
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBooleanUnboxing
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration10
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeCheck16b
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeCheck16a
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyUsedBeforeDefinition2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyUsedBeforeDefinition1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInterfaceAssignment9
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInterfaceAssignment6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInterfaceAssignment2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias9
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testOptionalUnknownNamedType
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAnd3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAnd2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd9
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar15
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar14
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar12
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar11
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar10
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testCast3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBang1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd18
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd17
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd16
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd15
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd14
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd13
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd12
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorType4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorType1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testOr5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testOr4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testOr2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testObjectPropertyTypeInferredInLocalScope3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testObjectPropertyTypeInferredInLocalScope2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testObjectPropertyTypeInferredInLocalScope1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testScoping11
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBackwardsEnumUse4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBackwardsEnumUse2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testForwardPropertyReference
  - com.google.javascript.jscomp.LooseTypeCheckTest::testNestedFunctionInference1
  - com.google.javascript.jscomp.IntegrationTest::testTypeCheckAndInference
  - com.google.javascript.jscomp.DisambiguatePropertiesTest::testInvalidatingInterface
  - com.google.javascript.jscomp.DisambiguatePropertiesTest::testMismatchInvalidation
  - com.google.javascript.jscomp.AmbiguatePropertiesTest::testTypeMismatch
Failing tests: 373
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(shouldReport||typeA!=null);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
Preconditions.checkState(n.getFirstChild().getFirstChild().isName());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n.getFirstChild().getFirstChild().detachFromParent());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
redeclaration=true;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
Preconditions.checkState(n.getFirstChild().getFirstChild().isName());
n.addChildToBack(n.getFirstChild().getFirstChild().detachFromParent());
redeclaration=true;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n;
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
Preconditions.checkState(n.getFirstChild().getFirstChild().isName());
n.addChildToBack(n.getFirstChild().getFirstChild().detachFromParent());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n=n;
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
Preconditions.checkState(n.getFirstChild().getFirstChild().isName());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n=n;
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n.getFirstChild().getFirstChild().detachFromParent());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n=n;
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
Preconditions.checkState(n.getFirstChild().getFirstChild().isName());
n.addChildToBack(n.getFirstChild().getFirstChild().detachFromParent());
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.addChildToBack(n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.addChildToBack(n);
compiler.reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.detachFromParent();
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.detachFromParent();
return null;

registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.detachFromParent();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.detachFromParent();
return null;

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.detachFromParent();
return null;
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.detachFromParent();
registerMismatch(rightType,leftType,null);
}else {
n.detachFromParent();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.detachFromParent();
registerMismatch(rightType,leftType,null);
}else {
return null;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return null;
registerMismatch(rightType,leftType,null);
}else {
n.detachFromParent();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.detachFromParent();
return null;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.detachFromParent();
return null;
registerMismatch(rightType,leftType,null);
}else {
n.detachFromParent();
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.detachFromParent();
return null;
registerMismatch(rightType,leftType,null);
}else {
return null;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.detachFromParent();
registerMismatch(rightType,leftType,null);
}else {
n.detachFromParent();
return null;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return null;
registerMismatch(rightType,leftType,null);
}else {
n.detachFromParent();
return null;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.detachFromParent();
return null;
registerMismatch(rightType,leftType,null);
}else {
n.detachFromParent();
return null;
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getJSType()==null&&n.isFunction()){
varType=parent.getJSType();
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isAssign());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!shouldReport){
return n;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
if(new StringBuilder().length()!=0){
suggestion="Consider fixing errors for the following types: ";
suggestion+=new StringBuilder().toString();
}
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isName()||n.isGetProp());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(msg==null){
return false;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.isName()||n.isGetProp());
if(msg==null){
return false;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
if(n.getFirstChild().getJSType()==null||n.getFirstChild().getJSType().toObjectType()==null){
return ;
}
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
if(n.getFirstChild().getJSType()==null||n.getFirstChild().getJSType().toObjectType()==null){
return ;
}
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!shouldReport){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(t.getScope().getVar(msg)==null){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new NodeTraversal(compiler,new GatherCandiates()).traverse(t.getScopeRoot().getLastChild());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
replaceSymbol(n,msg);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(leftType==null){
break;
}
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(leftType.restrictByNotNullOrUndefined().toMaybeFunctionType()==null){
break;
}
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
retType=createUnionWithSubTypes(createType(leftType.restrictByNotNullOrUndefined().toMaybeFunctionType().getReturnType()));
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(leftType==null){
break;
}
if(leftType.restrictByNotNullOrUndefined().toMaybeFunctionType()==null){
break;
}
retType=createUnionWithSubTypes(createType(leftType.restrictByNotNullOrUndefined().toMaybeFunctionType().getReturnType()));

registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
if(leftType==null){
break;
}
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
if(leftType.restrictByNotNullOrUndefined().toMaybeFunctionType()==null){
break;
}
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
retType=createUnionWithSubTypes(createType(leftType.restrictByNotNullOrUndefined().toMaybeFunctionType().getReturnType()));
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
if(leftType==null){
break;
}
if(leftType.restrictByNotNullOrUndefined().toMaybeFunctionType()==null){
break;
}
retType=createUnionWithSubTypes(createType(leftType.restrictByNotNullOrUndefined().toMaybeFunctionType().getReturnType()));

mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
add(")");
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isCall());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!NodeUtil.isGet(n.getFirstChild())){
n.putBooleanProp(Node.FREE_CALL,true);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isCall());
if(!NodeUtil.isGet(n.getFirstChild())){
n.putBooleanProp(Node.FREE_CALL,true);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(inferConcreteType(getTopScope(),n).isNone()||type.isAll()){
break;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.children().iterator().next();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
com.google.javascript.jscomp.TypeValidator,382
com.google.javascript.jscomp.TypeValidator,384
========
if(!leftType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 0
TESTING : closure_35
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - com.google.javascript.jscomp.TypeValidatorTest::testFunctionMismatch2
  - com.google.javascript.jscomp.TypeValidatorTest::testFunctionMismatch
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceInheritanceCheck9
  - com.google.javascript.jscomp.TypeCheckTest::testNullAnd
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceAssignment11
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceAssignment10
  - com.google.javascript.jscomp.TypeCheckTest::testClosure7
  - com.google.javascript.jscomp.TypeCheckTest::testThis10
  - com.google.javascript.jscomp.TypeCheckTest::testMethodInference5
  - com.google.javascript.jscomp.TypeCheckTest::testMethodInference4
  - com.google.javascript.jscomp.TypeCheckTest::testMethodInference3
  - com.google.javascript.jscomp.TypeCheckTest::testMethodInference2
  - com.google.javascript.jscomp.TypeCheckTest::testMethodInference1
  - com.google.javascript.jscomp.TypeCheckTest::testIssue86
  - com.google.javascript.jscomp.TypeCheckTest::testNullOr
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference9
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference8
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference7
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference6
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference5
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference4
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference3
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference2
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference1
  - com.google.javascript.jscomp.TypeCheckTest::testNumberUnboxing
  - com.google.javascript.jscomp.TypeCheckTest::testGoodExtends8
  - com.google.javascript.jscomp.TypeCheckTest::testGoodExtends7
  - com.google.javascript.jscomp.TypeCheckTest::testGoodExtends6
  - com.google.javascript.jscomp.TypeCheckTest::testEnum41
  - com.google.javascript.jscomp.TypeCheckTest::testEnum40
  - com.google.javascript.jscomp.TypeCheckTest::testEnum39
  - com.google.javascript.jscomp.TypeCheckTest::testEnum36
  - com.google.javascript.jscomp.TypeCheckTest::testEnum31
  - com.google.javascript.jscomp.TypeCheckTest::testEnum29
  - com.google.javascript.jscomp.TypeCheckTest::testEnum24
  - com.google.javascript.jscomp.TypeCheckTest::testEnum23
  - com.google.javascript.jscomp.TypeCheckTest::testEnum19
  - com.google.javascript.jscomp.TypeCheckTest::testEnum13
  - com.google.javascript.jscomp.TypeCheckTest::testHigherOrderFunctions2
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments13
  - com.google.javascript.jscomp.TypeCheckTest::testDuplicateLocalVarDecl
  - com.google.javascript.jscomp.TypeCheckTest::testStringUnboxing
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyTypeOfUnionType
  - com.google.javascript.jscomp.TypeCheckTest::testTypeOfReduction7
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyInference7
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyInference4
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyInference3
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyInference2
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyInference1
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedArray7
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedArray6
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedArray4
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedArray2
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedArray1
  - com.google.javascript.jscomp.TypeCheckTest::testTypeCheck16
  - com.google.javascript.jscomp.TypeCheckTest::testTypeCheck15
  - com.google.javascript.jscomp.TypeCheckTest::testTypeCheck13
  - com.google.javascript.jscomp.TypeCheckTest::testTypeCheck11
  - com.google.javascript.jscomp.TypeCheckTest::testOverriddenReturn1
  - com.google.javascript.jscomp.TypeCheckTest::testQualifiedNameReduction5c
  - com.google.javascript.jscomp.TypeCheckTest::testQualifiedNameReduction5b
  - com.google.javascript.jscomp.TypeCheckTest::testQualifiedNameReduction10
  - com.google.javascript.jscomp.TypeCheckTest::testReturn8
  - com.google.javascript.jscomp.TypeCheckTest::testReturn7
  - com.google.javascript.jscomp.TypeCheckTest::testReturn6
  - com.google.javascript.jscomp.TypeCheckTest::testReturn4
  - com.google.javascript.jscomp.TypeCheckTest::testReturn3
  - com.google.javascript.jscomp.TypeCheckTest::testReturn2
  - com.google.javascript.jscomp.TypeCheckTest::testReturn1
  - com.google.javascript.jscomp.TypeCheckTest::testInnerFunction10
  - com.google.javascript.jscomp.TypeCheckTest::testScopedConstructors1
  - com.google.javascript.jscomp.TypeCheckTest::testNoTypeCheck9
  - com.google.javascript.jscomp.TypeCheckTest::testInnerFunction5
  - com.google.javascript.jscomp.TypeCheckTest::testInnerFunction4
  - com.google.javascript.jscomp.TypeCheckTest::testInnerFunction3
  - com.google.javascript.jscomp.TypeCheckTest::testInnerFunction2
  - com.google.javascript.jscomp.TypeCheckTest::testInnerFunction1
  - com.google.javascript.jscomp.TypeCheckTest::testBooleanPreservation4
  - com.google.javascript.jscomp.TypeCheckTest::testBooleanPreservation2
  - com.google.javascript.jscomp.TypeCheckTest::testBooleanPreservation1
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference20
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference19
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference18
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference17
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference16
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference15
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference14
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference13
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference12
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference11
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference10
  - com.google.javascript.jscomp.TypeCheckTest::testResolutionViaRegistry4
  - com.google.javascript.jscomp.TypeCheckTest::testResolutionViaRegistry3
  - com.google.javascript.jscomp.TypeCheckTest::testResolutionViaRegistry2
  - com.google.javascript.jscomp.TypeCheckTest::testResolutionViaRegistry1
  - com.google.javascript.jscomp.TypeCheckTest::testControlFlowRestrictsType2
  - com.google.javascript.jscomp.TypeCheckTest::testBug909000
  - com.google.javascript.jscomp.TypeCheckTest::testTypeCheckNoDowncastToNumber
  - com.google.javascript.jscomp.TypeCheckTest::testNumberAutoboxing
  - com.google.javascript.jscomp.TypeCheckTest::testNoTypeCheck13
  - com.google.javascript.jscomp.TypeCheckTest::testNoTypeCheck10
  - com.google.javascript.jscomp.TypeCheckTest::testQualifiedNameReduction7
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceInheritanceCheck10
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration9
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration8
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration7
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration6
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration5
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration4
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration3
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration2
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration1
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias10
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedObject5
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedObject4
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedObject3
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedObject2
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedObject1
  - com.google.javascript.jscomp.TypeCheckTest::testLends11
  - com.google.javascript.jscomp.TypeCheckTest::testLends10
  - com.google.javascript.jscomp.TypeCheckTest::testDefinePropertyOnNullableObject2
  - com.google.javascript.jscomp.TypeCheckTest::testDefinePropertyOnNullableObject1
  - com.google.javascript.jscomp.TypeCheckTest::testDirectPrototypeAssignment1
  - com.google.javascript.jscomp.TypeCheckTest::testStringAutoboxing
  - com.google.javascript.jscomp.TypeCheckTest::testBooleanAutoboxing
  - com.google.javascript.jscomp.TypeCheckTest::testBooleanUnboxing
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration10
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyUsedBeforeDefinition2
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyUsedBeforeDefinition1
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceAssignment9
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceAssignment6
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceAssignment2
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias9
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias8
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias7
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias4
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias3
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias2
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias1
  - com.google.javascript.jscomp.TypeCheckTest::testOptionalUnknownNamedType
  - com.google.javascript.jscomp.TypeCheckTest::testInferredReturn8
  - com.google.javascript.jscomp.TypeCheckTest::testInferredReturn7
  - com.google.javascript.jscomp.TypeCheckTest::testInferredReturn6
  - com.google.javascript.jscomp.TypeCheckTest::testInferredReturn5
  - com.google.javascript.jscomp.TypeCheckTest::testInferredReturn4
  - com.google.javascript.jscomp.TypeCheckTest::testVar6
  - com.google.javascript.jscomp.TypeCheckTest::testVar5
  - com.google.javascript.jscomp.TypeCheckTest::testAnd3
  - com.google.javascript.jscomp.TypeCheckTest::testAnd2
  - com.google.javascript.jscomp.TypeCheckTest::testAdd9
  - com.google.javascript.jscomp.TypeCheckTest::testAdd8
  - com.google.javascript.jscomp.TypeCheckTest::testAdd7
  - com.google.javascript.jscomp.TypeCheckTest::testVar15
  - com.google.javascript.jscomp.TypeCheckTest::testVar14
  - com.google.javascript.jscomp.TypeCheckTest::testVar12
  - com.google.javascript.jscomp.TypeCheckTest::testVar11
  - com.google.javascript.jscomp.TypeCheckTest::testVar10
  - com.google.javascript.jscomp.TypeCheckTest::testThis8
  - com.google.javascript.jscomp.TypeCheckTest::testThis7
  - com.google.javascript.jscomp.TypeCheckTest::testThis6
  - com.google.javascript.jscomp.TypeCheckTest::testThis5
  - com.google.javascript.jscomp.TypeCheckTest::testThis4
  - com.google.javascript.jscomp.TypeCheckTest::testThis2
  - com.google.javascript.jscomp.TypeCheckTest::testThis1
  - com.google.javascript.jscomp.TypeCheckTest::testEnum8
  - com.google.javascript.jscomp.TypeCheckTest::testEnum6
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments4
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments3
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments2
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments1
  - com.google.javascript.jscomp.TypeCheckTest::testCast3
  - com.google.javascript.jscomp.TypeCheckTest::testBang1
  - com.google.javascript.jscomp.TypeCheckTest::testAdd18
  - com.google.javascript.jscomp.TypeCheckTest::testAdd17
  - com.google.javascript.jscomp.TypeCheckTest::testAdd16
  - com.google.javascript.jscomp.TypeCheckTest::testAdd15
  - com.google.javascript.jscomp.TypeCheckTest::testAdd14
  - com.google.javascript.jscomp.TypeCheckTest::testAdd13
  - com.google.javascript.jscomp.TypeCheckTest::testAdd12
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorType8
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorType4
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorType1
  - com.google.javascript.jscomp.TypeCheckTest::testOr5
  - com.google.javascript.jscomp.TypeCheckTest::testOr4
  - com.google.javascript.jscomp.TypeCheckTest::testOr2
  - com.google.javascript.jscomp.TypeCheckTest::testObjectPropertyTypeInferredInLocalScope3
  - com.google.javascript.jscomp.TypeCheckTest::testObjectPropertyTypeInferredInLocalScope2
  - com.google.javascript.jscomp.TypeCheckTest::testObjectPropertyTypeInferredInLocalScope1
  - com.google.javascript.jscomp.TypeCheckTest::testScoping12
  - com.google.javascript.jscomp.TypeCheckTest::testScoping11
  - com.google.javascript.jscomp.TypeCheckTest::testObjLitDef3b
  - com.google.javascript.jscomp.TypeCheckTest::testObjLitDef3a
  - com.google.javascript.jscomp.TypeCheckTest::testBackwardsEnumUse4
  - com.google.javascript.jscomp.TypeCheckTest::testBackwardsEnumUse2
  - com.google.javascript.jscomp.TypeCheckTest::testBackwardsTypedefUse6
  - com.google.javascript.jscomp.TypeCheckTest::testBackwardsTypedefUse4
  - com.google.javascript.jscomp.TypeCheckTest::testForwardPropertyReference
  - com.google.javascript.jscomp.TypeCheckTest::testNestedFunctionInference1
  - com.google.javascript.jscomp.TypeCheckTest::testDeleteOperator1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testNullAnd
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInterfaceAssignment11
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInterfaceAssignment10
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis10
  - com.google.javascript.jscomp.LooseTypeCheckTest::testMethodInference5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testMethodInference4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testMethodInference3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testMethodInference2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testMethodInference1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testIssue86
  - com.google.javascript.jscomp.LooseTypeCheckTest::testNullOr
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference9
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testNumberUnboxing
  - com.google.javascript.jscomp.LooseTypeCheckTest::testGoodExtends8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testGoodExtends7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testGoodExtends6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum40
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum39
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum36
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum31
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum29
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum24
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum23
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum19
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum13
  - com.google.javascript.jscomp.LooseTypeCheckTest::testHigherOrderFunctions2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments13
  - com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateLocalVarDecl
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStringUnboxing
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyTypeOfUnionType
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeOfReduction7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyInference7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyInference4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyInference3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyInference2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyInference1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedArray7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedArray6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedArray4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedArray2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedArray1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeCheck15
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeCheck13
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeCheck11
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInnerFunction5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInnerFunction4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInnerFunction3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInnerFunction2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInnerFunction1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBooleanPreservation4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBooleanPreservation2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBooleanPreservation1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference20
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference19
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference18
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference17
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference16
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference15
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference14
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference13
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference12
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference11
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference10
  - com.google.javascript.jscomp.LooseTypeCheckTest::testResolutionViaRegistry4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testResolutionViaRegistry3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testResolutionViaRegistry2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testResolutionViaRegistry1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testControlFlowRestrictsType2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testScopedConstructors
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBug909000
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeCheckNoDowncastToNumber
  - com.google.javascript.jscomp.LooseTypeCheckTest::testNumberAutoboxing
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration9
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias10
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedObject4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedObject3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedObject2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedObject1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testDefinePropertyOnNullableObject2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testDefinePropertyOnNullableObject1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testDirectPrototypeAssignment1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStringAutoboxing
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBooleanAutoboxing
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBooleanUnboxing
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration10
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeCheck16b
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeCheck16a
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyUsedBeforeDefinition2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyUsedBeforeDefinition1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInterfaceAssignment9
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInterfaceAssignment6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInterfaceAssignment2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias9
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testOptionalUnknownNamedType
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAnd3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAnd2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd9
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar15
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar14
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar12
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar11
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar10
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testCast3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBang1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd18
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd17
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd16
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd15
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd14
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd13
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd12
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorType4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorType1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testOr5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testOr4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testOr2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testObjectPropertyTypeInferredInLocalScope3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testObjectPropertyTypeInferredInLocalScope2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testObjectPropertyTypeInferredInLocalScope1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testScoping11
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBackwardsEnumUse4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBackwardsEnumUse2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testForwardPropertyReference
  - com.google.javascript.jscomp.LooseTypeCheckTest::testNestedFunctionInference1
  - com.google.javascript.jscomp.IntegrationTest::testTypeCheckAndInference
  - com.google.javascript.jscomp.DisambiguatePropertiesTest::testInvalidatingInterface
  - com.google.javascript.jscomp.DisambiguatePropertiesTest::testMismatchInvalidation
  - com.google.javascript.jscomp.AmbiguatePropertiesTest::testTypeMismatch
Failing tests: 373
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftTypeRestricted.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rightType.canAssignTo(leftType)){
mismatch(t,n,msg,rightType,OBJECT_TYPE);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!castType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rightType.canAssignTo(rightType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 0
TESTING : closure_35
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - com.google.javascript.jscomp.TypeValidatorTest::testFunctionMismatch2
  - com.google.javascript.jscomp.TypeValidatorTest::testFunctionMismatch
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceInheritanceCheck9
  - com.google.javascript.jscomp.TypeCheckTest::testNullAnd
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceAssignment11
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceAssignment10
  - com.google.javascript.jscomp.TypeCheckTest::testClosure7
  - com.google.javascript.jscomp.TypeCheckTest::testThis10
  - com.google.javascript.jscomp.TypeCheckTest::testMethodInference5
  - com.google.javascript.jscomp.TypeCheckTest::testMethodInference4
  - com.google.javascript.jscomp.TypeCheckTest::testMethodInference3
  - com.google.javascript.jscomp.TypeCheckTest::testMethodInference2
  - com.google.javascript.jscomp.TypeCheckTest::testMethodInference1
  - com.google.javascript.jscomp.TypeCheckTest::testIssue86
  - com.google.javascript.jscomp.TypeCheckTest::testNullOr
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference9
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference8
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference7
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference6
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference5
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference4
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference3
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference2
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference1
  - com.google.javascript.jscomp.TypeCheckTest::testNumberUnboxing
  - com.google.javascript.jscomp.TypeCheckTest::testGoodExtends8
  - com.google.javascript.jscomp.TypeCheckTest::testGoodExtends7
  - com.google.javascript.jscomp.TypeCheckTest::testGoodExtends6
  - com.google.javascript.jscomp.TypeCheckTest::testEnum41
  - com.google.javascript.jscomp.TypeCheckTest::testEnum40
  - com.google.javascript.jscomp.TypeCheckTest::testEnum39
  - com.google.javascript.jscomp.TypeCheckTest::testEnum36
  - com.google.javascript.jscomp.TypeCheckTest::testEnum31
  - com.google.javascript.jscomp.TypeCheckTest::testEnum29
  - com.google.javascript.jscomp.TypeCheckTest::testEnum24
  - com.google.javascript.jscomp.TypeCheckTest::testEnum23
  - com.google.javascript.jscomp.TypeCheckTest::testEnum19
  - com.google.javascript.jscomp.TypeCheckTest::testEnum13
  - com.google.javascript.jscomp.TypeCheckTest::testHigherOrderFunctions2
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments13
  - com.google.javascript.jscomp.TypeCheckTest::testDuplicateLocalVarDecl
  - com.google.javascript.jscomp.TypeCheckTest::testStringUnboxing
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyTypeOfUnionType
  - com.google.javascript.jscomp.TypeCheckTest::testTypeOfReduction7
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyInference7
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyInference4
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyInference3
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyInference2
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyInference1
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedArray7
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedArray6
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedArray4
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedArray2
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedArray1
  - com.google.javascript.jscomp.TypeCheckTest::testTypeCheck16
  - com.google.javascript.jscomp.TypeCheckTest::testTypeCheck15
  - com.google.javascript.jscomp.TypeCheckTest::testTypeCheck13
  - com.google.javascript.jscomp.TypeCheckTest::testTypeCheck11
  - com.google.javascript.jscomp.TypeCheckTest::testOverriddenReturn1
  - com.google.javascript.jscomp.TypeCheckTest::testQualifiedNameReduction5c
  - com.google.javascript.jscomp.TypeCheckTest::testQualifiedNameReduction5b
  - com.google.javascript.jscomp.TypeCheckTest::testQualifiedNameReduction10
  - com.google.javascript.jscomp.TypeCheckTest::testReturn8
  - com.google.javascript.jscomp.TypeCheckTest::testReturn7
  - com.google.javascript.jscomp.TypeCheckTest::testReturn6
  - com.google.javascript.jscomp.TypeCheckTest::testReturn4
  - com.google.javascript.jscomp.TypeCheckTest::testReturn3
  - com.google.javascript.jscomp.TypeCheckTest::testReturn2
  - com.google.javascript.jscomp.TypeCheckTest::testReturn1
  - com.google.javascript.jscomp.TypeCheckTest::testInnerFunction10
  - com.google.javascript.jscomp.TypeCheckTest::testScopedConstructors1
  - com.google.javascript.jscomp.TypeCheckTest::testNoTypeCheck9
  - com.google.javascript.jscomp.TypeCheckTest::testInnerFunction5
  - com.google.javascript.jscomp.TypeCheckTest::testInnerFunction4
  - com.google.javascript.jscomp.TypeCheckTest::testInnerFunction3
  - com.google.javascript.jscomp.TypeCheckTest::testInnerFunction2
  - com.google.javascript.jscomp.TypeCheckTest::testInnerFunction1
  - com.google.javascript.jscomp.TypeCheckTest::testBooleanPreservation4
  - com.google.javascript.jscomp.TypeCheckTest::testBooleanPreservation2
  - com.google.javascript.jscomp.TypeCheckTest::testBooleanPreservation1
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference20
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference19
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference18
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference17
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference16
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference15
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference14
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference13
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference12
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference11
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference10
  - com.google.javascript.jscomp.TypeCheckTest::testResolutionViaRegistry4
  - com.google.javascript.jscomp.TypeCheckTest::testResolutionViaRegistry3
  - com.google.javascript.jscomp.TypeCheckTest::testResolutionViaRegistry2
  - com.google.javascript.jscomp.TypeCheckTest::testResolutionViaRegistry1
  - com.google.javascript.jscomp.TypeCheckTest::testControlFlowRestrictsType2
  - com.google.javascript.jscomp.TypeCheckTest::testBug909000
  - com.google.javascript.jscomp.TypeCheckTest::testTypeCheckNoDowncastToNumber
  - com.google.javascript.jscomp.TypeCheckTest::testNumberAutoboxing
  - com.google.javascript.jscomp.TypeCheckTest::testNoTypeCheck13
  - com.google.javascript.jscomp.TypeCheckTest::testNoTypeCheck10
  - com.google.javascript.jscomp.TypeCheckTest::testQualifiedNameReduction7
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceInheritanceCheck10
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration9
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration8
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration7
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration6
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration5
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration4
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration3
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration2
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration1
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias10
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedObject5
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedObject4
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedObject3
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedObject2
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedObject1
  - com.google.javascript.jscomp.TypeCheckTest::testLends11
  - com.google.javascript.jscomp.TypeCheckTest::testLends10
  - com.google.javascript.jscomp.TypeCheckTest::testDefinePropertyOnNullableObject2
  - com.google.javascript.jscomp.TypeCheckTest::testDefinePropertyOnNullableObject1
  - com.google.javascript.jscomp.TypeCheckTest::testDirectPrototypeAssignment1
  - com.google.javascript.jscomp.TypeCheckTest::testStringAutoboxing
  - com.google.javascript.jscomp.TypeCheckTest::testBooleanAutoboxing
  - com.google.javascript.jscomp.TypeCheckTest::testBooleanUnboxing
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration10
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyUsedBeforeDefinition2
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyUsedBeforeDefinition1
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceAssignment9
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceAssignment6
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceAssignment2
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias9
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias8
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias7
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias4
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias3
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias2
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias1
  - com.google.javascript.jscomp.TypeCheckTest::testOptionalUnknownNamedType
  - com.google.javascript.jscomp.TypeCheckTest::testInferredReturn8
  - com.google.javascript.jscomp.TypeCheckTest::testInferredReturn7
  - com.google.javascript.jscomp.TypeCheckTest::testInferredReturn6
  - com.google.javascript.jscomp.TypeCheckTest::testInferredReturn5
  - com.google.javascript.jscomp.TypeCheckTest::testInferredReturn4
  - com.google.javascript.jscomp.TypeCheckTest::testVar6
  - com.google.javascript.jscomp.TypeCheckTest::testVar5
  - com.google.javascript.jscomp.TypeCheckTest::testAnd3
  - com.google.javascript.jscomp.TypeCheckTest::testAnd2
  - com.google.javascript.jscomp.TypeCheckTest::testAdd9
  - com.google.javascript.jscomp.TypeCheckTest::testAdd8
  - com.google.javascript.jscomp.TypeCheckTest::testAdd7
  - com.google.javascript.jscomp.TypeCheckTest::testVar15
  - com.google.javascript.jscomp.TypeCheckTest::testVar14
  - com.google.javascript.jscomp.TypeCheckTest::testVar12
  - com.google.javascript.jscomp.TypeCheckTest::testVar11
  - com.google.javascript.jscomp.TypeCheckTest::testVar10
  - com.google.javascript.jscomp.TypeCheckTest::testThis8
  - com.google.javascript.jscomp.TypeCheckTest::testThis7
  - com.google.javascript.jscomp.TypeCheckTest::testThis6
  - com.google.javascript.jscomp.TypeCheckTest::testThis5
  - com.google.javascript.jscomp.TypeCheckTest::testThis4
  - com.google.javascript.jscomp.TypeCheckTest::testThis2
  - com.google.javascript.jscomp.TypeCheckTest::testThis1
  - com.google.javascript.jscomp.TypeCheckTest::testEnum8
  - com.google.javascript.jscomp.TypeCheckTest::testEnum6
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments4
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments3
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments2
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments1
  - com.google.javascript.jscomp.TypeCheckTest::testCast3
  - com.google.javascript.jscomp.TypeCheckTest::testBang1
  - com.google.javascript.jscomp.TypeCheckTest::testAdd18
  - com.google.javascript.jscomp.TypeCheckTest::testAdd17
  - com.google.javascript.jscomp.TypeCheckTest::testAdd16
  - com.google.javascript.jscomp.TypeCheckTest::testAdd15
  - com.google.javascript.jscomp.TypeCheckTest::testAdd14
  - com.google.javascript.jscomp.TypeCheckTest::testAdd13
  - com.google.javascript.jscomp.TypeCheckTest::testAdd12
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorType8
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorType4
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorType1
  - com.google.javascript.jscomp.TypeCheckTest::testOr5
  - com.google.javascript.jscomp.TypeCheckTest::testOr4
  - com.google.javascript.jscomp.TypeCheckTest::testOr2
  - com.google.javascript.jscomp.TypeCheckTest::testObjectPropertyTypeInferredInLocalScope3
  - com.google.javascript.jscomp.TypeCheckTest::testObjectPropertyTypeInferredInLocalScope2
  - com.google.javascript.jscomp.TypeCheckTest::testObjectPropertyTypeInferredInLocalScope1
  - com.google.javascript.jscomp.TypeCheckTest::testScoping12
  - com.google.javascript.jscomp.TypeCheckTest::testScoping11
  - com.google.javascript.jscomp.TypeCheckTest::testObjLitDef3b
  - com.google.javascript.jscomp.TypeCheckTest::testObjLitDef3a
  - com.google.javascript.jscomp.TypeCheckTest::testBackwardsEnumUse4
  - com.google.javascript.jscomp.TypeCheckTest::testBackwardsEnumUse2
  - com.google.javascript.jscomp.TypeCheckTest::testBackwardsTypedefUse6
  - com.google.javascript.jscomp.TypeCheckTest::testBackwardsTypedefUse4
  - com.google.javascript.jscomp.TypeCheckTest::testForwardPropertyReference
  - com.google.javascript.jscomp.TypeCheckTest::testNestedFunctionInference1
  - com.google.javascript.jscomp.TypeCheckTest::testDeleteOperator1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testNullAnd
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInterfaceAssignment11
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInterfaceAssignment10
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis10
  - com.google.javascript.jscomp.LooseTypeCheckTest::testMethodInference5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testMethodInference4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testMethodInference3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testMethodInference2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testMethodInference1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testIssue86
  - com.google.javascript.jscomp.LooseTypeCheckTest::testNullOr
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference9
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testNumberUnboxing
  - com.google.javascript.jscomp.LooseTypeCheckTest::testGoodExtends8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testGoodExtends7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testGoodExtends6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum40
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum39
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum36
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum31
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum29
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum24
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum23
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum19
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum13
  - com.google.javascript.jscomp.LooseTypeCheckTest::testHigherOrderFunctions2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments13
  - com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateLocalVarDecl
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStringUnboxing
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyTypeOfUnionType
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeOfReduction7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyInference7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyInference4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyInference3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyInference2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyInference1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedArray7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedArray6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedArray4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedArray2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedArray1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeCheck15
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeCheck13
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeCheck11
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInnerFunction5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInnerFunction4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInnerFunction3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInnerFunction2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInnerFunction1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBooleanPreservation4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBooleanPreservation2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBooleanPreservation1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference20
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference19
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference18
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference17
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference16
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference15
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference14
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference13
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference12
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference11
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference10
  - com.google.javascript.jscomp.LooseTypeCheckTest::testResolutionViaRegistry4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testResolutionViaRegistry3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testResolutionViaRegistry2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testResolutionViaRegistry1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testControlFlowRestrictsType2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testScopedConstructors
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBug909000
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeCheckNoDowncastToNumber
  - com.google.javascript.jscomp.LooseTypeCheckTest::testNumberAutoboxing
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration9
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias10
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedObject4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedObject3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedObject2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedObject1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testDefinePropertyOnNullableObject2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testDefinePropertyOnNullableObject1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testDirectPrototypeAssignment1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStringAutoboxing
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBooleanAutoboxing
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBooleanUnboxing
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration10
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeCheck16b
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeCheck16a
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyUsedBeforeDefinition2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyUsedBeforeDefinition1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInterfaceAssignment9
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInterfaceAssignment6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInterfaceAssignment2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias9
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testOptionalUnknownNamedType
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAnd3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAnd2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd9
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar15
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar14
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar12
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar11
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar10
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testCast3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBang1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd18
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd17
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd16
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd15
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd14
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd13
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd12
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorType4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorType1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testOr5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testOr4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testOr2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testObjectPropertyTypeInferredInLocalScope3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testObjectPropertyTypeInferredInLocalScope2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testObjectPropertyTypeInferredInLocalScope1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testScoping11
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBackwardsEnumUse4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBackwardsEnumUse2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testForwardPropertyReference
  - com.google.javascript.jscomp.LooseTypeCheckTest::testNestedFunctionInference1
  - com.google.javascript.jscomp.IntegrationTest::testTypeCheckAndInference
  - com.google.javascript.jscomp.DisambiguatePropertiesTest::testInvalidatingInterface
  - com.google.javascript.jscomp.DisambiguatePropertiesTest::testMismatchInvalidation
  - com.google.javascript.jscomp.AmbiguatePropertiesTest::testTypeMismatch
Failing tests: 373
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!type.canAssignTo(rightType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!argType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!found.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!anyObjectType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!overridingType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rightType.canAssignTo(leftType)){
mismatch(t,n,msg,rightType,leftType);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!type.canAssignTo(leftType)){
mismatch(t,n,msg,rightType,leftType);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!restrictedLeftType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!propertyType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!switchType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.autoboxesTo().canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n=propNode==null?n:propNode;
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
typeA=found.restrictByNotNullOrUndefined();
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rightType=required.restrictByNotNullOrUndefined();
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!found.canAssignTo(rightType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!childType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.POS :

if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TWEAK_FUNCTIONS_MAP.get(msg)==null){
return ;
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getJSDocInfo()==null){
return ;
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getJSDocInfo().isConsistentIdGenerator()&&doc.isIdGenerator()){
compiler.report(t.makeError(n,CONFLICTING_GENERATOR_TYPE));
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getEnclosingDeclNameNode(t)==null){
reportBadBaseClassUse(t,n,"Could not find enclosing method.");
return ;
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isIf())return ;
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n.getNext();
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isFunction()&&msg.length()==0){
return ;
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(t.getScope().getVar(msg)==null){
return ;
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!n.getFirstChild().isGetProp()){
return ;
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!n.getFirstChild().getFirstChild().getNext().isString()){
return ;
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
visit(t,n,n,n.getFirstChild().getFirstChild().getNext().getString());
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()&&n==n.getFirstChild()&&NodeUtil.isAssignmentOp(parent)){
return false;
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rightType.canAssignTo(leftType)){
new GraphReachability<Node,ControlFlowGraph.Branch>(t.getControlFlowGraph()).recompute(n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rightType.canAssignTo(leftType)){
Preconditions.checkNotNull(provided.explicitModule);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rightType.canAssignTo(leftType)){
compiler.reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(NodeUtil.isGet(n));
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isAssignmentTarget(n)){
return n;
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(super.describeFunctionBind(n)!=null){
return result;
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rvalueType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.detachChildren();
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!currentClass.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n!=null){
newReportFunctionExitNode().addChildToBack(returnRhs);
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.addChildToFront(newReportFunctionExitNode());
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.getFirstChild().getNext().getNext()==null){
extendArg=n.getFirstChild().getNext();
objectToExtend=n.getFirstChild().getFirstChild();
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getFirstChild().getQualifiedName()==null||qName.isEmpty()){
return ;
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(n);
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.isFor());
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isForIn(n)){
return n;
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isName());
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!ObjectPropertyStringPreprocess.EXTERN_OBJECT_PROPERTY_STRING.equals(n.getFirstChild().getQualifiedName())){
return ;
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getFirstChild().getNext()!=null){
if(right.getNext()!=null||!NodeUtil.isImmutableValue(right)){
return n;
}
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isExprAssign(n)){
return false;
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 0
TESTING : closure_35
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - com.google.javascript.jscomp.TypeValidatorTest::testFunctionMismatch2
  - com.google.javascript.jscomp.TypeValidatorTest::testFunctionMismatch
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceInheritanceCheck9
  - com.google.javascript.jscomp.TypeCheckTest::testNullAnd
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceAssignment11
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceAssignment10
  - com.google.javascript.jscomp.TypeCheckTest::testClosure7
  - com.google.javascript.jscomp.TypeCheckTest::testThis10
  - com.google.javascript.jscomp.TypeCheckTest::testMethodInference5
  - com.google.javascript.jscomp.TypeCheckTest::testMethodInference4
  - com.google.javascript.jscomp.TypeCheckTest::testMethodInference3
  - com.google.javascript.jscomp.TypeCheckTest::testMethodInference2
  - com.google.javascript.jscomp.TypeCheckTest::testMethodInference1
  - com.google.javascript.jscomp.TypeCheckTest::testIssue86
  - com.google.javascript.jscomp.TypeCheckTest::testNullOr
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference9
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference8
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference7
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference6
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference5
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference4
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference3
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference2
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference1
  - com.google.javascript.jscomp.TypeCheckTest::testNumberUnboxing
  - com.google.javascript.jscomp.TypeCheckTest::testGoodExtends8
  - com.google.javascript.jscomp.TypeCheckTest::testGoodExtends7
  - com.google.javascript.jscomp.TypeCheckTest::testGoodExtends6
  - com.google.javascript.jscomp.TypeCheckTest::testEnum41
  - com.google.javascript.jscomp.TypeCheckTest::testEnum40
  - com.google.javascript.jscomp.TypeCheckTest::testEnum39
  - com.google.javascript.jscomp.TypeCheckTest::testEnum36
  - com.google.javascript.jscomp.TypeCheckTest::testEnum31
  - com.google.javascript.jscomp.TypeCheckTest::testEnum29
  - com.google.javascript.jscomp.TypeCheckTest::testEnum24
  - com.google.javascript.jscomp.TypeCheckTest::testEnum23
  - com.google.javascript.jscomp.TypeCheckTest::testEnum19
  - com.google.javascript.jscomp.TypeCheckTest::testEnum13
  - com.google.javascript.jscomp.TypeCheckTest::testHigherOrderFunctions2
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments13
  - com.google.javascript.jscomp.TypeCheckTest::testDuplicateLocalVarDecl
  - com.google.javascript.jscomp.TypeCheckTest::testStringUnboxing
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyTypeOfUnionType
  - com.google.javascript.jscomp.TypeCheckTest::testTypeOfReduction7
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyInference7
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyInference4
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyInference3
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyInference2
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyInference1
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedArray7
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedArray6
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedArray4
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedArray2
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedArray1
  - com.google.javascript.jscomp.TypeCheckTest::testTypeCheck16
  - com.google.javascript.jscomp.TypeCheckTest::testTypeCheck15
  - com.google.javascript.jscomp.TypeCheckTest::testTypeCheck13
  - com.google.javascript.jscomp.TypeCheckTest::testTypeCheck11
  - com.google.javascript.jscomp.TypeCheckTest::testOverriddenReturn1
  - com.google.javascript.jscomp.TypeCheckTest::testQualifiedNameReduction5c
  - com.google.javascript.jscomp.TypeCheckTest::testQualifiedNameReduction5b
  - com.google.javascript.jscomp.TypeCheckTest::testQualifiedNameReduction10
  - com.google.javascript.jscomp.TypeCheckTest::testReturn8
  - com.google.javascript.jscomp.TypeCheckTest::testReturn7
  - com.google.javascript.jscomp.TypeCheckTest::testReturn6
  - com.google.javascript.jscomp.TypeCheckTest::testReturn4
  - com.google.javascript.jscomp.TypeCheckTest::testReturn3
  - com.google.javascript.jscomp.TypeCheckTest::testReturn2
  - com.google.javascript.jscomp.TypeCheckTest::testReturn1
  - com.google.javascript.jscomp.TypeCheckTest::testInnerFunction10
  - com.google.javascript.jscomp.TypeCheckTest::testScopedConstructors1
  - com.google.javascript.jscomp.TypeCheckTest::testNoTypeCheck9
  - com.google.javascript.jscomp.TypeCheckTest::testInnerFunction5
  - com.google.javascript.jscomp.TypeCheckTest::testInnerFunction4
  - com.google.javascript.jscomp.TypeCheckTest::testInnerFunction3
  - com.google.javascript.jscomp.TypeCheckTest::testInnerFunction2
  - com.google.javascript.jscomp.TypeCheckTest::testInnerFunction1
  - com.google.javascript.jscomp.TypeCheckTest::testBooleanPreservation4
  - com.google.javascript.jscomp.TypeCheckTest::testBooleanPreservation2
  - com.google.javascript.jscomp.TypeCheckTest::testBooleanPreservation1
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference20
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference19
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference18
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference17
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference16
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference15
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference14
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference13
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference12
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference11
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionInference10
  - com.google.javascript.jscomp.TypeCheckTest::testResolutionViaRegistry4
  - com.google.javascript.jscomp.TypeCheckTest::testResolutionViaRegistry3
  - com.google.javascript.jscomp.TypeCheckTest::testResolutionViaRegistry2
  - com.google.javascript.jscomp.TypeCheckTest::testResolutionViaRegistry1
  - com.google.javascript.jscomp.TypeCheckTest::testControlFlowRestrictsType2
  - com.google.javascript.jscomp.TypeCheckTest::testBug909000
  - com.google.javascript.jscomp.TypeCheckTest::testTypeCheckNoDowncastToNumber
  - com.google.javascript.jscomp.TypeCheckTest::testNumberAutoboxing
  - com.google.javascript.jscomp.TypeCheckTest::testNoTypeCheck13
  - com.google.javascript.jscomp.TypeCheckTest::testNoTypeCheck10
  - com.google.javascript.jscomp.TypeCheckTest::testQualifiedNameReduction7
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceInheritanceCheck10
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration9
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration8
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration7
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration6
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration5
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration4
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration3
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration2
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration1
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias10
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedObject5
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedObject4
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedObject3
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedObject2
  - com.google.javascript.jscomp.TypeCheckTest::testParameterizedObject1
  - com.google.javascript.jscomp.TypeCheckTest::testLends11
  - com.google.javascript.jscomp.TypeCheckTest::testLends10
  - com.google.javascript.jscomp.TypeCheckTest::testDefinePropertyOnNullableObject2
  - com.google.javascript.jscomp.TypeCheckTest::testDefinePropertyOnNullableObject1
  - com.google.javascript.jscomp.TypeCheckTest::testDirectPrototypeAssignment1
  - com.google.javascript.jscomp.TypeCheckTest::testStringAutoboxing
  - com.google.javascript.jscomp.TypeCheckTest::testBooleanAutoboxing
  - com.google.javascript.jscomp.TypeCheckTest::testBooleanUnboxing
  - com.google.javascript.jscomp.TypeCheckTest::testStubFunctionDeclaration10
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyUsedBeforeDefinition2
  - com.google.javascript.jscomp.TypeCheckTest::testPropertyUsedBeforeDefinition1
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceAssignment9
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceAssignment6
  - com.google.javascript.jscomp.TypeCheckTest::testInterfaceAssignment2
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias9
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias8
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias7
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias4
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias3
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias2
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorAlias1
  - com.google.javascript.jscomp.TypeCheckTest::testOptionalUnknownNamedType
  - com.google.javascript.jscomp.TypeCheckTest::testInferredReturn8
  - com.google.javascript.jscomp.TypeCheckTest::testInferredReturn7
  - com.google.javascript.jscomp.TypeCheckTest::testInferredReturn6
  - com.google.javascript.jscomp.TypeCheckTest::testInferredReturn5
  - com.google.javascript.jscomp.TypeCheckTest::testInferredReturn4
  - com.google.javascript.jscomp.TypeCheckTest::testVar6
  - com.google.javascript.jscomp.TypeCheckTest::testVar5
  - com.google.javascript.jscomp.TypeCheckTest::testAnd3
  - com.google.javascript.jscomp.TypeCheckTest::testAnd2
  - com.google.javascript.jscomp.TypeCheckTest::testAdd9
  - com.google.javascript.jscomp.TypeCheckTest::testAdd8
  - com.google.javascript.jscomp.TypeCheckTest::testAdd7
  - com.google.javascript.jscomp.TypeCheckTest::testVar15
  - com.google.javascript.jscomp.TypeCheckTest::testVar14
  - com.google.javascript.jscomp.TypeCheckTest::testVar12
  - com.google.javascript.jscomp.TypeCheckTest::testVar11
  - com.google.javascript.jscomp.TypeCheckTest::testVar10
  - com.google.javascript.jscomp.TypeCheckTest::testThis8
  - com.google.javascript.jscomp.TypeCheckTest::testThis7
  - com.google.javascript.jscomp.TypeCheckTest::testThis6
  - com.google.javascript.jscomp.TypeCheckTest::testThis5
  - com.google.javascript.jscomp.TypeCheckTest::testThis4
  - com.google.javascript.jscomp.TypeCheckTest::testThis2
  - com.google.javascript.jscomp.TypeCheckTest::testThis1
  - com.google.javascript.jscomp.TypeCheckTest::testEnum8
  - com.google.javascript.jscomp.TypeCheckTest::testEnum6
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments4
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments3
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments2
  - com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments1
  - com.google.javascript.jscomp.TypeCheckTest::testCast3
  - com.google.javascript.jscomp.TypeCheckTest::testBang1
  - com.google.javascript.jscomp.TypeCheckTest::testAdd18
  - com.google.javascript.jscomp.TypeCheckTest::testAdd17
  - com.google.javascript.jscomp.TypeCheckTest::testAdd16
  - com.google.javascript.jscomp.TypeCheckTest::testAdd15
  - com.google.javascript.jscomp.TypeCheckTest::testAdd14
  - com.google.javascript.jscomp.TypeCheckTest::testAdd13
  - com.google.javascript.jscomp.TypeCheckTest::testAdd12
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorType8
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorType4
  - com.google.javascript.jscomp.TypeCheckTest::testConstructorType1
  - com.google.javascript.jscomp.TypeCheckTest::testOr5
  - com.google.javascript.jscomp.TypeCheckTest::testOr4
  - com.google.javascript.jscomp.TypeCheckTest::testOr2
  - com.google.javascript.jscomp.TypeCheckTest::testObjectPropertyTypeInferredInLocalScope3
  - com.google.javascript.jscomp.TypeCheckTest::testObjectPropertyTypeInferredInLocalScope2
  - com.google.javascript.jscomp.TypeCheckTest::testObjectPropertyTypeInferredInLocalScope1
  - com.google.javascript.jscomp.TypeCheckTest::testScoping12
  - com.google.javascript.jscomp.TypeCheckTest::testScoping11
  - com.google.javascript.jscomp.TypeCheckTest::testObjLitDef3b
  - com.google.javascript.jscomp.TypeCheckTest::testObjLitDef3a
  - com.google.javascript.jscomp.TypeCheckTest::testBackwardsEnumUse4
  - com.google.javascript.jscomp.TypeCheckTest::testBackwardsEnumUse2
  - com.google.javascript.jscomp.TypeCheckTest::testBackwardsTypedefUse6
  - com.google.javascript.jscomp.TypeCheckTest::testBackwardsTypedefUse4
  - com.google.javascript.jscomp.TypeCheckTest::testForwardPropertyReference
  - com.google.javascript.jscomp.TypeCheckTest::testNestedFunctionInference1
  - com.google.javascript.jscomp.TypeCheckTest::testDeleteOperator1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testNullAnd
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInterfaceAssignment11
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInterfaceAssignment10
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis10
  - com.google.javascript.jscomp.LooseTypeCheckTest::testMethodInference5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testMethodInference4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testMethodInference3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testMethodInference2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testMethodInference1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testIssue86
  - com.google.javascript.jscomp.LooseTypeCheckTest::testNullOr
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference9
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testNumberUnboxing
  - com.google.javascript.jscomp.LooseTypeCheckTest::testGoodExtends8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testGoodExtends7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testGoodExtends6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum40
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum39
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum36
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum31
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum29
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum24
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum23
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum19
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum13
  - com.google.javascript.jscomp.LooseTypeCheckTest::testHigherOrderFunctions2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments13
  - com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateLocalVarDecl
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStringUnboxing
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyTypeOfUnionType
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeOfReduction7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyInference7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyInference4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyInference3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyInference2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyInference1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedArray7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedArray6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedArray4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedArray2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedArray1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeCheck15
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeCheck13
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeCheck11
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testReturn1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInnerFunction5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInnerFunction4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInnerFunction3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInnerFunction2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInnerFunction1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBooleanPreservation4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBooleanPreservation2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBooleanPreservation1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference20
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference19
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference18
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference17
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference16
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference15
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference14
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference13
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference12
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference11
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference10
  - com.google.javascript.jscomp.LooseTypeCheckTest::testResolutionViaRegistry4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testResolutionViaRegistry3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testResolutionViaRegistry2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testResolutionViaRegistry1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testControlFlowRestrictsType2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testScopedConstructors
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBug909000
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeCheckNoDowncastToNumber
  - com.google.javascript.jscomp.LooseTypeCheckTest::testNumberAutoboxing
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration9
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias10
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedObject4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedObject3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedObject2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testParameterizedObject1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testDefinePropertyOnNullableObject2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testDefinePropertyOnNullableObject1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testDirectPrototypeAssignment1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStringAutoboxing
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBooleanAutoboxing
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBooleanUnboxing
  - com.google.javascript.jscomp.LooseTypeCheckTest::testStubFunctionDeclaration10
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeCheck16b
  - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeCheck16a
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyUsedBeforeDefinition2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testPropertyUsedBeforeDefinition1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInterfaceAssignment9
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInterfaceAssignment6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testInterfaceAssignment2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias9
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorAlias1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testOptionalUnknownNamedType
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAnd3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAnd2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd9
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar15
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar14
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar12
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar11
  - com.google.javascript.jscomp.LooseTypeCheckTest::testVar10
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis7
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testThis1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum8
  - com.google.javascript.jscomp.LooseTypeCheckTest::testEnum6
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testCast3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBang1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd18
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd17
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd16
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd15
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd14
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd13
  - com.google.javascript.jscomp.LooseTypeCheckTest::testAdd12
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorType4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testConstructorType1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testOr5
  - com.google.javascript.jscomp.LooseTypeCheckTest::testOr4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testOr2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testObjectPropertyTypeInferredInLocalScope3
  - com.google.javascript.jscomp.LooseTypeCheckTest::testObjectPropertyTypeInferredInLocalScope2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testObjectPropertyTypeInferredInLocalScope1
  - com.google.javascript.jscomp.LooseTypeCheckTest::testScoping11
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBackwardsEnumUse4
  - com.google.javascript.jscomp.LooseTypeCheckTest::testBackwardsEnumUse2
  - com.google.javascript.jscomp.LooseTypeCheckTest::testForwardPropertyReference
  - com.google.javascript.jscomp.LooseTypeCheckTest::testNestedFunctionInference1
  - com.google.javascript.jscomp.IntegrationTest::testTypeCheckAndInference
  - com.google.javascript.jscomp.DisambiguatePropertiesTest::testInvalidatingInterface
  - com.google.javascript.jscomp.DisambiguatePropertiesTest::testMismatchInvalidation
  - com.google.javascript.jscomp.AmbiguatePropertiesTest::testTypeMismatch
Failing tests: 373
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Iterables.addAll(Sets.newTreeSet(ALPHA),n.getJSType().toMaybeFunctionType().getAllImplementedInterfaces());
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(n);
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isEnumType()){
return ;
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!recvType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rightType.canAssignTo(leftType)){
n.replaceChild(n.getFirstChild(),IR.block().srcref(n));
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rightType.canAssignTo(leftType)){
c=IR.block().srcref(n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rightType.canAssignTo(leftType)){
reportChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rightType.canAssignTo(leftType)){
n.replaceChild(n.getFirstChild(),IR.block().srcref(n));
c=IR.block().srcref(n);
reportChange();

if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isSwitch());
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!shouldReport){
return ;
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isNew());
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.isAssign());
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!shouldReport){
return n;
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mayHaveSideEffects(n)){
return n;
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!newType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rightType.canAssignTo(leftType)){
if(msg==null){
pushContainingFunction(graph.UNKNOWN);
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
n.setJSType(leftType);
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.setJSType(leftType);
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
n.setJSType(leftType);
registerMismatch(rightType,leftType,null);
}else {
n.setJSType(leftType);
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!(n.isScript()||n.getParent()!=null&&grandparent.isFunction()&&parent.isBlock())){
return ;
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.hasOneChild());
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isTry());
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.removeChild(n.getParent(),n);
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.redeclareVarsInsideBranch(n);
NodeUtil.removeChild(n.getParent(),n);
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
compiler.reportCodeChange();
NodeUtil.removeChild(n.getParent(),n);
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
NodeUtil.removeChild(n.getParent(),n);
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!n.getFirstChild().isCall()){
return ;
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!n.getFirstChild().getFirstChild().isGetProp()){
return ;
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(msg==null||!"goog.now".equals(googNowQName)||n.getFirstChild().getNext()!=null){
return ;
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.removeChild(n);
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.removeChild(n);
compiler.reportCodeChange();
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
validateNodeType(Token.SETTER_DEF,n);
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(n,1);
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(n);
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateFunctionExpression(n.getFirstChild());
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!n.getFirstChild().getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",n);
}
if(!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
mismatch(t,n,msg,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.TypeValidator,390
========
return leftType.isEnumType()||(type.autoboxesTo()!=null);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return (leftType.isConstructor()||leftType.isEnumType())&&(leftType.autoboxesTo()!=null);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
com.google.javascript.jscomp.TypeCheck,764
========
case Token.THROW :
typeable=false;
break;

case Token.WHILE :
typeable=false;
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.DO :

case Token.WHILE :
typeable=false;
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.WHILE :
typeable=false;
break;

case Token.WHILE :
typeable=false;
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.AND :

case Token.WHILE :
typeable=false;
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.WHILE :
visitGetElem(t,n);
typeable=false;
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.VAR :

case Token.WHILE :
typeable=false;
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.WHILE :
typeable=true;
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.WHILE :
visitNew(t,n);
typeable=false;
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.CALL :

case Token.WHILE :
typeable=false;
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.WHILE :
visitNew(t,n);
typeable=true;
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.WHILE :
visitReturn(t,n);
typeable=false;
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.DEC :

case Token.WHILE :
typeable=false;
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.WHILE :
visitAssign(t,n);
typeable=false;
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.ASSIGN_LSH :

case Token.WHILE :
typeable=false;
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.PARAM_LIST :

case Token.WHILE :
typeable=false;
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
childType=getJSType(n);
case Token.WHILE :
typeable=false;
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
validator.expectObject(t,n,childType,"with requires an object");
case Token.WHILE :
typeable=false;
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validator.expectSwitchMatchesCase(t,n,switchType,caseType);
case Token.WHILE :
typeable=false;
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.WITH :

case Token.WHILE :
typeable=false;
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.DO :

case Token.IF :

case Token.WHILE :
typeable=false;
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.AND :

case Token.IF :

case Token.WHILE :
typeable=false;
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.TypeCheck,765
========
case Token.DO :

case Token.WHILE :
typeable=false;
break;

case Token.AND :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.AND :

case Token.WHILE :
typeable=false;
break;

case Token.AND :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.WHILE :
visitGetElem(t,n);
typeable=false;
break;


case Token.AND :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.WHILE :
typeable=true;
break;

case Token.AND :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.WHILE :
visitNew(t,n);
typeable=false;
break;


case Token.AND :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.WHILE :
visitNew(t,n);
typeable=true;
break;


case Token.AND :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.WHILE :
visitReturn(t,n);
typeable=false;
break;


case Token.AND :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.WHILE :
visitAssign(t,n);
typeable=false;
break;


case Token.AND :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
com.google.javascript.jscomp.TypeCheck,913
========
if(!topScope.isDeclared(OVERRIDING_PROTOTYPE_WITH_NON_OBJECT,false)){
return ;
}
if(var.isTypeInferred()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(var.isTypeInferred()){
assign.removeChild(assign);
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(var.isTypeInferred()){
assign.getParent().replaceChild(n,assign);
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var.isTypeInferred()){
var.reportCodeChange();
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var.isTypeInferred()){
assign.removeChild(assign);
assign.getParent().replaceChild(n,assign);
var.reportCodeChange();

return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var==null){
if(var.isTypeInferred()){
return ;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(context.scope!=null){
if(var.isTypeInferred()){
return ;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var!=null&&var.isTypeInferred()){
if(var.isTypeInferred()){
return ;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(var!=null&&var.getType() instanceof EnumType){
if(var.isTypeInferred()){
return ;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!NodeUtil.isImmutableValue(var)){
return false;
}
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var!=null&&!var.isTypeInferred()){
if(var.isTypeInferred()){
return ;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(assign!=null&&var!=null&&isRemovableVar(var)&&!NodeUtil.mayHaveSideEffects(assign)){
if(var.isTypeInferred()){
return ;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var!=null&&isRemovableVar(var)){
if(var.isTypeInferred()){
return ;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var!=null){
Preconditions.checkState(NodeUtil.isAssignmentOp(assign)||isIncDec(op));
if(var.isTypeInferred()){
return ;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var!=null&&var.getType()!=null&&var.getType().isFunctionType()){
if(var.isTypeInferred()){
return ;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(var!=null){
if(var.isTypeInferred()){
compiler.report(t.makeError(assign,BAD_PRIVATE_GLOBAL_ACCESS,name.getString(),var.getSourceFile().getName()));
return ;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(root.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objectNode.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var==null){
return ;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lhs.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isExprAssign(rvalue)){
return false;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(object.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
if(rvalueType.isInterface()&&lvalue.getLastChild().getString().equals("prototype")){
visitInterfaceGetprop(t,assign,lvalue,OVERRIDING_PROTOTYPE_WITH_NON_OBJECT,lvalue,rvalue);
}
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
if(lvalue.getString().equals("arguments")){
v=t.getScope().getArgumentsVar();
}else {
v=t.getScope().getVar(lvalue.getString());
}
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.getFirstChild().isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lvalue.isName()){
if(isConstant(t.getScope().getVar(lvalue.getString()))){
reportError(t,assign,lvalue.getString());
}
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.getString().length()==0){
return ;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lvalue.getString().length()==0){
return ;
}
if(n.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(lvalue.isName());
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nameNode.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var==null||var.isLocal()||var.isExtern()){
return ;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.getLastChild().isFunction()&&!NodeUtil.isEmptyBlock(assign.getLastChild().getLastChild())){
compiler.report(t.makeError(assign,INTERFACE_FUNCTION_NOT_EMPTY,compiler.getCodingConvention().getAbstractMethodName()));
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rvalue!=null&&rhs.isName()&&rhs.getString().equals(var.name)&&rvalue.isAssign()){
n.removeChild(rhs);
n.getParent().replaceChild(n,rhs);
compiler.reportCodeChange();
return ;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null&&!var.isEmpty()){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.getFirstChild().getFirstChild().isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!NodeUtil.isExprAssign(rvalue.getFirstChild())){
return null;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var.isExtern()){
return ;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE<t.getScope().getVarCount()){
return ;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.containsFunction(t.getScopeRoot().getLastChild())){
return ;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE<t.getScope().getVarCount()){
return ;
}
if(NodeUtil.containsFunction(t.getScopeRoot().getLastChild())){
return ;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dest.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(callName.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rhs.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
if(OVERRIDING_PROTOTYPE_WITH_NON_OBJECT.equals(lvalue.getString())){
return ;
}
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
if(OVERRIDING_PROTOTYPE_WITH_NON_OBJECT.equals(lvalue.getString())){
return ;
}
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var==null?null:var.getJSDocInfo()!=null&&docInfo.isDeprecated()&&shouldEmitDeprecationWarning(t,assign,lvalue)){
if(docInfo.getDeprecationReason()!=null){
compiler.report(t.makeError(n,DEPRECATED_NAME_REASON,n.getString(),docInfo.getDeprecationReason()));
}else {
compiler.report(t.makeError(n,DEPRECATED_NAME,n.getString()));
}
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!validator.expectNotNullOrUndefined(t,lvalue,rvalueType,"No properties on this expression",getNativeType(OBJECT_TYPE))){
ensureTyped(t,n);
return ;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkPropertyAccess(rvalueType,var.getString(),t,lvalue);
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ensureTyped(t,lvalue);
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ensureTyped(t,lvalue);
if(parent.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(op.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null&&var.getType() instanceof EnumType){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null&&var.getType() instanceof EnumType){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getProp.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
OVERRIDING_PROTOTYPE_WITH_NON_OBJECT=var.getString();
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rvalue=assign.getLastChild();
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
rvalue=assign;
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.CALL :

if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rvalue=assign.getLastChild();
rvalue=assign;
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(arg.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(previousBlock.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.getParent().isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(var!=null&&!define.isGlobal()){
return ;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(left.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fnName.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rvalue.getFirstChild().isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(target.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rhsValue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rvalueType==null){
varType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(key.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
validator.expectObject(t,lvalue,rvalueType,OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(grandparent.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(child.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(expr.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
ret=createConcreteInstance(rvalueType.toObjectType());
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(name.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(p.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(curNode.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null&&var.isLocal()){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null&&var.isLocal()){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(functionNode.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!lvalue.isGetProp()){
return false;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rvalue.isName()||n.isString());
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var==null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lvalue.isName()){
if(var.restrictByNotNullOrUndefined().toMaybeFunctionType()==null){
break;
}
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
retType=createUnionWithSubTypes(createType(var.restrictByNotNullOrUndefined().toMaybeFunctionType().getReturnType()));
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
if(var.restrictByNotNullOrUndefined().toMaybeFunctionType()==null){
break;
}
retType=createUnionWithSubTypes(createType(var.restrictByNotNullOrUndefined().toMaybeFunctionType().getReturnType()));

JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propNameNode.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(typeList.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(member.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(forVar.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(right.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(callNode.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.getParent().getFirstChild().isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkNotNull(lvalue);
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(lvalue.isName());
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lvalue.getJSType()==null){
return ConcreteType.ALL;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(lvalue);
if(lvalue.getFirstChild().isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(lvalue.isName());
if(lvalue.getFirstChild().isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkNotNull(lvalue);
Preconditions.checkArgument(lvalue.isName());
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkNotNull(lvalue);
Preconditions.checkArgument(lvalue.isName());
if(lvalue.getFirstChild().isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(argumentNode.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!getJSType(rvalue).isEnumType()){
return ;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
validator.expectCanAssignTo(t,rvalue,rvalueType,info.getEnumParameterType().evaluate(t.getScope(),typeRegistry),"incompatible enum element types");
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(useSite.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(current.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(t.getScopeRoot().isFunction());
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new ControlFlowAnalysis(compiler,false,true).process(null,t.getScopeRoot().getLastChild());
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE<t.getScope().getVarCount()){
return ;
}
Preconditions.checkState(t.getScopeRoot().isFunction());
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE<t.getScope().getVarCount()){
return ;
}
new ControlFlowAnalysis(compiler,false,true).process(null,t.getScopeRoot().getLastChild());
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(t.getScopeRoot().isFunction());
new ControlFlowAnalysis(compiler,false,true).process(null,t.getScopeRoot().getLastChild());
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE<t.getScope().getVarCount()){
return ;
}
Preconditions.checkState(t.getScopeRoot().isFunction());
new ControlFlowAnalysis(compiler,false,true).process(null,t.getScopeRoot().getLastChild());
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null&&var.isVar()){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(currentParent.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null&&var.isVar()){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ObjectType.cast(dereference(rvalue.getFirstChild().getJSType()))!=null){
String var=getPropertyDeprecationInfo(objectType,rvalue.getLastChild().getString());
if(deprecationInfo!=null&&shouldEmitDeprecationWarning(t,rvalue,assign)){
if(!deprecationInfo.isEmpty()){
compiler.report(t.makeError(n,DEPRECATED_PROP_REASON,propertyName,validator.getReadableJSTypeName(n.getFirstChild(),true),deprecationInfo));
}else {
compiler.report(t.makeError(n,DEPRECATED_PROP,propertyName,validator.getReadableJSTypeName(n.getFirstChild(),true)));
}
}
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var.isEmpty()){
Preconditions.checkState(assign.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(parent));
return ;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(lvalue.isName()||n.isGetProp());
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.getQualifiedName()==null){
return false;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.getLastChild().isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(lvalue.isName()&&rvalue.isVar()){
name=lvalue.getString();
}else if(lvalue.isAssign()&&rvalue.isExprResult()){
name=lvalue.getFirstChild().getQualifiedName();
}
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(second.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(callTarget.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(first.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null&&(var.isString()||var.isRegExp())){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(calledFn.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(llhs.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parentNode.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var.size()<=1){
return ;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lhsAssign.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(condition.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=TernaryValue.UNKNOWN){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(t.getScope().getRootNode().getFirstChild().getNext().getChildCount()==2){
var.markAllParametersEscaped();
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rootNameNode.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lvalue=rootNameNode.getFirstChild();
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objLitParent.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
OVERRIDING_PROTOTYPE_WITH_NON_OBJECT="."+lvalue.getString();
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null&&var.isName()){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rewriteDefinition(lvalue,getRewrittenMethodName(lvalue.getLastChild().getString()));
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
if(rvalueType!=null){
boolean maybeDefineTypedReference(lvalue,n.getString(),rvalueType)=maybeDefineTypedReference(lvalue,n.getString(),rvalueType);
if(maybeDefineTypedReference(lvalue,n.getString(),rvalueType)){
tryRemoveLexicalQualifiedNameRef(NodeUtil.getBestLValueName(lvalue),n);
return ;
}
}
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
tryDefineLexicalQualifiedNameRef(NodeUtil.getBestLValueName(lvalue),n);
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
if(rvalueType!=null){
boolean maybeDefineTypedReference(lvalue,n.getString(),rvalueType)=maybeDefineTypedReference(lvalue,n.getString(),rvalueType);
if(maybeDefineTypedReference(lvalue,n.getString(),rvalueType)){
tryRemoveLexicalQualifiedNameRef(NodeUtil.getBestLValueName(lvalue),n);
return ;
}
}
tryDefineLexicalQualifiedNameRef(NodeUtil.getBestLValueName(lvalue),n);

JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
inferPropertyTypesToMatchConstraint(rvalueType,getJSType(rvalue));
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if((var!=null)&&(var.isString()||var.isNumber())){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(!lvalue.isName()){
return assign;
}
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
JSType rvalueType=getNativeType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
if(var==null?null:objType.getIndexType()!=null&&!var==null?null:objType.getIndexType().isUnknownType()){
JSType rvalueType=getNativeType(STRING_TYPE).getGreatestSubtype(var==null?null:objType.getIndexType());
if(!rvalueType.isEmptyType()){
iterKeyType=rvalueType;
}
}
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
allowDupe=var!=null&&var.getSuppressions().contains("duplicate");
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var==null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!lvalue.getFirstChild().isGetProp()){
return ;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!assign.isString()){
return ;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
visit(t,lvalue,rvalue,assign.getString());
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!lvalue.getFirstChild().isGetProp()){
return ;
}
if(n.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!assign.isString()){
return ;
}
if(n.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!lvalue.getFirstChild().isGetProp()){
return ;
}
if(!assign.isString()){
return ;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!lvalue.getFirstChild().isGetProp()){
return ;
}
if(!assign.isString()){
return ;
}
if(n.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
JSType rvalueType=var==null?null:getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!lvalue.getFirstChild().isName()){
if(NodeUtil.isFunctionObjectCall(callNode)){
if(var==null||!cArg.isThis()){
return CanInlineResult.NO;
}
cArg=cArg.getNext();
}else {
Preconditions.checkState(!NodeUtil.isFunctionObjectApply(callNode));
}
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(assign.getNext().isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(assign.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(propName.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
validator.expectCanCast(t,rvalue,info.getType().evaluate(t.getScope(),typeRegistry),rvalueType);
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
type=info.getType().evaluate(t.getScope(),typeRegistry);
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
validator.expectCanCast(t,rvalue,info.getType().evaluate(t.getScope(),typeRegistry),rvalueType);
type=info.getType().evaluate(t.getScope(),typeRegistry);

JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new NodeTraversal(compiler,new GatherCandiates()).traverse(t.getScopeRoot().getLastChild());
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
var.analyze();
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rvalue.isAssign()&&parent.getFirstChild()==rvalue&&n.getNext().isFunction()){
addSignature(lvalue.getString(),n.getNext(),t.getSourceName());
}else {
getSignatureStore().removeSignature(name);
assign.add(name);
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rvalue=lvalue.getNext();
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(var!=null&&!p.canCollapse()){
continue;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rvalue=lvalue.getNext();
if(key.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(decl.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.copyNameAnnotations(assign.getLastChild(),NodeUtil.newName(compiler.getCodingConvention(),OVERRIDING_PROTOTYPE_WITH_NON_OBJECT,assign,OVERRIDING_PROTOTYPE_WITH_NON_OBJECT));
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rvalueType!=null){
NodeUtil.newName(compiler.getCodingConvention(),OVERRIDING_PROTOTYPE_WITH_NON_OBJECT,assign,OVERRIDING_PROTOTYPE_WITH_NON_OBJECT).setJSType(type);
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
assign.replaceChild(assign,NodeUtil.newName(compiler.getCodingConvention(),OVERRIDING_PROTOTYPE_WITH_NON_OBJECT,assign,OVERRIDING_PROTOTYPE_WITH_NON_OBJECT));
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
compiler.reportCodeChange();
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.copyNameAnnotations(assign.getLastChild(),NodeUtil.newName(compiler.getCodingConvention(),OVERRIDING_PROTOTYPE_WITH_NON_OBJECT,assign,OVERRIDING_PROTOTYPE_WITH_NON_OBJECT));
if(parent.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
assign.replaceChild(assign,NodeUtil.newName(compiler.getCodingConvention(),OVERRIDING_PROTOTYPE_WITH_NON_OBJECT,assign,OVERRIDING_PROTOTYPE_WITH_NON_OBJECT));
if(parent.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
if(parent.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.copyNameAnnotations(assign.getLastChild(),NodeUtil.newName(compiler.getCodingConvention(),OVERRIDING_PROTOTYPE_WITH_NON_OBJECT,assign,OVERRIDING_PROTOTYPE_WITH_NON_OBJECT));
assign.replaceChild(assign,NodeUtil.newName(compiler.getCodingConvention(),OVERRIDING_PROTOTYPE_WITH_NON_OBJECT,assign,OVERRIDING_PROTOTYPE_WITH_NON_OBJECT));
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.copyNameAnnotations(assign.getLastChild(),NodeUtil.newName(compiler.getCodingConvention(),OVERRIDING_PROTOTYPE_WITH_NON_OBJECT,assign,OVERRIDING_PROTOTYPE_WITH_NON_OBJECT));
compiler.reportCodeChange();
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
assign.replaceChild(assign,NodeUtil.newName(compiler.getCodingConvention(),OVERRIDING_PROTOTYPE_WITH_NON_OBJECT,assign,OVERRIDING_PROTOTYPE_WITH_NON_OBJECT));
compiler.reportCodeChange();
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.copyNameAnnotations(assign.getLastChild(),NodeUtil.newName(compiler.getCodingConvention(),OVERRIDING_PROTOTYPE_WITH_NON_OBJECT,assign,OVERRIDING_PROTOTYPE_WITH_NON_OBJECT));
assign.replaceChild(assign,NodeUtil.newName(compiler.getCodingConvention(),OVERRIDING_PROTOTYPE_WITH_NON_OBJECT,assign,OVERRIDING_PROTOTYPE_WITH_NON_OBJECT));
if(parent.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.copyNameAnnotations(assign.getLastChild(),NodeUtil.newName(compiler.getCodingConvention(),OVERRIDING_PROTOTYPE_WITH_NON_OBJECT,assign,OVERRIDING_PROTOTYPE_WITH_NON_OBJECT));
compiler.reportCodeChange();
if(parent.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
assign.replaceChild(assign,NodeUtil.newName(compiler.getCodingConvention(),OVERRIDING_PROTOTYPE_WITH_NON_OBJECT,assign,OVERRIDING_PROTOTYPE_WITH_NON_OBJECT));
compiler.reportCodeChange();
if(parent.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.copyNameAnnotations(assign.getLastChild(),NodeUtil.newName(compiler.getCodingConvention(),OVERRIDING_PROTOTYPE_WITH_NON_OBJECT,assign,OVERRIDING_PROTOTYPE_WITH_NON_OBJECT));
assign.replaceChild(assign,NodeUtil.newName(compiler.getCodingConvention(),OVERRIDING_PROTOTYPE_WITH_NON_OBJECT,assign,OVERRIDING_PROTOTYPE_WITH_NON_OBJECT));
compiler.reportCodeChange();
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.copyNameAnnotations(assign.getLastChild(),NodeUtil.newName(compiler.getCodingConvention(),OVERRIDING_PROTOTYPE_WITH_NON_OBJECT,assign,OVERRIDING_PROTOTYPE_WITH_NON_OBJECT));
assign.replaceChild(assign,NodeUtil.newName(compiler.getCodingConvention(),OVERRIDING_PROTOTYPE_WITH_NON_OBJECT,assign,OVERRIDING_PROTOTYPE_WITH_NON_OBJECT));
compiler.reportCodeChange();
if(parent.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(param.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(name1.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maybeName2.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(name2.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maybeName1.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objlit.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(arg1.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(receiver.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
currentHighAffinityProperties=null;
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
if(rvalueType!=null){
return getTypeDeprecationInfo(rvalueType)!=null;
}
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(methodNameNode.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var==null||!enclosingQname.endsWith(".prototype."+lvalue.getString())){
reportBadBaseClassUse(t,rvalue,"Enclosing method does not match "+lvalue.getString());
return ;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(assign.isName());
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(assign.getParent().isCall()&&parent.getFirstChild()==assign){
return true;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.isGet(assign.getParent())&&assign==parent.getFirstChild()&&name.getNext().isString()&&name.getNext().getString().equals("call")){
Node lvalue=name.getAncestor(2);
if(gramps.isCall()&&gramps.getFirstChild()==parent){
return true;
}
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(assign.isName());
if(parent.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.getJSType()==null){
return "";
}else if(type.isFunctionType()){
return getFunctionAnnotation(lvalue);
}else if(type.isEnumType()){
return "/** @enum {"+type.toMaybeEnumType().getElementsType().toAnnotationString();
}else if(!type.isUnknownType()&&!type.isEmptyType()){
return "/** @type {"+node.getJSType().toAnnotationString();
}else {
return "";
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gramps.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lastParam.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tweakIdNode.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstArgument.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondArgument.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(body.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var==null){
return null;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerNode.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isReturn()){
return statement.getFirstChild();
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(defParent.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super.visit(t,lvalue,assign);
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstArg.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstChild.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(property.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(functionName.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
removeProperty(var.toObjectType(),getFieldName(lvalue));
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objectType.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(newChild.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(script.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lvalue.getLastChild().addChildToBack(assign);
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.POS :

if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(reference.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(endMarkerNode.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(labeledStatement.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(lvalue.isFunction());
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(JSType.toMaybeFunctionType(lvalue.getJSType())==null){
return ;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(lvalue.isFunction());
if(JSType.toMaybeFunctionType(lvalue.getJSType())==null){
return ;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null&&var.isScript()){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(leftSide.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(exportCallTarget.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(lvalue.isString());
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(lvalue.isString());
if(arg1.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(targetExpression.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!new CheckPathsBetweenNodes<Node,ControlFlowGraph.Branch>(t.getControlFlowGraph(),t.getControlFlowGraph().getEntry(),t.getControlFlowGraph().getImplicitReturn(),IS_RETURN,GOES_THROUGH_TRUE_CONDITION_PREDICATE).allPathsSatisfyPredicate()){
compiler.report(t.makeError(t.getScopeRoot(),reportUnknownTypes,MISSING_RETURN_STATEMENT,var.toString()));
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(arrayNode.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(assign==topScope.getRootNode())return ;
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
super.visit(t,assign,rvalue);
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(assign==topScope.getRootNode())return ;
if(n.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(stringNode.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isGet(assign)){
return rvalue;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(typeNode.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(lvalue.getString().indexOf('.')==-1){
endIndex=lvalue.getString().length();
}
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(block.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!lvalue.hasChildren()||block.hasOneChild()){
return false;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(aNode.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new JsonML(TagType.IdPatt).setAttribute(TagAttr.NAME,lvalue.getString());
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nullCount<0||var.length()<=index){
return assign;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(lvalue.isString());
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(lvalue.isString());
if(c.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(expectedBlock.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!lvalue.getFirstChild().isReturn()){
return null;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!lvalue.getFirstChild().hasOneChild()){
return null;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rvalueType==null){
return null;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(function.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue!=null&&parent.isName()){
Node var=parent.getParent();
if(gramps!=null&&gramps.isVar()){
return false;
}
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
processObjectLitProperties(lvalue,ObjectType.cast(objectLit.getJSType()),!reportMissingProperties);
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(jArgument.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.getChildAtIndex(1).isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nullCount<0){
return ;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nullCount<0){
return ;
}
if(n.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(exitNode.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
t.add(t.getScopeRoot());
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(anonymousFnNode.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(assertedNode.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.copyNameAnnotations(ref.node.getLastChild(),rvalue);
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(next.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lvalue=addMarker(assign.getJSType().toMaybeFunctionType(),nodeToInsertAfter,null);
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Iterables.addAll(Sets.newTreeSet(ALPHA),assign.getJSType().toMaybeFunctionType().getAllImplementedInterfaces());
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(!OVERRIDING_PROTOTYPE_WITH_NON_OBJECT.isEmpty());
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(!OVERRIDING_PROTOTYPE_WITH_NON_OBJECT.isEmpty());
if(n.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(leftParent.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rightParent.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&functionJSDocInfo.getAssociatedNode()!=null){
reportMissingProperties=functionJSDocInfo.getAssociatedNode().isFromExterns();
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rl.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(origParent.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkNoTypeCheckSection(lvalue,true);
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(thisArg.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var==null){
reportBadBaseClassUse(t,lvalue,"Could not find enclosing method.");
return ;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.THIS :

if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null&&ns.onlyAffectsClassDef){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(callback.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(requiresNode.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
handleRequiresAndParamList(t,rvalue,rvalue,assign,lvalue);
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,lvalue.getChildAtIndex(2),new DefineCallbackReturnCallback());
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
moveCallbackContentToTopLevel(rvalue,rvalue,lvalue.getChildAtIndex(2));
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue==null||!parent.isFunction()||rvalue==parent.getFirstChild()||parent==topScope.getRootNode()){
if(NodeUtil.isStatementParent(rvalue)){
for(Node rvalue.getFirstChild()=n.getFirstChild();child!=null;child=child.getNext()){
if(NodeUtil.isHoistedFunctionDeclaration(child)){
defineFunctionLiteral(child,n);
}
}
}
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valParent.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nameArg.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.getQualifiedName()==null){
return ;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
Preconditions.checkNotNull(provided.explicitModule);
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.getChildCount()!=3){
return ;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lvalue.getChildCount()!=3){
return ;
}
if(nameArg.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(last.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ensureTyped(t,assign,BOOLEAN_TYPE);
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.IN :

if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nullCount<0||var.length()<=index){
return assign;
}
if(arg1.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(lvalue.isString());
if(nullCount<0||var.length()<=index){
return assign;
}
if(lvalue.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(lvalue.isString());
if(nullCount<0||var.length()<=index){
return assign;
}
if(arg1.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isName()){
if(compiler.getCodingConvention().getSingletonGetterClassName(rvalue)!=null){
NameInformation new NameInformation()=new NameInformation();
nameInfo.name=compiler.getCodingConvention().getSingletonGetterClassName(rvalue);
nameInfo.onlyAffectsClassDef=true;
return new NameInformation();
}
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(operand.isName()){
JSType rvalueType=getJSType(assign.getLastChild());
Var var=t.getScope().getVar(lvalue.getString());
if(var!=null){
if(var.isTypeInferred()){
return ;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.TypeCheck,914
com.google.javascript.jscomp.TypeCheck,915
com.google.javascript.jscomp.TypeCheck,916
com.google.javascript.jscomp.TypeCheck,917
com.google.javascript.jscomp.TypeCheck,1235
========
if(dereferenceToObject(varType)==null||objType.getJSDocInfo()!=null){
return ;
}
if(varType!=null){
type=varType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(varType==null){
type=varType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(varType!=type){
type=varType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(varType==this){
type=varType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(varType!=this){
type=varType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(varType!=null&&varType.hasOwnProperty(OVERRIDING_PROTOTYPE_WITH_NON_OBJECT)){
type=varType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var!=null&&var.getType() instanceof EnumType){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(var!=null&&(var.isLocal()||v.nameNode.getParent().isCatch())){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var==null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(s.propertyScope!=null){
return ;
}
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var!=null){
JSType varType=var.getType();
if(varType==null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(var!=null&&var.isTypeInferred()){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(var!=null){
var.setType(varType==null?type:oldType.getLeastSupertype(resultType));
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(varType==null||slotType.isAllType()||slotType.isNoType()){
return null;
}
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var.getReferenceName()==null){
return true;
}
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var!=null&&var.getType()!=null&&var.getType().isFunctionType()){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(var!=null){
if((var.getType().toMaybeFunctionType().isConstructor()||var.getType().toMaybeFunctionType().isInterface())&&!var.getType().toMaybeFunctionType().isNativeObjectType()){
functionType=var.getType().toMaybeFunctionType();
}
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isEmpty()||n.isComma()){
return ;
}
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var!=null&&(var.isConstructor()||var.isInterface())){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!(parent.getType()==Token.BLOCK||pType==Token.SCRIPT||pType==Token.NAME||pType==Token.ASSIGN||pType==Token.STRING)){
return false;
}
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var!=null&&type.toObjectType().isEquivalentTo(var.getType())){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(var!=null){
JSType varType=var.getType();
if(varType!=null&&type.isSubtype(varType)){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(var!=null&&!var.isTypeInferred()){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!NodeUtil.isImmutableValue(var)){
return false;
}
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var!=null&&var.hasType()){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(t.inGlobalScope()){
return ;
}
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var!=null&&isRemovableVar(var)){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n!=null&&var!=null&&isRemovableVar(var)&&!NodeUtil.mayHaveSideEffects(n)){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var!=null){
assignedToUnknownValue=var.getInitialValue()!=null&&!NodeUtil.isLiteralValue(var.getInitialValue(),true);
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var!=null&&var.hasEnumParameterType()){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var!=null){
JSType varType=var.getType();
if(varType!=Visibility.PRIVATE){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var!=null){
if(var.getImplicitPrototype()!=null){
return getTypeDeprecationInfo(var.getImplicitPrototype());
}
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var!=null&&var.hasOwnDeclaredProperty(OVERRIDING_PROTOTYPE_WITH_NON_OBJECT)){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var!=null){
for(JSType type : var.getAlternates()){
Symbol getSymbolForTypeHelper(type,true)=getSymbolForTypeHelper(type,true);
if(getSymbolForTypeHelper(type,true)!=null){
getSymbolForTypeHelper(type,true).add(getSymbolForTypeHelper(type,true));
}
}
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var!=this){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
((ConcreteScope)type.getScope()).declareSlot(ConcreteFunctionType.RETURN_SLOT_NAME,n,type.toFunction().getReturnSlot().getType().unionWith(createType(var.getReturnType())));
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(hasOwnDeclaredProperty(OVERRIDING_PROTOTYPE_WITH_NON_OBJECT)){
return false;
}
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.NAME){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(varType==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
type=getNativeType(JSTypeNative.UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(parent.isName());
if(type==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isUnflowable(topScope.getVar(parent.getString()))){
return ;
}
if(type==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(parent.isName());
if(type==null){
type=getNativeType(JSTypeNative.UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.setJSType(type);
if(type==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
defineSlot(n,n,type);
if(type==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(booleanValues==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(EMPTY==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type==null&&n.isFunction()){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type==null||type.isUnknownType()){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type!=varType){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==varType){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type.autoboxesTo()==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type.autoboxesTo()!=null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type==Token.NOT){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null&&shouldEmitDeprecationWarning(t,n,parent)){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=castType.restrictByNotNullOrUndefined();
if(type==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=type.restrictByNotNullOrUndefined();
if(type==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(typeSystem==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(returnType==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rightType==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
type=getNativeType(VOID_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(returnType==null){
type=getNativeType(VOID_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propVarType==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.SCRIPT){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(INHERITS==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.RETURN){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(s.propertyScope!=null){
return ;
}
if(type==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(BLOCK==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(OR==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(INC==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(null!=null){
n.detachChildren();
n.replaceChild(n,replacement);
reportCodeChange();
return replacement;
}
if(type==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(inf==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==n){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((type==null||type.isUnknownType())&&OVERRIDING_PROTOTYPE_WITH_NON_OBJECT!=null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(propertyType==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setDeferredType(n,type);
if(type==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
processObjectLitProperties(n,ObjectType.cast(objectLit.getJSType()),!false);
if(type==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.FUNCTION){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
returnTypeInferred=true;
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(GETPROP==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(GETELEM==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isExprResult()){
Node n.getParent()=ancestor.getParent();
replaceWithEmpty(ancestor,ancParent);
break;
}
if(type==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NAME==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var==null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type==null){
var.put((ObjectType)type.getReferenceName(),objType);
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==TagType.Case){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(n);
if(type==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.getType()==Token.BLOCK);
if(type==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n=child.getFirstChild();
if(type==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(n);
if(type==TagType.Case){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.getType()==Token.BLOCK);
if(type==TagType.Case){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(n);
Preconditions.checkState(n.getType()==Token.BLOCK);
if(type==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkNotNull(n);
Preconditions.checkState(n.getType()==Token.BLOCK);
if(type==TagType.Case){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
if(n.isAssign()){
Node n.getLastChild()=n.getLastChild();
n.removeChild(n.getLastChild());
n.replaceChild(n,n.getLastChild());
}else {
Preconditions.checkState(n.isName());
n.removeChild(n.getFirstChild());
}
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
compiler.reportCodeChange();
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type==null){
if(n.isAssign()){
Node n.getLastChild()=n.getLastChild();
n.removeChild(n.getLastChild());
n.replaceChild(n,n.getLastChild());
}else {
Preconditions.checkState(n.isName());
n.removeChild(n.getFirstChild());
}
compiler.reportCodeChange();

type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==n){
compiler.reportCodeChange();
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.setJSType(type);
if(booleanValues==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.setJSType(type);
if(EMPTY==null){
type=getNativeType(UNKNOWN_TYPE);
Var var=t.getScope().getVar(n.getString());
if(var!=null){
JSType varType=var.getType();
if(varType!=null){
type=varType;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.TypeCheck,1236
com.google.javascript.jscomp.TypeCheck,1237
com.google.javascript.jscomp.TypeCheck,1238
com.google.javascript.jscomp.TypeCheck,1239
com.google.javascript.jscomp.TypeCheck,1240
com.google.javascript.jscomp.TypeCheck,1798
========
if(resolveResult==null){
return getNativeType(UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(jsType==null){
return typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(jsType==null){
return getNativeType(JSTypeNative.UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(currentValue==null){
return getNativeType(UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(returnType==null){
return getNativeType(UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
return getNativeType(UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rightType==null){
return getNativeType(UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propVarType==null){
return getNativeType(UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null){
return getNativeType(UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(jsType==null){
return getNativeType(UNKNOWN_TYPE);
}else {
return ALL;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(varType==null){
return getNativeType(UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(varType==null){
return getNativeType(UNKNOWN_TYPE);
}else {
return varType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(jsType==null){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(jsType==null){
return getNativeType(UNKNOWN_TYPE);
}else {
return varType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(varType==null){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(jsType!=null){
return getNativeType(UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(jsType.unboxesTo()==null){
return getNativeType(UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(jsType.unboxesTo()!=null){
return getNativeType(UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(jsType==null){
return getNativeType(JSTypeNative.ALL_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(currentValue!=null){
return getNativeType(UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(jsType!=null){
return getNativeType(JSTypeNative.ALL_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(currentValue==null){
return getNativeType(JSTypeNative.ALL_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(currentValue!=null){
return getNativeType(JSTypeNative.ALL_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(delegateType==null){
return getNativeType(UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(inf==null){
return getNativeType(UNKNOWN_TYPE);
}else {
return inf;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(inf==null){
return getNativeType(UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(jsType==null){
return getNativeType(UNKNOWN_TYPE);
}else {
return inf;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(jsType!=null){
return getNativeType(UNKNOWN_TYPE);
}else {
return inf;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(inf!=null){
return getNativeType(UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(inf!=null){
return getNativeType(UNKNOWN_TYPE);
}else {
return inf;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(varType!=null){
return getNativeType(UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(realType==null){
return getNativeType(UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getQualifiedName()==null){
return ;
}
if(jsType==null){
return getNativeType(UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
typeRegistry.declareType(n.getQualifiedName(),getNativeType(UNKNOWN_TYPE));
if(jsType==null){
return getNativeType(UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(jsType==null||jsType.isUnknownType()){
return getNativeType(UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.getJSDocInfo()==null||!n.isGetProp()||!member.getFirstChild().isThis()){
return ;
}
if(jsType==null){
return getNativeType(UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.rhino.jstype.JSTypeRegistry,1314
com.google.javascript.rhino.jstype.JSTypeRegistry,1329
com.google.javascript.rhino.jstype.JSTypeRegistry,1331
com.google.javascript.rhino.jstype.JSTypeRegistry,1332
com.google.javascript.rhino.jstype.JSTypeRegistry,1456
UNKNOWN ASTNode type : catch (NumberFormatException e) {
  return n;
}

UNKNOWN ASTNode type : catch (NumberFormatException e) {
  return n;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  compiler.report(t.makeError(n,INVALID_STYLE_ERROR,styleStr));
  return;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException ex) {
  t.report(n,MALFORMED_REGEXP,ex.getMessage());
}

UNKNOWN ASTNode type : catch (UnsupportedOperationException e) {
  violation("getString failed for" + Token.name(n.getType()),n);
}

UNKNOWN ASTNode type : catch (UnsupportedOperationException e) {
  violation("getString failed for" + Token.name(n.getType()),n);
}

========
case Token.LC :
return createFromTypeNodesInternal(n.getFirstChild(),sourceName,scope).restrictByNotNullOrUndefined();


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.QMARK :

case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.LC :
return createOptionalType(createFromTypeNodesInternal(n.getFirstChild(),sourceName,scope));


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.STAR :

case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.LC :
return createDefaultObjectUnion(createFromTypeNodesInternal(n,sourceName,scope));


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==null){
return getNativeType(UNKNOWN_TYPE);
}
case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.EQUALS :

case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.LC :
return createFromTypeNodesInternal(n,sourceName,scope);


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(resolveMode==ResolveMode.LAZY_EXPRESSIONS){
boolean hasTypeName(n)=hasTypeName(n);
if(hasNames){
return new UnresolvedTypeExpression(this,n,sourceName);
}
}
case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.FALSE :
n.setJSType(getNativeType(BOOLEAN_TYPE));
break;

case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.SETTER_DEF :
Preconditions.checkState(n.getParent().isObjectLit());
Preconditions.checkState(PROPERTY_CHECKING_UNION_SIZE==1);

case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NEW :

case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
sourceName=n.getString();
case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.CALL :
Node n.getFirstChild()=n.getFirstChild();
String n.getFirstChild().getQualifiedName()=calledFn.getQualifiedName();

case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.AND :
VariableLiveness isVariableReadBeforeKill(n.getFirstChild(),sourceName)=isVariableReadBeforeKill(n.getFirstChild(),sourceName);
VariableLiveness isVariableReadBeforeKill(n.getLastChild(),sourceName)=isVariableReadBeforeKill(n.getLastChild(),variable);

case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.CATCH :

case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!n.isGetProp()){
return false;
}
case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getType(n.getFirstChild()).isUnknownType()||type.isUnionType()){
return false;
}
case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  compiler.report(t.makeError(n,INVALID_STYLE_ERROR,styleStr));
  return;
}

UNKNOWN ASTNode type : catch (UnsupportedOperationException ex) {
  error(NEGATING_A_NON_NUMBER_ERROR,left);
  return n;
}

UNKNOWN ASTNode type : catch (UnsupportedOperationException ex) {
  error(NEGATING_A_NON_NUMBER_ERROR,left);
  return n;
}

========
case Token.LC :
return createOptionalType(createFromTypeNodesInternal(n.getFirstChild(),sourceName,scope));

case Token.BANG :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.BITNOT :

case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);

case Token.BANG :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.DELPROP :

case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);

case Token.BANG :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.COMMA :

case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);

case Token.BANG :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.ASSIGN :

case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);

case Token.BANG :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.FOR :

case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);

case Token.BANG :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.LC :
return getNativeType(UNKNOWN_TYPE);

case Token.BANG :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 0
TESTING : closure_35
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - com.google.javascript.jscomp.parsing.ParserTest::testJSDocAttachment11
  - com.google.javascript.jscomp.TypedScopeCreatorTest::testPropertyDeclarationOnRecordType
  - com.google.javascript.jscomp.TypeCheckTest::testDuplicateRecordFields2
  - com.google.javascript.jscomp.TypeCheckTest::testDuplicateRecordFields1
  - com.google.javascript.jscomp.TypeCheckTest::testRecordType7
  - com.google.javascript.jscomp.TypeCheckTest::testRecordType4
  - com.google.javascript.jscomp.TypeCheckTest::testRecordType3
  - com.google.javascript.jscomp.TypeCheckTest::testRecordType1
  - com.google.javascript.jscomp.TypeCheckTest::testTypeInferenceWithNoEntry2
  - com.google.javascript.jscomp.TypeCheckTest::testTypeInferenceWithNoEntry1
  - com.google.javascript.jscomp.ExternExportsPassTest::testTypedef
Failing tests: 11
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
default :

case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);

case Token.BANG :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.CALL :

case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);

case Token.BANG :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.PARAM_LIST :

case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);

case Token.BANG :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.GETELEM :

case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);

case Token.BANG :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.ARRAYLIT :

case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);

case Token.BANG :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.CATCH :

case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);

case Token.BANG :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.HOOK :

case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);

case Token.BANG :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
sourceName=n.getQualifiedName();
case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);

case Token.BANG :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sourceName==null)return ;
case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);

case Token.BANG :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.LC :
return n.getJSType().restrictByNotNullOrUndefined();

case Token.BANG :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!n.isGetProp()){
return false;
}
case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);

case Token.BANG :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getType(n.getFirstChild()).isUnknownType()||type.isUnionType()){
return false;
}
case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);

case Token.BANG :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkNoTypeCheckSection(n,true);
case Token.LC :
return createRecordTypeFromNodes(n.getFirstChild(),sourceName,scope);

case Token.BANG :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.rhino.jstype.JSTypeRegistry,1491
UNKNOWN ASTNode type : catch (NumberFormatException e) {
  return n;
}

UNKNOWN ASTNode type : catch (NumberFormatException e) {
  return n;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  compiler.report(t.makeError(n,INVALID_STYLE_ERROR,styleStr));
  return;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException ex) {
  t.report(n,MALFORMED_REGEXP,ex.getMessage());
}

UNKNOWN ASTNode type : catch (UnsupportedOperationException e) {
  violation("getString failed for" + Token.name(n.getType()),n);
}

UNKNOWN ASTNode type : catch (UnsupportedOperationException e) {
  violation("getString failed for" + Token.name(n.getType()),n);
}

========
for(Node child=node.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=typeNode.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=child.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=subtree.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=varNode.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=n.getFirstChild().getNext().getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node child=child.getFirstChild().getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child=child.getNext();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=exportedObjectLit.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=val.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(child);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(child.getType()==Token.BLOCK);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=n.getFirstChild().getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node child=objlit.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=block.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child=n.getFirstChild().getNext();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstChild=child.getNext();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstChild.detachFromParent();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(n.getJSType());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(NodeUtil.isGet(n));
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=parent.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=constructor.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=root.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=current.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=n.getFirstChild();child!=null&&NodeUtil.isFunctionDeclaration(child);child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=parameters.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=thisTypeNode.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=objLitNode.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=n.getFirstChild();child!=firstChild;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isUselessCase(firstChild,(firstChild==n.getFirstChild())?null:lastNonRemovable)){
removeCase(n,c);
return null;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=args.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scanVars(firstChild,n);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=firstArgument.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=arg.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=start.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=map.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=object.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=lp.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child=p.getNext();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=typeArray.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=n.getFirstChild();child!=null||n.isScript();child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node child=paramsParent.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child=(JSDocInfo)n.getProp(Node.JSDOC_INFO_PROP);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=assignNode.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
restricted.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
defineSlot(n,n,child);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child=n.getNext();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(!NodeUtil.isObjectLitKey(n,n.getParent()));
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tryMinimizeExits(n,PROPERTY_CHECKING_UNION_SIZE,sourceName);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.copyNameAnnotations(n.getLastChild(),child);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope=traverseChildren(n,scope);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isCall());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.setDebugInformation(child.getFirstChild(),firstChild,sourceName+".prototype");
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(firstChild,child);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tryMinimizeExits(firstChild,PROPERTY_CHECKING_UNION_SIZE,sourceName);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isTypeOf());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.copyNameAnnotations(ref.node.getLastChild(),firstChild);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isWhile());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.isDo());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.redeclareVarsInsideBranch(n);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.detachChildren();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
child.add(formatDetailedMessage(templateTypeName,sourceName,PROPERTY_CHECKING_UNION_SIZE,PROPERTY_CHECKING_UNION_SIZE));
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkNoTypeCheckSection(n,false);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(n,child);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isString());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.isCall());
Preconditions.checkArgument(n.isString());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
child=n.getChildAtIndex(1);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setResolvedTypeInternal(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
builder.reportCodeChange();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child.add(n);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.removeChild(child);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstChild=IR.regexp(firstChild,child);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.setString(coalescedVar.name);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isGetProp());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.removeChild(n);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.removeChild(n);
builder.reportCodeChange();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
builder.add(new CallSite(n,n,n,n,firstChild));
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.getParent().replaceChild(n,child);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.setString(sourceName);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.replaceChild(n,child);
reportCodeChange();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child.getParent().replaceChild(n,firstChild);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.getParent().replaceChild(n,child);
reportCodeChange();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
resolvedNamedTypes.putAll(scope,unresolvedNamedTypes.removeAll(scope));
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tryDefineLexicalQualifiedNameRef(NodeUtil.getBestLValueName(n),n);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.addChildToBack(n);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.setString(toShadow.oldName);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child.replaceChild(n,firstChild);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
builder.append(name(n));
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.removeChild(firstChild);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstChild.replaceChild(n,firstChild);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
templateTypeName=sourceName;
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
global.uses.add(n);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope=tightenTypesAfterAssertions(scope,n);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=node.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=exportedObjectLit.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=varNode.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=subtree.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstChild=n;
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=val.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstChild.isBlock()&&n!=null&&parent.isTry()&&NodeUtil.getCatchBlock(parent)==node&&!NodeUtil.hasCatchHandler(node)){
return ;
}
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=child.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
declareVar(n);
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scanVars(child,n);
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=block.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.VAR :

case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild().getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.PIPE :
info=n.getJSDocInfo();
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.DELPROP :

case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.getBestLValueName(NodeUtil.getBestLValue(n))!=null&&lValueName.endsWith(".prototype")){
return ;
}
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.PIPE :
childType=getJSType(n.getFirstChild());
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.AND :

case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
Preconditions.checkState(PROPERTY_CHECKING_UNION_SIZE==2);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.OBJECTLIT :

case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.GETELEM :

case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=start.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getParent().getParent().getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getParent().getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=n.getParent();child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getParent().getParent().getFirstChild();child!=n.getParent();child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getParent().getFirstChild();child!=n.getParent();child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isName()&&n.getParent().isFunction()){
child=current.getParent();
}
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.OR :

case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.PIPE :
if(n.getString().equals("NaN")){
return Double.NaN;
}
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.PIPE :
Preconditions.checkState(n.hasChildren(),"AST should be normalized");
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=p.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NEW :

case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.FUNCTION :

case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
templateTypeName=Joiner.on("_").join(nonNullableTypeNames);
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child.setString(templateTypeName);
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.getParent().replaceChild(n,child);
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child=n.getNext();
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=map.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=firstChild;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isUselessCase(firstChild,(firstChild==n.getFirstChild())?null:lastNonRemovable)){
removeCase(n,c);
return null;
}
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(PROPERTY_CHECKING_UNION_SIZE*2-STRING_SPLIT_OVERHEAD<=0){
return n;
}
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.PIPE :
n.replaceChild(n,child);
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.PIPE :
reportCodeChange();
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.PIPE :
n.replaceChild(n,child);
reportCodeChange();

UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.PIPE :
scope=traverseChildren(n,scope);
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(child==null||objType.getJSDocInfo()!=null){
return ;
}
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.SETTER_DEF :
Preconditions.checkState(n.getParent().isObjectLit());
Preconditions.checkState(PROPERTY_CHECKING_UNION_SIZE==1);
Preconditions.checkState(firstChild.isFunction());
Preconditions.checkState(first.getFirstChild().getString().isEmpty());

case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.PIPE :
tryMinimizeExits(NodeUtil.getLoopCodeBlock(n),Token.CONTINUE,null);
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=args.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.children().iterator().next();
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getNext()!=null){
sourceName=arg.getNext().getString();
}
case Token.PIPE :
UnionTypeBuilder builder=new UnionTypeBuilder(this);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.rhino.jstype.JSTypeRegistry,1492
com.google.javascript.rhino.jstype.JSTypeRegistry,1494
com.google.javascript.rhino.jstype.JSTypeRegistry,1493
Find no block!
com.google.javascript.rhino.jstype.JSTypeRegistry,1497
========
for(Node child=node.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=subtree.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=varNode.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child=child.getNext();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=exportedObjectLit.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=val.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(child);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(child.getType()==Token.BLOCK);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=n.getFirstChild().getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(firstChild.getChildCount()==2);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstChild.detachFromParent();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=block.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(child.hasOneChild()){
NodeUtil.redeclareVarsInsideBranch(catchBlock);
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=child.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
traverseBranch(child,n);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(child.getNext().getNext()==null&&body.isBlock(),body);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(child.getQualifiedName()==null||child.getNext()!=null){
return ;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isGet(child.getFirstChild())){
return false;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!child.isEmpty()&&!init.isVar()){
init=trySimplifyUnusedResult(init,false);
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(child==null){
return null;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new JsonML(TagType.IdPatt).setAttribute(TagAttr.NAME,n.getString());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=lp.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return createFromTypeNodesInternal(child,sourceName,scope);
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isName());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(child.getNext()==null){
return n;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
addAllChildren(child);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lastGeneration){
addSimplifiedChildren(child.getNext().getNext());
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child=firstChild;
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=p.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=objLitNode.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isNew()||n.isCall());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node child=args.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!child.getNext().isString()){
return ;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=arg.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=objectLiteral.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=n.getFirstChild();child!=firstChild;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isUselessCase(firstChild,(firstChild==n.getFirstChild())?null:lastNonRemovable)){
removeCase(n,c);
return null;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=parameters.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=firstChild.getFirstChild();child!=firstChild;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=firstChild.getParent().getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=firstChild.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=start.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child=p.getNext();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstChild=n;
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
thisRestricted.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
thatRestricted.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isTry());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.getFirstChild().getLastChild().getString().equals("call")||propString.equals("apply")){
return n.getFirstChild().getNext();
}else {
return callTarget.getFirstChild();
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maybeGetSingleReturnRValue(firstChild)!=null&&value.isName()&&value.getString().equals(child.getString())){
return true;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
restricted.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return restricted.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
restricted.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return restricted.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=map.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=typeArray.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child=trySimplifyUnusedResult(left);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
declareVar(n);
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
scanVars(child,n);
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope=traverseChildren(n,scope);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.hasOneChild());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!n.getFirstChild().getFirstChild().isName()){
return false;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=thisTypeNode.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
createEdge(n,Branch.ON_TRUE,computeFallThrough(child));
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
connectToPossibleExceptionHandler(n,NodeUtil.getConditionExpression(node));
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.removeChild(n);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!n.isCall()){
return null;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(NodeUtil.isObjectLitKey(n,n.getParent())||n.getType()==Token.NAME||nType==Token.GETPROP);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
connectToPossibleExceptionHandler(firstChild,node.getFirstChild());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.mayHaveSideEffects(child)||NodeUtil.canBeSideEffected(rhs)){
return false;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.removeChild(firstChild);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TWEAK_FUNCTIONS_MAP.get(sourceName)==null){
return ;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=paramsParent.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.getParent().isAssign());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n=n.getNext();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.isCall());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
child=skipFinallyNodes(follow);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node child=assignNode.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
defineSlot(n,n,child);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mayHaveSideEffects(firstChild)){
return n;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.getParent().replaceChild(n,child);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=firstChild;
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument((firstChild.isAnd())||(node.isOr()),"Expected: AND or OR, Got: %s",Token.name(node.getType()));
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(hasBreakOrContinue(n)){
return n;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(NodeUtil.isControlStructureCodeBlock(n,n.getFirstChild()));
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child=n.getNext();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.getChildCount()==3);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isFunction());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.getChildCount()==3);
Preconditions.checkState(n.isFunction());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.getFirstChild().setString("");
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.detachFromParent();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.getFirstChild().setString("");
n.detachFromParent();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
child=current.getNext();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(!NodeUtil.isObjectLitKey(n,n.getParent()));
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isExpressionTreeUnsafe(n,state.sideEffects)){
state.sideEffects=true;
state.extractBeforeStatement=extractExpression(n,state.extractBeforeStatement);
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(firstChild.isString());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(String templateTypeName : nonNullableTypeNames){
reportWarning(INEXISTANT_PARAM,inexistentName,sourceName);
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstChild=builder.build();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
parseMessageTextNode(builder,child);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.setDebugInformation(child.getFirstChild(),firstChild,"?"+".prototype");
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(firstChild,child);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.reportCodeChange();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child=paramName.getNext();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstChild=firstChild;
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isTypeOf());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.replaceChild(n,child);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isGet(child)){
return n;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
assertDefinitionNode(n,Token.FUNCTION);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setDeferredType(n,createFunctionTypeFromNodes(n,sourceName,NodeUtil.getBestJSDocInfo(n),child));
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(scope==null)break;
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(inferConcreteType(getTopScope(),n).isNone()||type.isAll()){
break;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ImmutableMap.builder().putAll(Annotation.recognizedAnnotations);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n!=null)&&maybeInitMetaDataFromHelpVar(builder,parentOfVarNode.getChildBefore(firstChild))){
return ;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maybeInitMetaDataFromHelpVar(builder,firstChild.getNext());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
greatestSubtypeByProperty.remove(sourceName);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
child.setString(builder.get(sourceName));
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.addChildToBack(IR.returnNode(child).srcref(targetVal));
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(firstChild,IR.function(IR.name("").srcref(n),IR.paramList().srcref(n),n));
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.putBooleanProp(Node.FREE_CALL,true);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
firstChild.removeChild(firstChild);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(child==null){
src=MISSING_SOURCE;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.addChildToBack(firstChild);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.copyNameAnnotations(ref.node.getLastChild(),firstChild);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
declareArguments(firstChild);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isString());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.isCall());
Preconditions.checkArgument(n.isString());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.addChildToBack(IR.block(IR.ifNode(IR.not(IR.call(IR.getprop(firstChild.cloneTree(),IR.string("match")),IR.regexp(IR.string("___$")))),child)));
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(child<0){
return ;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.getParent().isObjectLit());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(firstChild.isCall()||callsite.isNew());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(firstChild==null||previousCase.getNext()==child);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child.add(formatDetailedMessage(templateTypeName,sourceName,PROPERTY_CHECKING_UNION_SIZE,PROPERTY_CHECKING_UNION_SIZE));
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isWhile());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.redeclareVarsInsideBranch(n);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.removeChild(n.getParent(),n);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(n,IR.number(0));
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.DELPROP :

for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.getParent().replaceChild(n,child);
reportCodeChange();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child=addMarker(n.getJSType().toMaybeFunctionType(),nodeToInsertAfter,null);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.get(sourceName)==null){
return ;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(firstChild.isAssign());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstChild.removeChild(n);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
builder.append(name(n));
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isCall());
Preconditions.checkArgument(firstChild.isString());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child.add(n);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GETELEM :

for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(child);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.removeChild(child.getParent(),n);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(child!=null){
newReportFunctionExitNode().addChildToBack(returnRhs);
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.addChildToFront(newReportFunctionExitNode());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child.getParent().replaceChild(n,firstChild);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(child!=null){
maybeTypeOfThis=maybeTypeOfThis.restrictByNotNullOrUndefined();
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.addChildToBack(n);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.replaceChild(n,child);
reportCodeChange();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child.detachFromParent();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.addChildAfter(child,n);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstChild.detachFromParent();
reportCodeChange();
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child.setString(coalescedVar.name);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isVar()){
removeVarDeclaration(child);
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getString().isEmpty()){
Preconditions.checkState(child.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(parent));
return ;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(child.isEquivalentTo(n)){
return ;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!mayHaveSideEffects(n)){
NodeUtil.removeChild(n.getParent(),n);
}else {
Node child=IR.exprResult(cond.detachFromParent()).copyInformationFrom(cond);
n.getParent().replaceChild(n,statement);
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
inferPropertyTypesToMatchConstraint(getJSType(child),getJSType(firstChild));
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
updateAssignAllowedStack(n,false);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(child==scope.getRootNode())return ;
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!areSafeFlagsToFold(firstChild.getString())){
return n;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstChild=IR.regexp(firstChild,firstChild);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isName()||n.isGetProp());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sourceName==null){
return false;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isGetElem());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(child.isArrayLit()){
return tryFoldArrayAccess(n,left,firstChild);
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child.replaceChild(n,firstChild);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.mayEffectMutableState(firstChild)){
return ;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.add(new CallSite(firstChild,n,firstChild,firstChild,firstChild));
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
templateTypeName=Joiner.on("_").join(nonNullableTypeNames);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child.setString(templateTypeName);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.copyNameAnnotations(firstChild,firstChild);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstChild.replaceChild(n,firstChild);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(sourceName!=null&&sourceName!=null);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
lastGeneration=true;
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
child=resolveInternal(reporter,scope);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child.setResolvedTypeInternal(resolveResult);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(child!=null&&nameNode.getParent()!=null&&nameNode.getParent().isCatch()){
return ;
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
replaceSymbol(n,sourceName);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(n,IR.string(child));
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
info.occurrences.add(new StringOccurrence(n,firstChild));
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
info.numOccurrences++;
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(firstChild,NodeUtil.booleanNode(lastGeneration));
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.addChildToFront(IR.exprResult(firstChild).srcref(cond));
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(child==null&&firstChild.isFunction()){
varType=parent.getJSType();
}
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(child.isName());
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
defineSlot(n,n,builder.getNativeObjectType(UNKNOWN_TYPE),true);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(firstChild,firstChild);
for(Node child=n.getFirstChild();child!=null;child=child.getNext()){
builder.addAlternate(createFromTypeNodesInternal(child,sourceName,scope));
}
return builder.build();
case Token.EMPTY :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.rhino.jstype.JSTypeRegistry,1617
========
if(fieldTypeNode.getType()==n){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.getType()==Token.LT){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldTypeNode.getType()!=Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldTypeNode.getType()==null){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.getType()!=null){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.getType()==TagType.Empty){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.getType()==Token.GETELEM){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.addChildToBack(n);
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.addChildToBack(n);
if(fieldTypeNode.getType()==Token.GETELEM){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldTypeNode.getType()!=n){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.getType()==PROPERTY_CHECKING_UNION_SIZE){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldTypeNode.getType()!=PROPERTY_CHECKING_UNION_SIZE){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldTypeNode.getType()==Token.STRING){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldTypeNode.getType()==Token.COLON){
type=getValueType(n.getNext());
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.getType()==Token.SCRIPT){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldNameNode.isName()){
return true;
}
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.getType()==info.initialValue){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=hasType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
info.initialValueParent.replaceChild(info.initialValue,fieldTypeNode.cloneTree());
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.getType()!=info.initialValue){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.getType()!=Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=hasType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldTypeNode.getType()==info.initialValue){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=hasType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.getType()!=info.initialValue){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=hasType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldTypeNode.getType()!=Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldTypeNode.getType()==null){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.getType()!=null){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.getChildCount()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldTypeNode.getChildCount()!=Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==null){
return ;
}
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.getType()==Token.NAME){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild().getNext().getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=n.getFirstChild().getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldTypeNode.getChildCount()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild().getNext().getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldTypeNode.getChildCount()==Token.COLON){
fieldNameNode=n.getFirstChild().getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!fieldNameNode.isCall()){
return ;
}
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isCall(),"Expected: CALL, Got: %s",Token.name(node.getType()));
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(PROPERTY_CHECKING_UNION_SIZE==1||n.getType()==Token.BLOCK||parentType==Token.SCRIPT||parentType==Token.LABEL);
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fieldNameNode=fieldTypeNode.getNext();
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.getFirstChild()==null||!function.isGetProp()){
return false;
}
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.getType()==scope){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
if(fieldTypeNode.getJSDocInfo()==null){
info=n.getJSDocInfo();
}
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.getIntProp(Node.INCRDECR_PROP)==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldTypeNode.getType()==TagType.ArrayExpr){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(fieldTypeNode.isCall());
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldTypeNode.getType()==Token.EQUALS){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
Preconditions.checkState(fieldTypeNode.getString().length()!=0);
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldTypeNode.getType()!=Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
Preconditions.checkState(fieldTypeNode.getString().length()!=0);
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldTypeNode.getType()==null){
fieldNameNode=fieldTypeNode.getFirstChild();
Preconditions.checkState(fieldTypeNode.getString().length()!=0);
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.getType()!=null){
fieldNameNode=fieldTypeNode.getFirstChild();
Preconditions.checkState(fieldTypeNode.getString().length()!=0);
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.getType()==Context.IN_FOR_INIT_CLAUSE){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
declareArguments(fieldTypeNode);
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
add(":");
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
addExpr(fieldTypeNode.getFirstChild(),1,Context.OTHER);
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateNodeType(Token.IF,fieldTypeNode);
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateMinimumChildCount(fieldTypeNode,2);
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateMaximumChildCount(fieldTypeNode,3);
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateExpression(fieldTypeNode.getFirstChild());
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateBlock(fieldTypeNode.getChildAtIndex(1));
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isAssign());
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldTypeNode.getType()==Token.COLON){
next=fieldTypeNode.getNext();
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GETPROP :

if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldName.startsWith("."+File.separator)||fieldName.startsWith(".."+File.separator)){
fieldName=fieldName.substring(1,fieldName.length()-1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldName.startsWith("."+File.separator)||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldName.startsWith("\'")||fieldName.startsWith(".."+File.separator)){
fieldName=fieldName.substring(1,fieldName.length()-1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldName.startsWith("\'")&&fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldName.startsWith("\'")||fieldName.substring(0,2).equalsIgnoreCase("0x")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
radix=16;
fieldName=fieldName.substring(1,fieldName.length()-1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldName.startsWith("\'")&&fieldName.substring(0,2).equalsIgnoreCase("0x")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldName.equals(sourceName)||fieldName.startsWith(sourceName+".")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldName.equals(sourceName)||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldName.startsWith("\'")||fieldName.startsWith(sourceName+".")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldName.indexOf(sourceName,PROPERTY_CHECKING_UNION_SIZE)<0){
return -1;
}
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldName.endsWith(".")||fieldName.startsWith(".")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldName.endsWith(".")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldName.startsWith("\'")||fieldName.startsWith(".")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldName.indexOf("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fieldName=parentName.substring(0,parentName.lastIndexOf('.'));
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldName.startsWith("\'")||fieldName.isUpperCase("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldName.startsWith("\'")||fieldName.isJavaIdentifierStart("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
hasType=true;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(hasType){
fieldNameNode=fieldTypeNode.getFirstChild();
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldNameNode=fieldTypeNode.getFirstChild();
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(hasType){
fieldNameNode=fieldTypeNode.getFirstChild();
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldNameNode=fieldTypeNode.getFirstChild();
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(hasType){
right=n.getFirstChild();
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
right=n.getLastChild();
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rewriteDefinition(fieldTypeNode,sourceName);
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.containsFunction(n)){
return ;
}
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.addChildrenToFront(n.getLastChild().detachFromParent());
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.addChildrenToBack(n.getFirstChild().detachFromParent());
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.addChildrenToFront(n.getLastChild().detachFromParent());
n.addChildrenToBack(n.getFirstChild().detachFromParent());
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldTypeNode.getFirstChild().getLastChild().getString().equals("call")||propString.equals("apply")){
return fieldTypeNode.getFirstChild().getNext();
}else {
return callTarget.getFirstChild();
}
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getSourceFileByName(sourceName)!=null){
return input.getLine(PROPERTY_CHECKING_UNION_SIZE);
}
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getSourceFileByName(sourceName)!=null){
return input.getRegion(PROPERTY_CHECKING_UNION_SIZE);
}
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateBlock(n.getLastChild());
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :

if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (NumberFormatException e) {
  return n;
}

UNKNOWN ASTNode type : catch (NumberFormatException e) {
  return n;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  compiler.report(t.makeError(n,INVALID_STYLE_ERROR,styleStr));
  return;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException ex) {
  t.report(n,MALFORMED_REGEXP,ex.getMessage());
}

UNKNOWN ASTNode type : catch (UnsupportedOperationException e) {
  violation("getString failed for" + Token.name(n.getType()),n);
}

UNKNOWN ASTNode type : catch (UnsupportedOperationException e) {
  violation("getString failed for" + Token.name(n.getType()),n);
}

========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==Token.EQUALS){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)!=null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==-1){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
errorReporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
return false;
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==TernaryValue.FALSE){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isWhile());
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.isWhile());
if(builder.addProperty(fieldName,fieldType,fieldNameNode)!=null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.isDo());
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)!=TernaryValue.FALSE){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isDo());
if(builder.addProperty(fieldName,fieldType,fieldNameNode)!=null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.isDo());
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==TernaryValue.FALSE){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isDo());
if(builder.addProperty(fieldName,fieldType,fieldNameNode)!=TernaryValue.FALSE){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
compiler.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
return ;
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(n,fieldNameNode);
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.replaceChild(n,fieldNameNode);
if(builder.addProperty(fieldName,fieldType,fieldNameNode)!=null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
reporter.reportCodeChange();
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
fieldNameNode.putBooleanProp(Node.QUOTED_PROP,false);
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
return ;
compiler.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
break;
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==Token.NAME){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
return true;
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(!NodeUtil.isObjectLitKey(fieldNameNode,n.getParent()));
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nameInfo.superclass!=null){
recordReference(nameInfo.name,nameInfo.superclass,RefType.INHERITANCE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
n.setString(sourceName+DISAMBIGUATION_SUFFIX);
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tryDefineLexicalQualifiedNameRef(NodeUtil.getBestLValueName(fieldNameNode),n);
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==fieldName){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
transformationHandler.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope=traverseChildren(fieldNameNode,scope);
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
callNodeToParentMap.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==fieldNameNode){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==n){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
if(n.getJSDocInfo()==null){
info=fieldNameNode.getJSDocInfo();
}
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.EQUALS :

if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==fieldType){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.removeChild(fieldNameNode);
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
refNodes.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
checkedClass.hasInstanceOfReference=true;
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
checkedClass.hasInstanceOfReference=true;
return ;

reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)!=-1){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
n.setString(p.newName);
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
changed=lastGeneration||!p.newName.equals(n.getString());
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
n.setString(p.newName);
changed=lastGeneration||!p.newName.equals(n.getString());

reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(templateTypeName!=null&&fieldName!=null);
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
global.uses.add(n);
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isCall());
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!NodeUtil.isGet(fieldNameNode)){
n.putBooleanProp(Node.FREE_CALL,true);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
abstractMethodAssignmentNodes.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
newName.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
n.setString(a.newName);
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.hasOneChild());
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
defineSlot(fieldNameNode,n,fieldType,lastGeneration);
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
n.add(sourceName);
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
if(templateTypeName==null||!templateTypeName.endsWith(".prototype."+fieldNameNode.getString())){
return ;
}
RecordTypeBuilder builder=new RecordTypeBuilder(this);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}
return builder.build();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
n.removeChild(fieldNameNode);
RecordTypeBuilder builder=new RecordTypeBuilder(this);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}
return builder.build();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
if(templateTypeName==null||!templateTypeName.endsWith(".prototype."+fieldNameNode.getString())){
return ;
}
n.removeChild(fieldNameNode);

RecordTypeBuilder builder=new RecordTypeBuilder(this);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}
return builder.build();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
if(hasType){
ObjectType getJSType(n).dereference()=getJSType(n).dereference();
if(getJSType(n).dereference()!=null){
type=getJSType(n).dereference();
}
}
RecordTypeBuilder builder=new RecordTypeBuilder(this);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}
return builder.build();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
if(getJSType(n).isFunctionPrototypeType()||(getJSType(n).toObjectType()!=null&&getJSType(n).toObjectType().getConstructor()!=null)){
return getJSType(n).toString();
}else if(fieldName!=null){
return fieldName;
}else if(getJSType(n).isFunctionType()){
return "function";
}else {
return getJSType(n).toString();
}
RecordTypeBuilder builder=new RecordTypeBuilder(this);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}
return builder.build();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
if(hasType){
ObjectType getJSType(n).dereference()=getJSType(n).dereference();
if(getJSType(n).dereference()!=null){
type=getJSType(n).dereference();
}
}
if(getJSType(n).isFunctionPrototypeType()||(getJSType(n).toObjectType()!=null&&getJSType(n).toObjectType().getConstructor()!=null)){
return getJSType(n).toString();
}else if(fieldName!=null){
return fieldName;
}else if(getJSType(n).isFunctionType()){
return "function";
}else {
return getJSType(n).toString();
}

RecordTypeBuilder builder=new RecordTypeBuilder(this);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}
return builder.build();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
if(lastGeneration){
if(hasType){
return ;
}
while(fieldTypeNode!=null){
oType=fieldTypeNode.getImplicitPrototype();
}
}
RecordTypeBuilder builder=new RecordTypeBuilder(this);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}
return builder.build();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
RecordTypeBuilder builder=new RecordTypeBuilder(this);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
fieldTypeNode.getParent().replaceChild(typeofNode,IR.string(null));
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}
return builder.build();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
RecordTypeBuilder builder=new RecordTypeBuilder(this);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
reportCodeChange();
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}
return builder.build();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
RecordTypeBuilder builder=new RecordTypeBuilder(this);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
fieldTypeNode.getParent().replaceChild(typeofNode,IR.string(null));
reportCodeChange();

Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}
return builder.build();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
RecordTypeBuilder builder=new RecordTypeBuilder(this);
Preconditions.checkArgument(fieldTypeNode.isTypeOf());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}
return builder.build();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
RecordTypeBuilder builder=new RecordTypeBuilder(this);
Preconditions.checkArgument(fieldTypeNode.getFirstChild()!=null);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}
return builder.build();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
RecordTypeBuilder builder=new RecordTypeBuilder(this);
Preconditions.checkArgument(fieldTypeNode.isTypeOf());
Preconditions.checkArgument(fieldTypeNode.getFirstChild()!=null);

for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}
return builder.build();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
new StringBuilder().append(getLevelName(lastGeneration?CheckLevel.WARNING:CheckLevel.ERROR));
RecordTypeBuilder builder=new RecordTypeBuilder(this);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}
return builder.build();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
new StringBuilder().append(" - ");
RecordTypeBuilder builder=new RecordTypeBuilder(this);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}
return builder.build();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
new StringBuilder().append(error.description);
RecordTypeBuilder builder=new RecordTypeBuilder(this);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}
return builder.build();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
new StringBuilder().append('\n');
RecordTypeBuilder builder=new RecordTypeBuilder(this);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}
return builder.build();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
if(templateTypeName!=null){
new StringBuilder().append(templateTypeName);
new StringBuilder().append('\n');
if(0<=PROPERTY_CHECKING_UNION_SIZE&&PROPERTY_CHECKING_UNION_SIZE<=templateTypeName.length()){
new StringBuilder().append("^\n");
}
}
RecordTypeBuilder builder=new RecordTypeBuilder(this);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}
return builder.build();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
new StringBuilder().append(getLevelName(lastGeneration?CheckLevel.WARNING:CheckLevel.ERROR));
new StringBuilder().append(" - ");
new StringBuilder().append(error.description);
new StringBuilder().append('\n');
if(templateTypeName!=null){
new StringBuilder().append(templateTypeName);
new StringBuilder().append('\n');
if(0<=PROPERTY_CHECKING_UNION_SIZE&&PROPERTY_CHECKING_UNION_SIZE<=templateTypeName.length()){
new StringBuilder().append("^\n");
}
}

RecordTypeBuilder builder=new RecordTypeBuilder(this);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}
return builder.build();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
RecordTypeBuilder builder=new RecordTypeBuilder(this);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
newNode=IR.number(Double.parseDouble(sourceName));
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}
return builder.build();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
RecordTypeBuilder builder=new RecordTypeBuilder(this);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
normalizedNewVal=normalizeNumericString(String.valueOf(Double.parseDouble(sourceName)));
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}
return builder.build();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
RecordTypeBuilder builder=new RecordTypeBuilder(this);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
newNode=IR.number(Double.parseDouble(sourceName));
normalizedNewVal=normalizeNumericString(String.valueOf(Double.parseDouble(sourceName)));

Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}
return builder.build();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
{
if(!normalizeNumericString(sourceName).equals(fieldType)){
return n;
}
RecordTypeBuilder builder=new RecordTypeBuilder(this);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}
return builder.build();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.rhino.jstype.JSTypeRegistry,1620
Find no block!
com.google.javascript.rhino.jstype.JSTypeRegistry,1621
========
for(Node fieldTypeNode=n.getFirstChild();arg!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(arg.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.ELLIPSIS){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=current.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();arg!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(arg.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getFirstChild().getNext().getFirstChild()==null){
return null;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!NodeUtil.isExprAssign(fieldNameNode)){
return null;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.isGetProp()&&lhs.getFirstChild().isThis()){
Node fieldNameNode.getFirstChild().getLastChild()=fieldNameNode.getFirstChild().getLastChild();
if(rhs.isName()&&rhs.getString().equals(n.getFirstChild().getNext().getFirstChild().getString())){
Node fieldTypeNode.getLastChild()=lhs.getLastChild();
return propertyName;
}
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild().getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();c!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=n.getFirstChild().getNext();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=n.getFirstChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=lastNonRemovable;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isSwitch());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild().getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=n.getFirstChild().getNext();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild().getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=n.getFirstChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isSwitch());
for(Node fieldTypeNode=n.getFirstChild().getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isSwitch());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=n.getFirstChild().getNext();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isSwitch());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=n.getFirstChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isSwitch());
for(Node fieldTypeNode=n.getFirstChild().getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=n.getFirstChild().getNext();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isSwitch());
for(Node fieldTypeNode=n.getFirstChild().getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=n.getFirstChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.setDebugInformation(fieldNameNode.getFirstChild(),n.getFirstChild(),fieldName+".prototype");
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(n.getFirstChild(),fieldNameNode);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();name!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()!=Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==null){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=left.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode.getFirstChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=n;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
value=n.getFirstChild().getFirstChild();
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldNameNode.getNext().getType()==Token.GETPROP){
Node fieldNameNode.getNext().getFirstChild()=fieldNameNode.getNext().getFirstChild();
secondArgument.removeChild(newChild);
fieldTypeNode.replaceChild(fieldNameNode,newChild);
n.replaceChild(secondArgument,IR.string(secondArgument.getFirstChild().getString()));
}else if(secondArgumentType==Token.GETELEM){
Node fieldNameNode.getNext().getFirstChild()=secondArgument.getFirstChild();
secondArgument.removeChild(newFirstArgument);
Node fieldNameNode.getNext().getLastChild()=secondArgument.getLastChild();
secondArgument.removeChild(newSecondArgument);
n.replaceChild(firstArgument,newFirstArgument);
n.replaceChild(secondArgument,newSecondArgument);
}else {
n.replaceChild(secondArgument,IR.string(secondArgument.getString()));
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();name!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode.getFirstChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fieldTypeNode.setSourceEncodedPosition(n.getSourcePosition()+FOR_QUOTE);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fieldTypeNode.setLength(current.getString().length());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maybeAddToSymbolTable(fieldNameNode);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
n.removeChild(fieldTypeNode);
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
key=fieldTypeNode.getNext();
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
reporter.reportCodeChange();
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
n.removeChild(fieldTypeNode);
key=fieldTypeNode.getNext();
reporter.reportCodeChange();

Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
n.removeChild(fieldTypeNode);
Node fieldNameNode=fieldTypeNode.getFirstChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild().getNext().getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=fieldNameNode.getFirstChild().getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=fieldNameNode.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope.declareSlot(ConcreteFunctionType.CALL_SLOT_NAME,n);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope.declareSlot(ConcreteFunctionType.THIS_SLOT_NAME,n);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope.declareSlot(ConcreteFunctionType.RETURN_SLOT_NAME,n);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope.initForScopeRoot(n.getLastChild());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=objectLiteral.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();keyNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=IR;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
next=fieldTypeNode.getNext();
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();c!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode.getFirstChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!n.isNumber()){
return false;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!(n.getDouble()>=0)||Double.isInfinite(dindex)){
return false;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getDouble()!=(int)n.getDouble()){
return false;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=arg.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.getNext()!=null){
if(right.getNext()!=null||!NodeUtil.isImmutableValue(right)){
return n;
}
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!fieldNameNode.isArrayLit()||!fieldNameNode.getNext().getString().equals("join")){
return n;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.getNext()!=null&&right.isString()&&",".equals(right.getString())){
n.removeChild(right);
reportCodeChange();
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateNodeType(Token.SWITCH,n);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateMinimumChildCount(n,1);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateExpression(n.getFirstChild());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(PROPERTY_CHECKING_UNION_SIZE>1){
violation("Expected at most 1 \'default\' in switch but was "+defaults,n);
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(NodeUtil.isAssignmentOp(fieldNameNode));
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.isName()){
return new Assign(fieldNameNode,current,hasType);
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();arg!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=arg;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=args.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=arg;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
if(NodeUtil.getFunctionJSDocInfo(n)==null?null:fnInfo.getParameterType(sourceName)!=null&&NodeUtil.getFunctionJSDocInfo(n)==null?null:fnInfo.getParameterType(sourceName).isVarArgs()){
fieldTypeNode.putBooleanProp(Node.IS_VAR_ARGS_PARAM,true);
}
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n!=null&&value.isName()&&value.getString().equals(fieldTypeNode.getString())){
return true;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
state.extractBeforeStatement=fieldTypeNode;
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(NodeUtil.isGet(fieldNameNode));
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
state.extractBeforeStatement=extractExpression(fieldNameNode.getFirstChild(),state.extractBeforeStatement);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(fieldTypeNode.isBlock()||addingRoot.isScript());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(fieldTypeNode.getFirstChild()==null||!addingRoot.getFirstChild().isScript());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
addSimplifiedExpression(n.getFirstChild(),n);
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
addSimplifiedExpression(fieldNameNode,n);
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
addSimplifiedExpression(fieldNameNode.getNext(),n);
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
addSimplifiedExpression(n.getFirstChild(),n);
addSimplifiedExpression(fieldNameNode,n);
addSimplifiedExpression(fieldNameNode.getNext(),n);

Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
addAllChildren(n.getFirstChild());
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
addAllChildren(n.getFirstChild().getNext());
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
addAllChildren(n.getFirstChild());
addAllChildren(n.getFirstChild().getNext());

Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=block.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null&&NodeUtil.isFunctionDeclaration(fieldTypeNode);fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();next!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();key!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope=traverseChildren(fieldNameNode,scope);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(fieldTypeNode);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(fieldTypeNode.getType()==Token.BLOCK);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fieldTypeNode=child.getFirstChild();
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=objLitNode.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();key!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode.getFirstChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=varNode.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();child!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();a!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();nameNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=nameNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();nameNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=nameNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.getFirstChild().getNext().isNumber()){
fieldName=NodeUtil.getStringValue(property);
}else {
propertyName=property.getString();
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.isGetElem()){
fieldNameNode.setQuotedString();
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fieldNameNode.addChildToBack(fieldTypeNode.getNext().detachFromParent());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.detachFromParent();
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new SourcePosition<AliasTransformation>(){
}
.setPositionInformation(n.getLineno(),n.getCharno(),fieldNameNode==null?Integer.MAX_VALUE:next.getLineno(),fieldNameNode==null?Integer.MAX_VALUE:next.getCharno());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NEXT_DELIMITER: for (char delimiter : new char[]{',',' ',';','{','}'}) {
  for (  String cur : strings) {
    if (cur.indexOf(delimiter) != -1) {
      continue NEXT_DELIMITER;
    }
  }
  String template=Joiner.on(delimiter).join(strings);
  Node call=IR.call(IR.getprop(IR.string(template),IR.string("split")),IR.string("" + delimiter));
  call.copyInformationFromForTree(n);
  n.getParent().replaceChild(n,call);
  reportCodeChange();
  return call;
}

for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((fieldTypeNode.getParent()==null)||(fieldTypeNode.getFirstChild()!=n)){
return false;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((fieldTypeNode.getLastChild()==null)||!functionNode.isFunction()){
return false;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!n.isGetProp()){
return false;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
builder.add(sourceName);
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldNameNode.getParent().getFirstChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldNameNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getJSType(fieldNameNode).restrictByNotNullOrUndefined().toMaybeFunctionType()==null){
return ;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.setJSType(getJSType(fieldNameNode).restrictByNotNullOrUndefined().toMaybeFunctionType().getBindReturnType(n.getChildCount()-1));
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=subtree.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldNameNode.getNext();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
child=n.getFirstChild().getNext();
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!n.isName()){
return false;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode.getFirstChild().getNext();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
fieldTypeNode.removeChild(fieldTypeNode.getFirstChild().getNext());
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
n.replaceChild(fieldTypeNode,fieldTypeNode.getFirstChild().getNext());
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
reportCodeChange();
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
fieldTypeNode.removeChild(fieldTypeNode.getFirstChild().getNext());
n.replaceChild(fieldTypeNode,fieldTypeNode.getFirstChild().getNext());
reportCodeChange();

Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
fieldTypeNode.removeChild(fieldTypeNode.getFirstChild().getNext());
Node fieldNameNode=fieldTypeNode.getFirstChild().getNext();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
n.replaceChild(fieldTypeNode,fieldTypeNode.getFirstChild().getNext());
Node fieldNameNode=fieldTypeNode.getFirstChild().getNext();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
fieldTypeNode.removeChild(fieldTypeNode.getFirstChild().getNext());
Node fieldNameNode=fieldTypeNode.getFirstChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
n.replaceChild(fieldTypeNode,fieldTypeNode.getFirstChild().getNext());
Node fieldNameNode=fieldTypeNode.getFirstChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
fieldTypeNode.removeChild(fieldTypeNode.getFirstChild().getNext());
n.replaceChild(fieldTypeNode,fieldTypeNode.getFirstChild().getNext());
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
fieldTypeNode.removeChild(fieldTypeNode.getFirstChild().getNext());
n.replaceChild(fieldTypeNode,fieldTypeNode.getFirstChild().getNext());
Node fieldNameNode=fieldTypeNode.getFirstChild().getNext();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
fieldTypeNode.removeChild(fieldTypeNode.getFirstChild().getNext());
n.replaceChild(fieldTypeNode,fieldTypeNode.getFirstChild().getNext());
Node fieldNameNode=fieldTypeNode.getFirstChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=collapse.endNode;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();n!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode.getNext();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Preconditions.checkState(fieldNameNode.getNext()==fieldTypeNode);
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
collapse.parent.removeChildAfter(fieldNameNode);
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
if(fieldTypeNode.isVar()){
while(fieldTypeNode.hasChildren()){
fieldNameNode.addChildToBack(fieldTypeNode.removeFirstChild());
}
}else {
Node n=fieldTypeNode.getFirstChild();
Node n.getFirstChild()=n.getFirstChild();
Preconditions.checkState(n.getFirstChild().isName());
Node n.getLastChild()=n.getLastChild();
n.getFirstChild().addChildToBack(n.getLastChild().detachFromParent());
fieldNameNode.addChildToBack(n.getFirstChild().detachFromParent());
redeclaration=true;
}
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
n=fieldTypeNode.getNext();
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Preconditions.checkState(fieldNameNode.getNext()==fieldTypeNode);
collapse.parent.removeChildAfter(fieldNameNode);
if(fieldTypeNode.isVar()){
while(fieldTypeNode.hasChildren()){
fieldNameNode.addChildToBack(fieldTypeNode.removeFirstChild());
}
}else {
Node n=fieldTypeNode.getFirstChild();
Node n.getFirstChild()=n.getFirstChild();
Preconditions.checkState(n.getFirstChild().isName());
Node n.getLastChild()=n.getLastChild();
n.getFirstChild().addChildToBack(n.getLastChild().detachFromParent());
fieldNameNode.addChildToBack(n.getFirstChild().detachFromParent());
redeclaration=true;
}
n=fieldTypeNode.getNext();

Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();n!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode.getNext();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();n!=null;fieldTypeNode=fieldTypeNode.getNext()){
n=fieldTypeNode.getNext();
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
n=fieldTypeNode.getNext();
Node fieldNameNode=fieldTypeNode.getNext();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();n!=null;fieldTypeNode=fieldTypeNode.getNext()){
n=fieldTypeNode.getNext();
Node fieldNameNode=fieldTypeNode.getNext();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
createEdge(fieldTypeNode.getFirstChild(),Branch.UNCOND,fieldTypeNode);
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
createEdge(fieldTypeNode,Branch.ON_TRUE,computeFallThrough(fieldType));
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
createEdge(fieldTypeNode,Branch.ON_FALSE,computeFollowNode(forNode,this));
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
createEdge(fieldTypeNode.getFirstChild().getNext().getNext(),Branch.UNCOND,fieldTypeNode);
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
connectToPossibleExceptionHandler(fieldTypeNode.getFirstChild(),init);
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
connectToPossibleExceptionHandler(fieldTypeNode,fieldTypeNode.getFirstChild().getNext());
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
connectToPossibleExceptionHandler(fieldTypeNode.getFirstChild().getNext().getNext(),iter);
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
createEdge(fieldTypeNode.getFirstChild(),Branch.UNCOND,fieldTypeNode);
createEdge(fieldTypeNode,Branch.ON_TRUE,computeFallThrough(fieldType));
createEdge(fieldTypeNode,Branch.ON_FALSE,computeFollowNode(forNode,this));
createEdge(fieldTypeNode.getFirstChild().getNext().getNext(),Branch.UNCOND,fieldTypeNode);
connectToPossibleExceptionHandler(fieldTypeNode.getFirstChild(),init);
connectToPossibleExceptionHandler(fieldTypeNode,fieldTypeNode.getFirstChild().getNext());
connectToPossibleExceptionHandler(fieldTypeNode.getFirstChild().getNext().getNext(),iter);

Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
connectToPossibleExceptionHandler(fieldTypeNode,fieldNameNode);
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
createEdge(fieldTypeNode,Branch.ON_TRUE,computeFallThrough(fieldType));
createEdge(fieldTypeNode,Branch.ON_FALSE,computeFollowNode(forNode,this));
connectToPossibleExceptionHandler(fieldTypeNode,fieldNameNode);

Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();n!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=n;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
getParameterSlot(PROPERTY_CHECKING_UNION_SIZE).getType();
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();n!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()!=Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();n!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==null){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=n;
boolean hasType=false;
if(fieldTypeNode.getType()!=Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=n;
boolean hasType=false;
if(fieldTypeNode.getType()==null){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()!=null){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();n!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=n;
boolean hasType=false;
if(fieldTypeNode.getType()!=Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();n!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=n;
boolean hasType=false;
if(fieldTypeNode.getType()==null){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();n!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()!=null){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=n;
boolean hasType=false;
if(fieldTypeNode.getType()!=null){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();n!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=n;
boolean hasType=false;
if(fieldTypeNode.getType()!=null){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(NodeUtil.isObjectLitKey(n,n.getParent())||hasType);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fieldNameNode=tryMinimizeCondition(trueNode);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldNameNode.getFirstChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=n.getLastChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Preconditions.checkState(fieldNameNode.hasOneChild());
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
tryMinimizeExits(fieldTypeNode.getLastChild(),PROPERTY_CHECKING_UNION_SIZE,sourceName);
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Preconditions.checkState(fieldNameNode.hasOneChild());
tryMinimizeExits(fieldTypeNode.getLastChild(),PROPERTY_CHECKING_UNION_SIZE,sourceName);

Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
tryMinimizeExits(n.getLastChild(),PROPERTY_CHECKING_UNION_SIZE,sourceName);
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=n.getLastChild().detachFromParent();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
fieldTypeNode.addChildrenToBack(fieldNameNode);
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
fieldTypeNode.addChildrenToBack(fieldNameNode);
reportCodeChange();

Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
reportCodeChange();
Node fieldNameNode=n.getLastChild().detachFromParent();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
reportCodeChange();
Node fieldNameNode=n.getLastChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
reportCodeChange();
Node fieldNameNode=n;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n!=null&&NodeUtil.isObjectLitKey(fieldNameNode,parent)){
return true;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isName());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(reporter.get(sourceName)==null){
return ;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.isNew()){
Node fieldNameNode=parent.getFirstChild();
if(target.isName()&&target.getString().equals(ObjectPropertyStringPreprocess.EXTERN_OBJECT_PROPERTY_STRING)){
reporter.get(sourceName).setInline(false);
}
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode.isAssign()&&parent.getFirstChild()==n){
reporter.get(sourceName).setInline(false);
}else {
fs.setRemove(false);
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!n.getJSDocInfo().isConsistentIdGenerator()&&!doc.isIdGenerator()){
return ;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isAssign()){
fieldName=n.getFirstChild().getQualifiedName();
}else if(n.isVar()){
name=n.getFirstChild().getString();
}else if(n.isFunction()){
name=n.getFirstChild().getString();
if(name.isEmpty()){
return ;
}
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TWEAK_FUNCTIONS_MAP.get(fieldName)==null){
return ;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new JsonML(TagType.RegExpExpr).setAttribute(TagAttr.BODY,fieldNameNode.getString());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fieldNameNode=child.getNext();
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new JsonML(TagType.RegExpExpr).setAttribute(TagAttr.FLAGS,fieldType);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
next=fieldTypeNode.getNext();
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.hasOneChild()){
Node fieldNameNode=n.removeFirstChild();
Node n.getParent()=n.getParent();
Node IR.exprResult(fieldNameNode).srcref(n)=IR.exprResult(condition).srcref(n);
parent.replaceChild(n,replacement);
reportCodeChange();
return replacement;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild().getFirstChild();c!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isSwitch());
for(Node fieldTypeNode=n.getFirstChild();c!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isSwitch());
for(Node fieldTypeNode=n.getFirstChild().getFirstChild();c!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode.removeFirstChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
n.removeChild(n.getLastChild());
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
n.removeChild(n.getLastChild());
reportCodeChange();

Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
n.removeChild(n.getLastChild());
Node fieldNameNode=fieldTypeNode.removeFirstChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
reportCodeChange();
Node fieldNameNode=fieldTypeNode.removeFirstChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
n.removeChild(n.getLastChild());
reportCodeChange();
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
n.removeChild(n.getLastChild());
reportCodeChange();
Node fieldNameNode=fieldTypeNode.removeFirstChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=val.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==fieldTypeNode.getFirstChild()){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();child!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode.getFirstChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
processNode(fieldTypeNode,new JsonML(TagType.TryStmt));
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fieldTypeNode=child.getNext();
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode!=null){
processNode(child,new JsonML(TagType.TryStmt));
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope=traverse(n.getFirstChild(),scope);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.setJSType(fieldType);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!fieldNameNode.isName()){
return ;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();propNameNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(scope.getRootNode().getFirstChild().getNext().isParamList());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
builder.append("  ");
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
builder.append(Strings.repeat(" ",PROPERTY_CHECKING_UNION_SIZE-Integer.toString(PROPERTY_CHECKING_UNION_SIZE).length()));
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
builder.append(PROPERTY_CHECKING_UNION_SIZE);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
builder.append("| ");
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(PROPERTY_CHECKING_UNION_SIZE<0){
builder.append(fieldName);
PROPERTY_CHECKING_UNION_SIZE=-1;
}else {
builder.append(line);
builder.append('\n');
start=end+1;
end=templateTypeName.indexOf('\n',start);
PROPERTY_CHECKING_UNION_SIZE++;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope=traverseChildren(n,scope);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isNew()||n.isCall());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
fieldTypeNode.removeChild(fieldNameNode);
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
fieldNameNode.addChildToFront(fieldTypeNode.getFirstChild().getNext());
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
IR.var(fieldNameNode).copyInformationFrom(n);
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
n.getParent().replaceChild(candidateDefinition,IR.var(fieldNameNode));
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
fieldNameNode.setJSDocInfo(fieldTypeNode.getJSDocInfo());
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
replacementNode=IR.var(fieldNameNode);
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
fieldTypeNode.removeChild(fieldNameNode);
fieldTypeNode.removeChild(fieldTypeNode.getFirstChild().getNext());
fieldNameNode.addChildToFront(fieldTypeNode.getFirstChild().getNext());
IR.var(fieldNameNode).copyInformationFrom(n);
n.getParent().replaceChild(candidateDefinition,IR.var(fieldNameNode));
fieldNameNode.setJSDocInfo(fieldTypeNode.getJSDocInfo());
reporter.reportCodeChange();
replacementNode=IR.var(fieldNameNode);

Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
fieldTypeNode.removeChild(fieldTypeNode.getFirstChild().getNext());
Node fieldNameNode=fieldNameNode.getNext();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
reporter.reportCodeChange();
Node fieldNameNode=fieldNameNode.getNext();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
fieldTypeNode.removeChild(fieldTypeNode.getFirstChild().getNext());
Node fieldNameNode=fieldNameNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
reporter.reportCodeChange();
Node fieldNameNode=fieldNameNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
fieldTypeNode.removeChild(fieldTypeNode.getFirstChild().getNext());
reporter.reportCodeChange();
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
fieldTypeNode.removeChild(fieldTypeNode.getFirstChild().getNext());
reporter.reportCodeChange();
Node fieldNameNode=fieldNameNode.getNext();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
fieldTypeNode.removeChild(fieldTypeNode.getFirstChild().getNext());
reporter.reportCodeChange();
Node fieldNameNode=fieldNameNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=assignNode.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
swtich (fieldNameNode.getType()){
case Token.ASSIGN :
break;

case Token.GETPROP :
break;

}
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=map.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
tryMinimizeExits(fieldNameNode,PROPERTY_CHECKING_UNION_SIZE,sourceName);
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isHook(),"Expected: HOOK, Got: %s",Token.name(node.getType()));
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=typeArray.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateNodeType(Token.TRY,n);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateMinimumChildCount(n,2);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateMaximumChildCount(n,3);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateBlock(n.getFirstChild());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateNodeType(Token.BLOCK,fieldNameNode);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateMaximumChildCount(fieldNameNode,1);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getChildCount()==3){
validateBlock(n.getLastChild());
hasType=true;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!hasType){
violation("Missing catch or finally for try statement.",n);
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
defineSlot(n,fieldTypeNode,fieldType);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fieldNameNode=wrapNode(Token.BANG,typeNode);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
c=n.getFirstChild().getNext();
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isCall());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldName==null){
return ;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!"goog.exportSymbol".equals(fieldName)){
return ;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!fieldNameNode.isString()){
return ;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sourceName==null||fieldNameNode.getNext().getNext()!=null){
return ;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isString());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(templateTypeName==null){
src=MISSING_SOURCE;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=child;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=node.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
scanVars(fieldNameNode,n);
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
scanVars(fieldNameNode,n);
child=n.getFirstChild().getNext();

Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
child=n.getFirstChild().getNext();
Node fieldNameNode=fieldNameNode.getNext();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
child=n.getFirstChild().getNext();
Node fieldNameNode=fieldNameNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isGetProp());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fieldType=fieldType.autoboxesTo()!=null?boxedType:instanceType;
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(fieldType.toObjectType()!=null);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.getChildCount()==3);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isFunction());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fieldTypeNode=n;
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
pushScope(n);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(hasType){
traverseBranch(n.getFirstChild(),n);
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
traverseBranch(fieldNameNode,n);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.getNext()==null&&body.isBlock(),body);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
traverseBranch(n,n);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
popScope();
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.getChildCount()==3);
Preconditions.checkState(n.isFunction());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=n.getFirstChild().getNext().getNext();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
fieldNameNode.putBooleanProp(Node.FREE_CALL,true);
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
n.getFirstChild().getNext().getNext().addChildToFront(IR.exprResult(fieldNameNode));
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
fieldNameNode.putBooleanProp(Node.FREE_CALL,true);
n.getFirstChild().getNext().getNext().addChildToFront(IR.exprResult(fieldNameNode));
reporter.reportCodeChange();

Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
reporter.reportCodeChange();
Node fieldNameNode=n.getFirstChild().getNext().getNext();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
reporter.reportCodeChange();
Node fieldNameNode=n.getFirstChild().getNext();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
reporter.reportCodeChange();
Node fieldNameNode=n.getFirstChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
reporter.reportCodeChange();
Node fieldNameNode=n;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fieldNameNode=tryMinimizeCondition(left);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fieldTypeNode=tryMinimizeCondition(right);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldTypeNode!=null){
if(arg2.isNumber()){
PROPERTY_CHECKING_UNION_SIZE=(int)arg2.getDouble();
}else {
return n;
}
if(arg2.getNext()!=null){
return n;
}
}else {
length=n.getString().length()-PROPERTY_CHECKING_UNION_SIZE;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isCall());
Preconditions.checkArgument(n.isString());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldTypeNode!=null){
if(arg2.isNumber()){
PROPERTY_CHECKING_UNION_SIZE=(int)arg2.getDouble();
}else {
return n;
}
if(arg2.getNext()!=null){
return n;
}
}else {
end=n.getString().length();
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fieldTypeNode.removeChild(fieldTypeNode.getLastChild());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fieldNameNode.addChildToFront(fieldTypeNode.getLastChild());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fieldTypeNode.getParent().getParent().replaceChild(fieldTypeNode.getParent(),IR.var(fieldNameNode));
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.addChildToFront(IR.name(sourceName).copyInformationFrom(fieldTypeNode.getLastChild()));
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
replaceReferencesToThis(fieldTypeNode.getLastChild().getLastChild(),sourceName);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fixFunctionType(fieldTypeNode.getLastChild());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldNameNode.getLastChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(PROPERTY_CHECKING_UNION_SIZE==0){
return fieldName;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fieldTypeNode.addChildToBack(fieldNameNode);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isFor());
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!fieldTypeNode.isEmpty()&&!init.isVar()){
init=trySimplifyUnusedResult(init,false);
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!fieldType.isEmpty()){
increment=trySimplifyUnusedResult(increment,false);
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!n.getFirstChild().isEmpty()){
return n;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.getImpureBooleanValue(fieldNameNode)!=TernaryValue.FALSE){
return n;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(n);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!mayHaveSideEffects(fieldNameNode)){
NodeUtil.removeChild(n.getParent(),n);
}else {
Node IR.exprResult(fieldNameNode.detachFromParent()).copyInformationFrom(cond)=IR.exprResult(cond.detachFromParent()).copyInformationFrom(cond);
n.getParent().replaceChild(n,statement);
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)!=null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==n.getFirstChild()){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(getArrayElementStringValue(fieldNameNode)==null){
return null;
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
new StringBuilder().append(getArrayElementStringValue(fieldNameNode));
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
PROPERTY_CHECKING_UNION_SIZE++;
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
if(getArrayElementStringValue(fieldNameNode)==null){
return null;
}
new StringBuilder().append(getArrayElementStringValue(fieldNameNode));
PROPERTY_CHECKING_UNION_SIZE++;

Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=paramsParent.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();currentParam!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.getQualifiedName()!=null&&fieldName!=null);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if("prototype".equals(sourceName)){
Var scope.getVar(n.getQualifiedName())=scope.getVar(n.getQualifiedName());
if(qVar!=null){
ObjectType ObjectType.cast(scope.getVar(n.getQualifiedName()).getType())=ObjectType.cast(qVar.getType());
if(qVarType!=null&&fieldTypeNode!=null&&rhsValue.isObjectLit()){
builder.resetImplicitPrototype(rhsValue.getJSType(),qVarType.getImplicitPrototype());
}else if(!qVar.isTypeInferred()){
return ;
}
if(qVar.getScope()==scope){
scope.undeclare(qVar);
}
}
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
if(PrototypeMemberDeclaration.extractDeclaration(fieldNameNode)==null){
continue;
}
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
if(new ExtractionInstance(PrototypeMemberDeclaration.extractDeclaration(fieldNameNode),n).isFavorable()){
totalDelta+=instance.delta;
}
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
if(PrototypeMemberDeclaration.extractDeclaration(fieldNameNode)==null){
continue;
}
if(new ExtractionInstance(PrototypeMemberDeclaration.extractDeclaration(fieldNameNode),n).isFavorable()){
totalDelta+=instance.delta;
}

Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
next=fieldNameNode.getNext();
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
c=trySimplifyUnusedResult(fieldNameNode);
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
next=fieldNameNode.getNext();
c=trySimplifyUnusedResult(fieldNameNode);

if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(PROPERTY_CHECKING_UNION_SIZE<0||fieldName.length()<=index){
return n;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fieldNameNode.replaceChild(n,IR.string(fieldName.substring(PROPERTY_CHECKING_UNION_SIZE,index+1)));
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
symbol=fieldType==null?null:getSymbolForTypeHelper(fieldType,true);
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldName.length()==fieldName.length()){
return CaseFormat.UPPER_UNDERSCORE.to(CaseFormat.LOWER_CAMEL,input);
}else {
return CaseFormat.UPPER_UNDERSCORE.to(CaseFormat.LOWER_CAMEL,input.substring(0,suffixStart))+input.substring(suffixStart);
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(PROPERTY_CHECKING_UNION_SIZE>=fieldName.length()-1){
return fieldName;
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
addAllChildren(fieldNameNode);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(hasType){
addSimplifiedChildren(fieldNameNode.getNext().getNext());
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
PROPERTY_CHECKING_UNION_SIZE++;
Node fieldNameNode=n.getFirstChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
PROPERTY_CHECKING_UNION_SIZE++;
Node fieldNameNode=n;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=parameters.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();paramNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fieldType=safeResolve(returnType,reporter,scope);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope=tightenTypesAfterAssertions(scope,n);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=exportedObjectLit.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.isVarDeclaration(n)&&n.hasChildren()){
return new VarDefinition(n,lastGeneration);
}else if(fieldTypeNode.isFunction()&&parent.getFirstChild()==n){
if(!NodeUtil.isFunctionExpression(parent)){
return new NamedFunctionDefinition(parent,isExtern);
}else if(!n.getString().equals("")){
return new FunctionExpressionDefinition(parent,isExtern);
}
}else if(parent.isAssign()&&parent.getFirstChild()==n){
return new AssignmentDefinition(parent,isExtern);
}else if(NodeUtil.isObjectLitKey(n,parent)){
return new ObjectLiteralPropertyDefinition(parent,n,n.getFirstChild(),isExtern);
}else if(parent.isParamList()){
Node fieldNameNode=parent.getParent();
return new FunctionArgumentDefinition(function,n,isExtern);
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldNameNode!=null){
if(!objLitNode.isObjectLit()){
throw new MalformedException("OBJLIT node expected",objLitNode);
}
for(Node fieldTypeNode=objLitNode.getFirstChild();aNode!=null;aNode=aNode.getNext()){
if(!aNode.isString()){
throw new MalformedException("STRING node expected as OBJLIT key",aNode);
}
String sourceName=aNode.getString();
if(!isLowerCamelCaseWithNumericSuffixes(phName)){
throw new MalformedException("Placeholder name not in lowerCamelCase: "+phName,aNode);
}
if(Sets.newHashSet().contains(phName)){
throw new MalformedException("Duplicate placeholder name: "+phName,aNode);
}
phNames.add(phName);
}
}
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fieldTypeNode=trySimplifyUnusedResult(left);
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=objLit.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();keyNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode.getFirstChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=paramNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
if(fieldNameNode.getJSType()==null||fieldNameNode.getJSType().isUnknownType()){
return true;
}
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
Node fieldNameNode=fieldTypeNode.getLastChild();
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
fieldTypeNode.removeChild(fieldTypeNode.getLastChild());
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
n.replaceChild(fieldTypeNode,fieldTypeNode.getLastChild());
Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(Node fieldTypeNode=n.getFirstChild();fieldTypeNode!=null;fieldTypeNode=fieldTypeNode.getNext()){
fieldTypeNode.removeChild(fieldTypeNode.getLastChild());
n.replaceChild(fieldTypeNode,fieldTypeNode.getLastChild());

Node fieldNameNode=fieldTypeNode;
boolean hasType=false;
if(fieldTypeNode.getType()==Token.COLON){
fieldNameNode=fieldTypeNode.getFirstChild();
hasType=true;
}
String fieldName=fieldNameNode.getString();
if(fieldName.startsWith("\'")||fieldName.startsWith("\"")){
fieldName=fieldName.substring(1,fieldName.length()-1);
}
JSType fieldType=null;
if(hasType){
fieldType=createFromTypeNodesInternal(fieldTypeNode.getLastChild(),sourceName,scope);
}else {
fieldType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(builder.addProperty(fieldName,fieldType,fieldNameNode)==null){
reporter.warning("Duplicate record field "+fieldName,sourceName,n.getLineno(),fieldNameNode.getCharno());
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testIssue669
COUNT THESE===> Subject [_name=closure, _id=35, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testIssue669
TESTING : com.google.javascript.jscomp.TypeCheckTest::testIssue669
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_35_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testIssue669
  - com.google.javascript.jscomp.TypeCheckTest::testIssue669
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Timeout!
