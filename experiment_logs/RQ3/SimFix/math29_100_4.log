java version "1.7.0_231"
OpenJDK Runtime Environment (rhel-2.6.19.1.el7_6-x86_64 u231-b01)
OpenJDK 64-Bit Server VM (build 24.231-b01, mixed mode)
Check out 7bbddc22 to /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/ OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff 7bbddc22:350b2b1a..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Math-29b........................................ OK
Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK
Failing tests: 4
  - org.apache.commons.math3.genetics.FixedElapsedTimeTest::testIsSatisfied
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4
PURIFY IS TRUE
=================================================
Project : math_29	start : 19/10/28 16:20

Variable type inconsistancy of 'start' in method 'getSegments' with types : Vector3D and Vector2D
Variable type inconsistancy of 'end' in method 'getSegments' with types : Vector3D and Vector2D
Field type inconsistancy 'start' with types : Vector3D and Vector2D
Field type inconsistancy 'end' with types : Vector3D and Vector2D
readFailedTest: path is /mnt/nfs/work1/brun/mmotwani/SimFix/d4j-info/failed_tests/math/29.txtTESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
Running ant (compile.tests)................................................ 
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Running ant (compile.tests)................................................ 
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Running ant (compile.tests)................................................ 
IN COMMENT TEST CASE: org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
IN COMMENT TEST CASE: org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
IN COMMENT TEST CASE: org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
IN COMMENT TEST CASE: /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy/src/test/java/org/apache/commons/math3/linear/SparseRealVectorTest.java

# FAILING TESTS: 1
TIMEOUT : 6000000
===========
locations= [<org.apache.commons.math3.linear.OpenMapRealVector,361>, <org.apache.commons.math3.linear.OpenMapRealVector,362>, <org.apache.commons.math3.linear.OpenMapRealVector,363>, <org.apache.commons.math3.linear.OpenMapRealVector,364>, <org.apache.commons.math3.linear.OpenMapRealVector,365>, <org.apache.commons.math3.linear.OpenMapRealVector,374>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,281>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,282>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,283>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,285>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,292>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,277>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,278>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,279>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,291>, <org.apache.commons.math3.linear.OpenMapRealVector,360>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,247>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,323>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,421>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,434>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,435>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,436>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,437>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,439>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,440>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,441>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,442>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,443>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,444>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,445>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,446>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,447>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,448>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,449>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,450>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,454>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,455>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,456>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,457>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,459>, <org.apache.commons.math3.linear.OpenMapRealVector,592>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,351>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,352>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,353>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,354>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,391>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,392>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,393>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,394>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,395>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,396>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,397>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,210>, <org.apache.commons.math3.linear.RealVector,180>, <org.apache.commons.math3.linear.OpenMapRealVector,591>, <org.apache.commons.math3.linear.RealVector,176>, <org.apache.commons.math3.linear.RealVector,177>, <org.apache.commons.math3.linear.OpenMapRealVector,179>, <org.apache.commons.math3.linear.OpenMapRealVector,180>, <org.apache.commons.math3.linear.OpenMapRealVector,181>, <org.apache.commons.math3.linear.OpenMapRealVector,182>, <org.apache.commons.math3.linear.OpenMapRealVector,183>, <org.apache.commons.math3.linear.OpenMapRealVector,208>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,207>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,208>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,209>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,130>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,131>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,132>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,133>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,134>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,135>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,136>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,137>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,138>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,139>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,140>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,141>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,142>, <org.apache.commons.math3.linear.OpenMapRealVector,343>, <org.apache.commons.math3.linear.OpenMapRealVector,349>, <org.apache.commons.math3.linear.OpenMapRealVector,350>, <org.apache.commons.math3.linear.OpenMapRealVector,351>, <org.apache.commons.math3.linear.OpenMapRealVector,352>, <org.apache.commons.math3.linear.OpenMapRealVector,354>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,526>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,529>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,532>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,183>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,184>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,274>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,332>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,411>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,412>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,413>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,273>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,238>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,495>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,498>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,501>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,503>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,506>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,508>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,515>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,543>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,546>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,549>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,560>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,565>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,569>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,577>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,572>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,573>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,574>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,579>, <org.apache.commons.math3.linear.OpenMapRealVector,449>, <org.apache.commons.math3.linear.OpenMapRealVector,589>, <org.apache.commons.math3.linear.OpenMapRealVector,590>, <org.apache.commons.math3.linear.OpenMapRealVector,594>, <org.apache.commons.math3.linear.OpenMapRealVector,342>, <org.apache.commons.math3.linear.OpenMapRealVector,588>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,177>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,178>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,179>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,382>, <org.apache.commons.math3.linear.RealVector,194>, <org.apache.commons.math3.linear.OpenMapRealVector,448>, <org.apache.commons.math3.linear.OpenMapRealVector,140>, <org.apache.commons.math3.linear.RealVector,189>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,256>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,269>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,270>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,271>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,272>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,407>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,408>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,409>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,410>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,415>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,416>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,417>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,418>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,419>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,420>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,423>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,425>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,466>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,475>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,476>, <org.apache.commons.math3.linear.OpenMapRealVector,123>, <org.apache.commons.math3.linear.OpenMapRealVector,124>, <org.apache.commons.math3.linear.OpenMapRealVector,133>, <org.apache.commons.math3.linear.OpenMapRealVector,134>, <org.apache.commons.math3.linear.OpenMapRealVector,135>, <org.apache.commons.math3.linear.OpenMapRealVector,136>, <org.apache.commons.math3.linear.OpenMapRealVector,137>, <org.apache.commons.math3.linear.OpenMapRealVector,138>, <org.apache.commons.math3.linear.OpenMapRealVector,139>, <org.apache.commons.math3.linear.OpenMapRealVector,143>, <org.apache.commons.math3.linear.OpenMapRealVector,401>, <org.apache.commons.math3.linear.RealVector,59>, <org.apache.commons.math3.linear.RealVector,1049>, <org.apache.commons.math3.linear.SparseRealVector,25>, <org.apache.commons.math3.linear.OpenMapRealVector,220>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,100>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,101>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,117>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,118>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,119>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,120>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,121>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,122>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,123>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,124>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,150>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,153>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,154>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,155>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,156>, <org.apache.commons.math3.util.FastMath,113>, <org.apache.commons.math3.util.FastMath,126>, <org.apache.commons.math3.util.FastMath,139>, <org.apache.commons.math3.util.FastMath,158>, <org.apache.commons.math3.util.FastMath,177>, <org.apache.commons.math3.util.FastMath,196>, <org.apache.commons.math3.util.FastMath,216>, <org.apache.commons.math3.util.FastMath,235>, <org.apache.commons.math3.util.FastMath,254>, <org.apache.commons.math3.util.FastMath,275>, <org.apache.commons.math3.util.FastMath,283>, <org.apache.commons.math3.util.FastMath,286>, <org.apache.commons.math3.util.FastMath,3020>, <org.apache.commons.math3.util.FastMath,3334>, <org.apache.commons.math3.util.FastMath,3338>, <org.apache.commons.math3.util.FastMath,3342>, <org.apache.commons.math3.util.FastMath,3343>, <org.apache.commons.math3.util.FastMath,3347>, <org.apache.commons.math3.util.FastMath,3351>, <org.apache.commons.math3.util.FastMath,3361>, <org.apache.commons.math3.util.FastMath,3365>]
======================org.apache.commons.math3.linear.OpenMapRealVector,361
UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

========
while(iter.hasNext()){
if(Double.doubleToLongBits(iter.value())!=Double.doubleToLongBits(getEntry(iter.key()))){
return false;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
entries.put(iter.key(),iter.value()/DEFAULT_ZERO_TOLERANCE);
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplySameType
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
Running ant (compile.tests)................................................ 
========
while(iter.hasNext()){
d+=iter.value()*entries.get(iter.key());
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(Double.isNaN(iter.value())){
return true;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(!entries.containsKey(iter.key())){
if(iter.value()>DEFAULT_ZERO_TOLERANCE){
max=iter.value();
}
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
max+=FastMath.abs(iter.value()-res.getEntry(iter.key()));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iter=res.getEntries().iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplySameType
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
Running ant (compile.tests)................................................ 
========
while(iter.hasNext()){
if(Double.doubleToLongBits(res.getEntry(iter.key()))!=Double.doubleToLongBits(iter.value())){
return false;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(!entries.containsKey(iter.key())){
 final double iter.value()=iter.value();
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(FastMath.abs(iter.value()-res.getEntry(iter.key()))>DEFAULT_ZERO_TOLERANCE){
max=FastMath.abs(iter.value()-res.getEntry(iter.key()));
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
delta=iter.value()-res.getEntry(iter.key());
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(!entries.containsKey(iter.key())){
double FastMath.abs(iter.value())=FastMath.abs(iter.value());
max+=FastMath.abs(FastMath.abs(iter.value()));
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
res.setEntry(iter.key(),iter.value().divide(v.getEntry(iter.key())));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
res.setEntry(iter.key(),iter.value().multiply(v.getEntry(iter.key())));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(Double.isNaN(iter.value())){
return false;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(Double.isInfinite(iter.value())){
infiniteFound=true;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(Double.isNaN(iter.value())){
return false;
}
if(Double.isInfinite(iter.value())){
infiniteFound=true;
}

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
temp=Double.doubleToLongBits(iter.value());
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
res.setEntry(iter.key()+virtualSize,iter.value());
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplySameType
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
Running ant (compile.tests)................................................ 
========
while(iter.hasNext()){
virtualSize++;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(iter.key()>=virtualSize&&iter.key()<virtualSize){
res.setEntry(iter.key()-virtualSize,iter.value());
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplySameType
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
Running ant (compile.tests)................................................ 
========
while(iter.hasNext()){
if(!iter.value().equals(getEntry(iter.key()))){
return false;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
res=res.add(v.getEntry(iter.key()).multiply(iter.value()));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(entries.containsKey(iter.key())){
res.setEntry(iter.key(),entries.get(key).add(iter.value()));
}else {
res.setEntry(iter.key(),iter.value());
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(entries.containsKey(iter.key())){
res.setEntry(iter.key(),entries.get(key).subtract(iter.value()));
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
res[iter.key()]=iter.value();
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
iubd=virtualSize+1;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
iubd=-virtualSize-1;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplySameType
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
Running ant (compile.tests)................................................ 
========
checkIndex(virtualSize);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplySameType
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
Running ant (compile.tests)................................................ 
========
checkIndex(virtualSize+v.getDimension()-1);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplySameType
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
Running ant (compile.tests)................................................ 
========
checkIndex(virtualSize);
checkIndex(virtualSize+v.getDimension()-1);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplySameType
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
Running ant (compile.tests)................................................ 
========
DEFAULT_ZERO_TOLERANCE=DEFAULT_ZERO_TOLERANCE-DEFAULT_ZERO_TOLERANCE*d1;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
v.setEntry(virtualSize,v.getEntry(virtualSize)/DEFAULT_ZERO_TOLERANCE);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplySameType
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
DEFAULT_ZERO_TOLERANCE=DEFAULT_ZERO_TOLERANCE;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
b=FastMath.min(DEFAULT_ZERO_TOLERANCE+1.0,DEFAULT_ZERO_TOLERANCE);
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
++virtualSize;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
b=FastMath.min(DEFAULT_ZERO_TOLERANCE+1.0,DEFAULT_ZERO_TOLERANCE);
++virtualSize;

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
minRatio=DEFAULT_ZERO_TOLERANCE/DEFAULT_ZERO_TOLERANCE;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
minRatioPositions=new ArrayList<Integer>();
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
minRatio=DEFAULT_ZERO_TOLERANCE/DEFAULT_ZERO_TOLERANCE;
minRatioPositions=new ArrayList<Integer>();

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplySameType
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
current.setIndex(current.getIndex());
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
advance(current);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
virtualSize--;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++virtualSize;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
iter.advance();
++virtualSize;
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
state=100;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
++virtualSize;
state=100;

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
virtualSize<=virtualSize-virtualSize?iter.advance():null;
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
virtualSize=-1;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(virtualSize>=polynomials.length){
i--;
}
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
state=100;
iter.advance();
++virtualSize;
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
++virtualSize;
state=100;

iter.advance();
++virtualSize;
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
state=100;
++virtualSize;
state=100;

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
state=100;
++virtualSize;
state=100;

iter.advance();
++virtualSize;
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
bp[i][k]=0;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_ZERO_TOLERANCE=Math.max(biglsq,DEFAULT_ZERO_TOLERANCE*(DEFAULT_ZERO_TOLERANCE*d5));
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super.addValue(DEFAULT_ZERO_TOLERANCE);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
new ArrayList<BigFraction>().add(BigFraction.ONE);
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
new ArrayList<BigFraction>().add(new BigFraction(v-virtualSize,2));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
new ArrayList<BigFraction>().add(new BigFraction(2+v,2));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
new ArrayList<BigFraction>().add(BigFraction.ONE);
new ArrayList<BigFraction>().add(new BigFraction(v-virtualSize,2));
new ArrayList<BigFraction>().add(new BigFraction(2+v,2));

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,virtualSize);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,virtualSize);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,virtualSize);
MatrixUtils.checkColumnIndex(this,virtualSize);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(vData.length);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
virtualSize++;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(shouldContract()){
contract();
}
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
totalWeight+=DEFAULT_ZERO_TOLERANCE;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
denominator=BigInteger.ONE;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
virtualSize+=1;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.v=new ArrayRealVector(new double[lhsCoefficients.length],false);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.DEFAULT_ZERO_TOLERANCE=DEFAULT_ZERO_TOLERANCE-DEFAULT_ZERO_TOLERANCE;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(virtualSize+1>virtualSize){
numElements=index+1;
}
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((virtualSize+virtualSize)>=internalArray.length){
expandTo(startIndex+(index+1));
}
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(FastMath.abs(iter.value()-v.getEntry(iter.key()))>DEFAULT_ZERO_TOLERANCE){
max=FastMath.abs(iter.value()-v.getEntry(iter.key()));
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iter=v.getEntries().iterator();
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iter=res.getEntries().iterator();
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
max+=FastMath.abs(iter.value());
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.size()<v.entries.size()?entries.iterator():v.entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
d+=iter.value()*entries.size()<v.entries.size()?v.entries:entries.get(iter.key());
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(!entries.containsKey(iter.key())){
 final double iter.value()=iter.value();
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(Double.isNaN(iter.value())){
return true;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
res[iter.key()]=iter.value();
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
res.setEntry(iter.key(),iter.value().divide(v.getEntry(iter.key())));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
res.setEntry(iter.key(),iter.value().multiply(v.getEntry(iter.key())));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(!iter.value().equals(iter.value())){
return false;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(Double.isNaN(iter.value())){
return false;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(Double.isInfinite(iter.value())){
infiniteFound=true;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(Double.isNaN(iter.value())){
return false;
}
if(Double.isInfinite(iter.value())){
infiniteFound=true;
}

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
res=res.add(v.getEntry(iter.key()).multiply(iter.value()));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(entries.containsKey(iter.key())){
res.setEntry(iter.key(),entries.get(key).add(iter.value()));
}else {
res.setEntry(iter.key(),iter.value());
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(entries.containsKey(iter.key())){
res.setEntry(iter.key(),entries.get(key).subtract(iter.value()));
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
res.setEntry(iter.key()+virtualSize,iter.value());
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
temp=Double.doubleToLongBits(iter.value());
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
virtualSize=virtualSize*result+(int)(serialVersionUID^(temp>>>32));
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
virtualSize=virtualSize*result+virtualSize;
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(iter.key()>=virtualSize&&iter.key()<virtualSize){
res.setEntry(iter.key()-virtualSize,iter.value());
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_ZERO_TOLERANCE=DEFAULT_ZERO_TOLERANCE*d1+DEFAULT_ZERO_TOLERANCE*DEFAULT_ZERO_TOLERANCE;
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
DEFAULT_ZERO_TOLERANCE=DEFAULT_ZERO_TOLERANCE*d1+DEFAULT_ZERO_TOLERANCE*d2;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
DEFAULT_ZERO_TOLERANCE=DEFAULT_ZERO_TOLERANCE-DEFAULT_ZERO_TOLERANCE*d1;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iubd=virtualSize+1;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iubd=-virtualSize-1;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_ZERO_TOLERANCE=ZERO;
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
virtualSize=virtualSize*result+virtualSize;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
mapper.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
components=new ArrayList<ExpandableStatefulODE.SecondaryComponent>();
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
virtualSize=getDimension();
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
current=new Entry();
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
minRatio=DEFAULT_ZERO_TOLERANCE/DEFAULT_ZERO_TOLERANCE;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
minRatioPositions=new ArrayList<Integer>();
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
minRatio=DEFAULT_ZERO_TOLERANCE/DEFAULT_ZERO_TOLERANCE;
minRatioPositions=new ArrayList<Integer>();

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
current.setIndex(current.getIndex());
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
MatrixUtils.checkRowIndex(this,virtualSize);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
MatrixUtils.checkColumnIndex(this,virtualSize);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
MatrixUtils.checkRowIndex(this,virtualSize);
MatrixUtils.checkColumnIndex(this,virtualSize);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
virtualSize--;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
virtualSize<=virtualSize-virtualSize?iter.advance():null;
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
new ArrayList<BigFraction>().add(BigFraction.ONE);
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
new ArrayList<BigFraction>().add(new BigFraction(v-virtualSize,2));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
new ArrayList<BigFraction>().add(new BigFraction(2+v,2));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
new ArrayList<BigFraction>().add(BigFraction.ONE);
new ArrayList<BigFraction>().add(new BigFraction(v-virtualSize,2));
new ArrayList<BigFraction>().add(new BigFraction(2+v,2));

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
++virtualSize;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(virtualSize<0){
i=-i-2;
}
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(virtualSize>=polynomials.length){
i--;
}
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case SEQUENTIAL :

checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_ZERO_TOLERANCE=Math.max(biglsq,Math.max(ONE,DEFAULT_ZERO_TOLERANCE*d3)*(DEFAULT_ZERO_TOLERANCE*d4));
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_ZERO_TOLERANCE=Math.max(biglsq,Math.max(ONE,DEFAULT_ZERO_TOLERANCE/DEFAULT_ZERO_TOLERANCE*d4)*(DEFAULT_ZERO_TOLERANCE*d5));
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(current.getMax()>DEFAULT_ZERO_TOLERANCE||Double.isNaN(max)){
max=current.getMax();
}
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_ZERO_TOLERANCE+=current.getSum();
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
super(virtualSize,virtualSize);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.virtualSize=virtualSize;
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.entries=new OpenIntToDoubleHashMap(0.0);
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
virtualSize++;
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((virtualSize<0)||(end>=getDimension())){
throw new OutOfRangeException(LocalizedFormats.INDEX,end,0,dim-1);
}
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(virtualSize<virtualSize){
throw new NumberIsTooSmallException(LocalizedFormats.INITIAL_ROW_AFTER_FINAL_ROW,end,start,false);
}
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs((long)FastMath.floor(DEFAULT_ZERO_TOLERANCE)-DEFAULT_ZERO_TOLERANCE)<epsilon){
this.virtualSize=(int)a0;
this.virtualSize=1;
return ;
}
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
virtualSize+=1;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isInfinite(DEFAULT_ZERO_TOLERANCE)){
throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_VALUE_CONVERSION);
}
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
totalWeight+=DEFAULT_ZERO_TOLERANCE;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(virtualSize+1>virtualSize){
numElements=index+1;
}
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.linear.OpenMapRealVector,362
org.apache.commons.math3.linear.OpenMapRealVector,363
org.apache.commons.math3.linear.OpenMapRealVector,364
org.apache.commons.math3.linear.OpenMapRealVector,365
org.apache.commons.math3.linear.OpenMapRealVector,374
org.apache.commons.math3.util.OpenIntToDoubleHashMap,281
UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

========
keys[index]=key;
if(states[index]!=FULL||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplySameType
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
Running ant (compile.tests)................................................ 
========
states[index]=FULL;
if(states[index]!=FULL||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplySameType
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
Running ant (compile.tests)................................................ 
========
keys[index]=key;
states[index]=FULL;
if(states[index]!=FULL||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplySameType
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
Running ant (compile.tests)................................................ 
========
if(states[index]!=index||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplySameType
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(states[index]!=FULL||keys[index]==end){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]!=FULL||keys[index]==totalSize){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]!=FULL||keys[index]==length){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(values==null){
return Double.NaN;
}
if(states[index]!=FULL||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
values[PERTURB_SHIFT+index]=missingEntries;
if(states[index]!=FULL||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
current.setIndex(key);
if(states[index]!=FULL||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
advance(next);
if(states[index]!=FULL||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!Double.isNaN(this.getVcvElement(index,index))&&var>Double.MIN_VALUE){
return FastMath.sqrt(var);
}
if(states[index]!=FULL||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]!=index||keys[index]==end){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(true){
previous=values[index];
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
keys[index]=key;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplySameType
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
states[index]=FULL;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplySameType
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
keys[index]=key;
states[index]=FULL;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplySameType
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
perturb=PERTURB_SHIFT;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplySameType
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=j;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplySameType
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
while(true){
p=realEigenvalues[j];
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(values,0,values,0,secondaryState.length);
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
System.arraycopy(values,perturb,out.data,0,PERTURB_SHIFT);
}catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
keys[PERTURB_SHIFT]=(int)(serialVersionUID&0xffffffffl);
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplySameType
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
PERTURB_SHIFT++;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
j++;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplySameType
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(j>=seed.length){
j=0;
}
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
keys[PERTURB_SHIFT]=(int)(serialVersionUID&0xffffffffl);
j++;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplySameType
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
Timeout!
IN COMMENT TEST CASE: org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
IN COMMENT TEST CASE: org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
IN COMMENT TEST CASE: org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
IN COMMENT TEST CASE: /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy/src/test/java/org/apache/commons/math3/linear/SparseRealVectorTest.java

# FAILING TESTS: 1
TIMEOUT : 6000000
===========
locations= [<org.apache.commons.math3.linear.OpenMapRealVector,361>, <org.apache.commons.math3.linear.OpenMapRealVector,362>, <org.apache.commons.math3.linear.OpenMapRealVector,363>, <org.apache.commons.math3.linear.OpenMapRealVector,364>, <org.apache.commons.math3.linear.OpenMapRealVector,365>, <org.apache.commons.math3.linear.OpenMapRealVector,374>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,281>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,282>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,283>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,285>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,292>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,277>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,278>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,279>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,291>, <org.apache.commons.math3.linear.OpenMapRealVector,360>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,247>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,323>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,421>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,434>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,435>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,436>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,437>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,439>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,440>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,441>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,442>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,443>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,444>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,445>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,446>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,447>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,448>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,449>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,450>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,454>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,455>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,456>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,457>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,459>, <org.apache.commons.math3.linear.OpenMapRealVector,592>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,351>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,352>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,353>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,354>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,391>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,392>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,393>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,394>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,395>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,396>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,397>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,210>, <org.apache.commons.math3.linear.RealVector,180>, <org.apache.commons.math3.linear.OpenMapRealVector,591>, <org.apache.commons.math3.linear.RealVector,176>, <org.apache.commons.math3.linear.RealVector,177>, <org.apache.commons.math3.linear.OpenMapRealVector,179>, <org.apache.commons.math3.linear.OpenMapRealVector,180>, <org.apache.commons.math3.linear.OpenMapRealVector,181>, <org.apache.commons.math3.linear.OpenMapRealVector,182>, <org.apache.commons.math3.linear.OpenMapRealVector,183>, <org.apache.commons.math3.linear.OpenMapRealVector,208>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,207>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,208>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,209>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,130>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,131>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,132>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,133>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,134>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,135>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,136>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,137>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,138>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,139>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,140>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,141>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,142>, <org.apache.commons.math3.linear.OpenMapRealVector,343>, <org.apache.commons.math3.linear.OpenMapRealVector,349>, <org.apache.commons.math3.linear.OpenMapRealVector,350>, <org.apache.commons.math3.linear.OpenMapRealVector,351>, <org.apache.commons.math3.linear.OpenMapRealVector,352>, <org.apache.commons.math3.linear.OpenMapRealVector,354>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,526>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,529>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,532>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,183>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,184>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,274>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,332>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,411>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,412>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,413>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,273>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,238>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,495>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,498>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,501>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,503>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,506>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,508>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,515>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,543>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,546>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,549>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,560>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,565>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,569>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,577>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,572>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,573>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,574>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,579>, <org.apache.commons.math3.linear.OpenMapRealVector,449>, <org.apache.commons.math3.linear.OpenMapRealVector,589>, <org.apache.commons.math3.linear.OpenMapRealVector,590>, <org.apache.commons.math3.linear.OpenMapRealVector,594>, <org.apache.commons.math3.linear.OpenMapRealVector,342>, <org.apache.commons.math3.linear.OpenMapRealVector,588>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,177>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,178>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,179>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,382>, <org.apache.commons.math3.linear.RealVector,194>, <org.apache.commons.math3.linear.OpenMapRealVector,448>, <org.apache.commons.math3.linear.OpenMapRealVector,140>, <org.apache.commons.math3.linear.RealVector,189>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,256>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,269>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,270>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,271>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,272>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,407>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,408>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,409>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,410>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,415>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,416>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,417>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,418>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,419>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,420>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,423>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,425>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,466>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,475>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,476>, <org.apache.commons.math3.linear.OpenMapRealVector,123>, <org.apache.commons.math3.linear.OpenMapRealVector,124>, <org.apache.commons.math3.linear.OpenMapRealVector,133>, <org.apache.commons.math3.linear.OpenMapRealVector,134>, <org.apache.commons.math3.linear.OpenMapRealVector,135>, <org.apache.commons.math3.linear.OpenMapRealVector,136>, <org.apache.commons.math3.linear.OpenMapRealVector,137>, <org.apache.commons.math3.linear.OpenMapRealVector,138>, <org.apache.commons.math3.linear.OpenMapRealVector,139>, <org.apache.commons.math3.linear.OpenMapRealVector,143>, <org.apache.commons.math3.linear.OpenMapRealVector,401>, <org.apache.commons.math3.linear.RealVector,59>, <org.apache.commons.math3.linear.RealVector,1049>, <org.apache.commons.math3.linear.SparseRealVector,25>, <org.apache.commons.math3.linear.OpenMapRealVector,220>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,100>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,101>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,117>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,118>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,119>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,120>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,121>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,122>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,123>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,124>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,150>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,153>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,154>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,155>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,156>, <org.apache.commons.math3.util.FastMath,113>, <org.apache.commons.math3.util.FastMath,126>, <org.apache.commons.math3.util.FastMath,139>, <org.apache.commons.math3.util.FastMath,158>, <org.apache.commons.math3.util.FastMath,177>, <org.apache.commons.math3.util.FastMath,196>, <org.apache.commons.math3.util.FastMath,216>, <org.apache.commons.math3.util.FastMath,235>, <org.apache.commons.math3.util.FastMath,254>, <org.apache.commons.math3.util.FastMath,275>, <org.apache.commons.math3.util.FastMath,283>, <org.apache.commons.math3.util.FastMath,286>, <org.apache.commons.math3.util.FastMath,3020>, <org.apache.commons.math3.util.FastMath,3334>, <org.apache.commons.math3.util.FastMath,3338>, <org.apache.commons.math3.util.FastMath,3342>, <org.apache.commons.math3.util.FastMath,3343>, <org.apache.commons.math3.util.FastMath,3347>, <org.apache.commons.math3.util.FastMath,3351>, <org.apache.commons.math3.util.FastMath,3361>, <org.apache.commons.math3.util.FastMath,3365>]
======================org.apache.commons.math3.linear.OpenMapRealVector,361
UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

========
while(iter.hasNext()){
if(Double.doubleToLongBits(iter.value())!=Double.doubleToLongBits(getEntry(iter.key()))){
return false;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
entries.put(iter.key(),iter.value()/DEFAULT_ZERO_TOLERANCE);
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Running ant (compile.tests)................................................ 
========
while(iter.hasNext()){
d+=iter.value()*entries.get(iter.key());
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(Double.isNaN(iter.value())){
return true;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(!entries.containsKey(iter.key())){
if(iter.value()>DEFAULT_ZERO_TOLERANCE){
max=iter.value();
}
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
max+=FastMath.abs(iter.value()-res.getEntry(iter.key()));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iter=res.getEntries().iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(Double.doubleToLongBits(res.getEntry(iter.key()))!=Double.doubleToLongBits(iter.value())){
return false;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(!entries.containsKey(iter.key())){
 final double iter.value()=iter.value();
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(FastMath.abs(iter.value()-res.getEntry(iter.key()))>DEFAULT_ZERO_TOLERANCE){
max=FastMath.abs(iter.value()-res.getEntry(iter.key()));
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
delta=iter.value()-res.getEntry(iter.key());
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(!entries.containsKey(iter.key())){
double FastMath.abs(iter.value())=FastMath.abs(iter.value());
max+=FastMath.abs(FastMath.abs(iter.value()));
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
res.setEntry(iter.key(),iter.value().divide(v.getEntry(iter.key())));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
res.setEntry(iter.key(),iter.value().multiply(v.getEntry(iter.key())));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(Double.isNaN(iter.value())){
return false;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(Double.isInfinite(iter.value())){
infiniteFound=true;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(Double.isNaN(iter.value())){
return false;
}
if(Double.isInfinite(iter.value())){
infiniteFound=true;
}

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
temp=Double.doubleToLongBits(iter.value());
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
res.setEntry(iter.key()+virtualSize,iter.value());
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
virtualSize++;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(iter.key()>=virtualSize&&iter.key()<virtualSize){
res.setEntry(iter.key()-virtualSize,iter.value());
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(!iter.value().equals(getEntry(iter.key()))){
return false;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
res=res.add(v.getEntry(iter.key()).multiply(iter.value()));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(entries.containsKey(iter.key())){
res.setEntry(iter.key(),entries.get(key).add(iter.value()));
}else {
res.setEntry(iter.key(),iter.value());
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(entries.containsKey(iter.key())){
res.setEntry(iter.key(),entries.get(key).subtract(iter.value()));
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
res[iter.key()]=iter.value();
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
iubd=virtualSize+1;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
iubd=-virtualSize-1;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(virtualSize);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(virtualSize+v.getDimension()-1);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_ZERO_TOLERANCE=DEFAULT_ZERO_TOLERANCE-DEFAULT_ZERO_TOLERANCE*d1;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
v.setEntry(virtualSize,v.getEntry(virtualSize)/DEFAULT_ZERO_TOLERANCE);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_ZERO_TOLERANCE=DEFAULT_ZERO_TOLERANCE;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
b=FastMath.min(DEFAULT_ZERO_TOLERANCE+1.0,DEFAULT_ZERO_TOLERANCE);
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
++virtualSize;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
b=FastMath.min(DEFAULT_ZERO_TOLERANCE+1.0,DEFAULT_ZERO_TOLERANCE);
++virtualSize;

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
minRatio=DEFAULT_ZERO_TOLERANCE/DEFAULT_ZERO_TOLERANCE;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
minRatioPositions=new ArrayList<Integer>();
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
minRatio=DEFAULT_ZERO_TOLERANCE/DEFAULT_ZERO_TOLERANCE;
minRatioPositions=new ArrayList<Integer>();

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
current.setIndex(current.getIndex());
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
advance(current);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
virtualSize--;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++virtualSize;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
iter.advance();
++virtualSize;
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
state=100;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
++virtualSize;
state=100;

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
virtualSize<=virtualSize-virtualSize?iter.advance():null;
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
virtualSize=-1;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(virtualSize>=polynomials.length){
i--;
}
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
state=100;
iter.advance();
++virtualSize;
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
++virtualSize;
state=100;

iter.advance();
++virtualSize;
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
state=100;
++virtualSize;
state=100;

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
state=100;
++virtualSize;
state=100;

iter.advance();
++virtualSize;
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
bp[i][k]=0;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_ZERO_TOLERANCE=Math.max(biglsq,DEFAULT_ZERO_TOLERANCE*(DEFAULT_ZERO_TOLERANCE*d5));
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super.addValue(DEFAULT_ZERO_TOLERANCE);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
new ArrayList<BigFraction>().add(BigFraction.ONE);
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
new ArrayList<BigFraction>().add(new BigFraction(v-virtualSize,2));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
new ArrayList<BigFraction>().add(new BigFraction(2+v,2));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
new ArrayList<BigFraction>().add(BigFraction.ONE);
new ArrayList<BigFraction>().add(new BigFraction(v-virtualSize,2));
new ArrayList<BigFraction>().add(new BigFraction(2+v,2));

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,virtualSize);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,virtualSize);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,virtualSize);
MatrixUtils.checkColumnIndex(this,virtualSize);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(vData.length);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
virtualSize++;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(shouldContract()){
contract();
}
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
totalWeight+=DEFAULT_ZERO_TOLERANCE;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
denominator=BigInteger.ONE;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
virtualSize+=1;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.v=new ArrayRealVector(new double[lhsCoefficients.length],false);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.DEFAULT_ZERO_TOLERANCE=DEFAULT_ZERO_TOLERANCE-DEFAULT_ZERO_TOLERANCE;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(virtualSize+1>virtualSize){
numElements=index+1;
}
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((virtualSize+virtualSize)>=internalArray.length){
expandTo(startIndex+(index+1));
}
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(FastMath.abs(iter.value()-v.getEntry(iter.key()))>DEFAULT_ZERO_TOLERANCE){
max=FastMath.abs(iter.value()-v.getEntry(iter.key()));
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iter=v.getEntries().iterator();
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iter=res.getEntries().iterator();
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
max+=FastMath.abs(iter.value());
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.size()<v.entries.size()?entries.iterator():v.entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
d+=iter.value()*entries.size()<v.entries.size()?v.entries:entries.get(iter.key());
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(!entries.containsKey(iter.key())){
 final double iter.value()=iter.value();
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(Double.isNaN(iter.value())){
return true;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
res[iter.key()]=iter.value();
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
res.setEntry(iter.key(),iter.value().divide(v.getEntry(iter.key())));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
res.setEntry(iter.key(),iter.value().multiply(v.getEntry(iter.key())));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(!iter.value().equals(iter.value())){
return false;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(Double.isNaN(iter.value())){
return false;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(Double.isInfinite(iter.value())){
infiniteFound=true;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(Double.isNaN(iter.value())){
return false;
}
if(Double.isInfinite(iter.value())){
infiniteFound=true;
}

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
res=res.add(v.getEntry(iter.key()).multiply(iter.value()));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(entries.containsKey(iter.key())){
res.setEntry(iter.key(),entries.get(key).add(iter.value()));
}else {
res.setEntry(iter.key(),iter.value());
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(entries.containsKey(iter.key())){
res.setEntry(iter.key(),entries.get(key).subtract(iter.value()));
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
res.setEntry(iter.key()+virtualSize,iter.value());
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
temp=Double.doubleToLongBits(iter.value());
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
virtualSize=virtualSize*result+(int)(serialVersionUID^(temp>>>32));
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
virtualSize=virtualSize*result+virtualSize;
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(iter.key()>=virtualSize&&iter.key()<virtualSize){
res.setEntry(iter.key()-virtualSize,iter.value());
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_ZERO_TOLERANCE=DEFAULT_ZERO_TOLERANCE*d1+DEFAULT_ZERO_TOLERANCE*DEFAULT_ZERO_TOLERANCE;
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
DEFAULT_ZERO_TOLERANCE=DEFAULT_ZERO_TOLERANCE*d1+DEFAULT_ZERO_TOLERANCE*d2;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
DEFAULT_ZERO_TOLERANCE=DEFAULT_ZERO_TOLERANCE-DEFAULT_ZERO_TOLERANCE*d1;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iubd=virtualSize+1;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iubd=-virtualSize-1;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_ZERO_TOLERANCE=ZERO;
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
virtualSize=virtualSize*result+virtualSize;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
mapper.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
components=new ArrayList<ExpandableStatefulODE.SecondaryComponent>();
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
virtualSize=getDimension();
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
current=new Entry();
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
minRatio=DEFAULT_ZERO_TOLERANCE/DEFAULT_ZERO_TOLERANCE;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
minRatioPositions=new ArrayList<Integer>();
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
minRatio=DEFAULT_ZERO_TOLERANCE/DEFAULT_ZERO_TOLERANCE;
minRatioPositions=new ArrayList<Integer>();

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
current.setIndex(current.getIndex());
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
MatrixUtils.checkRowIndex(this,virtualSize);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
MatrixUtils.checkColumnIndex(this,virtualSize);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
MatrixUtils.checkRowIndex(this,virtualSize);
MatrixUtils.checkColumnIndex(this,virtualSize);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
virtualSize--;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
virtualSize<=virtualSize-virtualSize?iter.advance():null;
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
new ArrayList<BigFraction>().add(BigFraction.ONE);
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
new ArrayList<BigFraction>().add(new BigFraction(v-virtualSize,2));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
new ArrayList<BigFraction>().add(new BigFraction(2+v,2));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
new ArrayList<BigFraction>().add(BigFraction.ONE);
new ArrayList<BigFraction>().add(new BigFraction(v-virtualSize,2));
new ArrayList<BigFraction>().add(new BigFraction(2+v,2));

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
++virtualSize;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(virtualSize<0){
i=-i-2;
}
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(virtualSize>=polynomials.length){
i--;
}
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case SEQUENTIAL :

checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_ZERO_TOLERANCE=Math.max(biglsq,Math.max(ONE,DEFAULT_ZERO_TOLERANCE*d3)*(DEFAULT_ZERO_TOLERANCE*d4));
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_ZERO_TOLERANCE=Math.max(biglsq,Math.max(ONE,DEFAULT_ZERO_TOLERANCE/DEFAULT_ZERO_TOLERANCE*d4)*(DEFAULT_ZERO_TOLERANCE*d5));
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(current.getMax()>DEFAULT_ZERO_TOLERANCE||Double.isNaN(max)){
max=current.getMax();
}
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_ZERO_TOLERANCE+=current.getSum();
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
super(virtualSize,virtualSize);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.virtualSize=virtualSize;
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.entries=new OpenIntToDoubleHashMap(0.0);
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
virtualSize++;
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((virtualSize<0)||(end>=getDimension())){
throw new OutOfRangeException(LocalizedFormats.INDEX,end,0,dim-1);
}
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(virtualSize<virtualSize){
throw new NumberIsTooSmallException(LocalizedFormats.INITIAL_ROW_AFTER_FINAL_ROW,end,start,false);
}
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs((long)FastMath.floor(DEFAULT_ZERO_TOLERANCE)-DEFAULT_ZERO_TOLERANCE)<epsilon){
this.virtualSize=(int)a0;
this.virtualSize=1;
return ;
}
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
virtualSize+=1;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isInfinite(DEFAULT_ZERO_TOLERANCE)){
throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_VALUE_CONVERSION);
}
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
totalWeight+=DEFAULT_ZERO_TOLERANCE;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(virtualSize+1>virtualSize){
numElements=index+1;
}
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.linear.OpenMapRealVector,362
org.apache.commons.math3.linear.OpenMapRealVector,363
org.apache.commons.math3.linear.OpenMapRealVector,364
org.apache.commons.math3.linear.OpenMapRealVector,365
org.apache.commons.math3.linear.OpenMapRealVector,374
org.apache.commons.math3.util.OpenIntToDoubleHashMap,281
UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

========
keys[index]=key;
if(states[index]!=FULL||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
states[index]=FULL;
if(states[index]!=FULL||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
keys[index]=key;
states[index]=FULL;
if(states[index]!=FULL||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]!=index||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]!=FULL||keys[index]==end){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]!=FULL||keys[index]==totalSize){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]!=FULL||keys[index]==length){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(values==null){
return Double.NaN;
}
if(states[index]!=FULL||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
values[PERTURB_SHIFT+index]=missingEntries;
if(states[index]!=FULL||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
current.setIndex(key);
if(states[index]!=FULL||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
advance(next);
if(states[index]!=FULL||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!Double.isNaN(this.getVcvElement(index,index))&&var>Double.MIN_VALUE){
return FastMath.sqrt(var);
}
if(states[index]!=FULL||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]!=index||keys[index]==end){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(true){
previous=values[index];
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
keys[index]=key;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
states[index]=FULL;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
keys[index]=key;
states[index]=FULL;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
perturb=PERTURB_SHIFT;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=j;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(true){
p=realEigenvalues[j];
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(values,0,values,0,secondaryState.length);
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
System.arraycopy(values,perturb,out.data,0,PERTURB_SHIFT);
}catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
keys[PERTURB_SHIFT]=(int)(serialVersionUID&0xffffffffl);
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
PERTURB_SHIFT++;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
j++;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(j>=seed.length){
j=0;
}
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
keys[PERTURB_SHIFT]=(int)(serialVersionUID&0xffffffffl);
j++;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
current.setIndex(j);
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
advance(next);
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!Double.isNaN(this.getVcvElement(index,index))&&var>Double.MIN_VALUE){
return FastMath.sqrt(var);
}
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(true){
++PERTURB_SHIFT;
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
PERTURB_SHIFT=(key+BLOCK_SIZE-1)/BLOCK_SIZE;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
j=(mask+BLOCK_SIZE-1)/BLOCK_SIZE;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(seed.length<v.length){
for(int index=seed.length;i<v.length;++i){
 final long keys[index-seed.length]=keys[i-seed.length];
v[i]=(int)((1812433253l*(l^(l>>30))+i)&0xffffffffL);
}
}
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
perturb=0;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
clear();
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index+1>key){
numElements=index+1;
}
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((PERTURB_SHIFT+index)>=internalArray.length){
expandTo(startIndex+(index+1));
}
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
values[PERTURB_SHIFT+index]=missingEntries;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
j+=j;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(j==-1){
throw new OutOfRangeException(missingEntries,values[0],yval[yval.length-1]);
}
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=index;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
PERTURB_SHIFT=(key+BLOCK_SIZE-1)/BLOCK_SIZE;
j=(mask+BLOCK_SIZE-1)/BLOCK_SIZE;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
missingEntries+=missingEntries;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=sn;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(true){
e[j-1]=values[j]/FastMath.hypot(values[j],missingEntries)*e[j-1];
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
values[j]=FastMath.hypot(values[j],missingEntries);
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(true){
j=probe(perturb,j);
index=sn&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(true){
j=probe(perturb,j);
index=j&cs;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(true){
t=missingEntries*U[i][j]+missingEntries*U[i][j+1];
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(true){
U[i][j]=missingEntries;
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(true){
t=missingEntries*U[i][j]+missingEntries*U[i][j+1];
U[i][j]=missingEntries;

j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
key++;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((values[j+1]-realEigenvalues[j])/(2*values[j])<0.0){
q=values[index]-realEigenvalues[j]+values[j]/(q-FastMath.sqrt(1+(values[j+1]-realEigenvalues[j])/(2*values[j])*q));
}else {
q=realEigenvalues[m]-realEigenvalues[j]+e[j]/(q+t);
}
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index==-1){
throw new OutOfRangeException(missingEntries,values[0],yval[yval.length-1]);
}
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
values=values;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
values[index]=missingEntries;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
keys[index]=key;
while(true){
previous=values[index];
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
states[index]=FULL;
while(true){
previous=values[index];
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
keys[index]=key;
states[index]=FULL;
while(true){
previous=values[index];
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkRowIndex(PERTURB_SHIFT);
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkColumnIndex(perturb);
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkRowIndex(PERTURB_SHIFT);
checkColumnIndex(perturb);
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.util.OpenIntToDoubleHashMap,282
org.apache.commons.math3.util.OpenIntToDoubleHashMap,283
org.apache.commons.math3.util.OpenIntToDoubleHashMap,285
org.apache.commons.math3.util.OpenIntToDoubleHashMap,292
UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

========
if(states[index]==FREE){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(states[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]==max){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==previous){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==index){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]==totalSize){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==numElements){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
current.setIndex(index);
if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
advance(next);
if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==length){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==end){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==low){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]!=FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]==iHeight){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(values==null){
return Double.NaN;
}
if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
values[PERTURB_SHIFT+index]=missingEntries;
if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!Double.isNaN(this.getVcvElement(index,index))&&var>Double.MIN_VALUE){
return FastMath.sqrt(var);
}
if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==n){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(oldStates[i]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[PERTURB_SHIFT]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]!=iHeight){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==FREE){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]==FREE){
return index;
}else if(states[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]==FREE){
return PERTURB_SHIFT;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]==FREE){
return firstRemoved;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==FREE){
return PERTURB_SHIFT;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]==FREE){
return PERTURB_SHIFT;
}else if(states[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]==key){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]==previous){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==max){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(containsKey(key,index)){
return true;
}
if(states[index]==FREE){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==index){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]==totalSize){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==numElements){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==length){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
current.setIndex(index);
if(states[index]==FREE){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
advance(next);
if(states[index]==FREE){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==end){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==low){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==FREE){
return index;
}else if(states[index]==high){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(values==null){
return Double.NaN;
}
if(states[index]==FREE){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!Double.isNaN(this.getVcvElement(index,index))&&var>Double.MIN_VALUE){
return FastMath.sqrt(var);
}
if(states[index]==FREE){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(values==null){
return Double.NaN;
}
if(states[index]==index){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index+1>PERTURB_SHIFT){
numElements=index+1;
}
if(states[index]==FREE){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((PERTURB_SHIFT+index)>=internalArray.length){
expandTo(startIndex+(index+1));
}
if(states[index]==FREE){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
values[PERTURB_SHIFT+index]=missingEntries;
if(states[index]==FREE){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]!=FREE){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Running ant (compile.tests)................................................ 
========
if(states[index]==iHeight){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==FULL){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(oldStates[i]==FULL){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[PERTURB_SHIFT]==FREE){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[PERTURB_SHIFT]==FULL){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]==n){
return index;
}else if(states[index]==n){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==n){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==FREE){
return index;
}else if(states[index]==n){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==FREE){
return missingEntries;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==FREE){
return firstRemoved;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==FREE){
return firstRemoved;
}else if(states[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]!=iHeight){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.util.OpenIntToDoubleHashMap,277
UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

========
if(states[index]!=FULL||keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(states[index]!=FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]==index&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]==FULL&&keys[index]==end){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==FULL&&keys[index]==totalSize){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==FULL&&keys[index]==length){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
current.setIndex(key);
if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
advance(next);
if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(values==null){
return Double.NaN;
}
if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
values[PERTURB_SHIFT+index]=missingEntries;
if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!Double.isNaN(this.getVcvElement(index,index))&&var>Double.MIN_VALUE){
return FastMath.sqrt(var);
}
if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==index&&keys[index]==end){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==FREE){
return PERTURB_SHIFT;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]==FREE){
return firstRemoved;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==key){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(states[index]==previous){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==end){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==index){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(states[index]==totalSize){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==length){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==numElements){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==low){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(values==null){
return Double.NaN;
}
if(states[index]==FREE){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==FULL){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(oldStates[i]==FULL){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[PERTURB_SHIFT]==FREE){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[PERTURB_SHIFT]==FULL){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!Double.isNaN(this.getVcvElement(index,index))&&var>Double.MIN_VALUE){
return FastMath.sqrt(var);
}
if(states[index]==FREE){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(values==null){
return Double.NaN;
}
if(states[index]==index){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==n){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index+1>PERTURB_SHIFT){
numElements=index+1;
}
if(states[index]==FREE){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((PERTURB_SHIFT+index)>=internalArray.length){
expandTo(startIndex+(index+1));
}
if(states[index]==FREE){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
values[PERTURB_SHIFT+index]=missingEntries;
if(states[index]==FREE){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]!=FREE){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]==iHeight){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==FREE){
return missingEntries;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]!=iHeight){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==FREE){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}
int perturb=perturb(hash);
int j=hash;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]==FREE){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}
int perturb=perturb(hash);
int j=mask;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]==FREE){
return PERTURB_SHIFT;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}
int perturb=perturb(hash);
int j=index;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]==FREE){
return firstRemoved;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}
int perturb=perturb(hash);
int j=index;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==FULL){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}
int perturb=perturb(hash);
int j=index;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]==FREE){
return index;
}else if(states[index]!=FULL||keys[index]==key){
return changeIndexSign(index);
}
int perturb=perturb(hash);
int j=index;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]==FREE){
return index;
}else if(states[index]!=FULL&&keys[index]==key){
return changeIndexSign(index);
}
int perturb=perturb(hash);
int j=index;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeDivideMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Timeout!
IN COMMENT TEST CASE: org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType
IN COMMENT TEST CASE: org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes
IN COMMENT TEST CASE: org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
IN COMMENT TEST CASE: /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy/src/test/java/org/apache/commons/math3/linear/SparseRealVectorTest.java

# FAILING TESTS: 1
TIMEOUT : 6000000
===========
locations= [<org.apache.commons.math3.linear.OpenMapRealVector,361>, <org.apache.commons.math3.linear.OpenMapRealVector,362>, <org.apache.commons.math3.linear.OpenMapRealVector,363>, <org.apache.commons.math3.linear.OpenMapRealVector,364>, <org.apache.commons.math3.linear.OpenMapRealVector,365>, <org.apache.commons.math3.linear.OpenMapRealVector,374>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,281>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,282>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,283>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,285>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,292>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,277>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,278>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,279>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,291>, <org.apache.commons.math3.linear.OpenMapRealVector,360>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,247>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,323>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,421>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,434>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,435>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,436>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,437>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,439>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,440>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,441>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,442>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,443>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,444>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,445>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,446>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,447>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,448>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,449>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,450>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,454>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,455>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,456>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,457>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,459>, <org.apache.commons.math3.linear.OpenMapRealVector,592>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,351>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,352>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,353>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,354>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,391>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,392>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,393>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,394>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,395>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,396>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,397>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,210>, <org.apache.commons.math3.linear.RealVector,180>, <org.apache.commons.math3.linear.OpenMapRealVector,591>, <org.apache.commons.math3.linear.RealVector,176>, <org.apache.commons.math3.linear.RealVector,177>, <org.apache.commons.math3.linear.OpenMapRealVector,179>, <org.apache.commons.math3.linear.OpenMapRealVector,180>, <org.apache.commons.math3.linear.OpenMapRealVector,181>, <org.apache.commons.math3.linear.OpenMapRealVector,182>, <org.apache.commons.math3.linear.OpenMapRealVector,183>, <org.apache.commons.math3.linear.OpenMapRealVector,208>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,207>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,208>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,209>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,130>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,131>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,132>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,133>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,134>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,135>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,136>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,137>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,138>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,139>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,140>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,141>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,142>, <org.apache.commons.math3.linear.OpenMapRealVector,343>, <org.apache.commons.math3.linear.OpenMapRealVector,349>, <org.apache.commons.math3.linear.OpenMapRealVector,350>, <org.apache.commons.math3.linear.OpenMapRealVector,351>, <org.apache.commons.math3.linear.OpenMapRealVector,352>, <org.apache.commons.math3.linear.OpenMapRealVector,354>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,526>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,529>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,532>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,183>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,184>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,274>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,332>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,411>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,412>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,413>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,273>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,238>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,495>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,498>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,501>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,503>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,506>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,508>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,515>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,543>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,546>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,549>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,560>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,565>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,569>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,577>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,572>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,573>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,574>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,579>, <org.apache.commons.math3.linear.OpenMapRealVector,449>, <org.apache.commons.math3.linear.OpenMapRealVector,589>, <org.apache.commons.math3.linear.OpenMapRealVector,590>, <org.apache.commons.math3.linear.OpenMapRealVector,594>, <org.apache.commons.math3.linear.OpenMapRealVector,342>, <org.apache.commons.math3.linear.OpenMapRealVector,588>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,177>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,178>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,179>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,382>, <org.apache.commons.math3.linear.RealVector,194>, <org.apache.commons.math3.linear.OpenMapRealVector,448>, <org.apache.commons.math3.linear.OpenMapRealVector,140>, <org.apache.commons.math3.linear.RealVector,189>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,256>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,269>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,270>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,271>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,272>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,407>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,408>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,409>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,410>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,415>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,416>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,417>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,418>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,419>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,420>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,423>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,425>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,466>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,475>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,476>, <org.apache.commons.math3.linear.OpenMapRealVector,123>, <org.apache.commons.math3.linear.OpenMapRealVector,124>, <org.apache.commons.math3.linear.OpenMapRealVector,133>, <org.apache.commons.math3.linear.OpenMapRealVector,134>, <org.apache.commons.math3.linear.OpenMapRealVector,135>, <org.apache.commons.math3.linear.OpenMapRealVector,136>, <org.apache.commons.math3.linear.OpenMapRealVector,137>, <org.apache.commons.math3.linear.OpenMapRealVector,138>, <org.apache.commons.math3.linear.OpenMapRealVector,139>, <org.apache.commons.math3.linear.OpenMapRealVector,143>, <org.apache.commons.math3.linear.OpenMapRealVector,401>, <org.apache.commons.math3.linear.RealVector,59>, <org.apache.commons.math3.linear.RealVector,1049>, <org.apache.commons.math3.linear.SparseRealVector,25>, <org.apache.commons.math3.linear.OpenMapRealVector,220>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,100>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,101>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,117>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,118>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,119>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,120>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,121>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,122>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,123>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,124>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,150>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,153>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,154>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,155>, <org.apache.commons.math3.util.OpenIntToDoubleHashMap,156>, <org.apache.commons.math3.util.FastMath,113>, <org.apache.commons.math3.util.FastMath,126>, <org.apache.commons.math3.util.FastMath,139>, <org.apache.commons.math3.util.FastMath,158>, <org.apache.commons.math3.util.FastMath,177>, <org.apache.commons.math3.util.FastMath,196>, <org.apache.commons.math3.util.FastMath,216>, <org.apache.commons.math3.util.FastMath,235>, <org.apache.commons.math3.util.FastMath,254>, <org.apache.commons.math3.util.FastMath,275>, <org.apache.commons.math3.util.FastMath,283>, <org.apache.commons.math3.util.FastMath,286>, <org.apache.commons.math3.util.FastMath,3020>, <org.apache.commons.math3.util.FastMath,3334>, <org.apache.commons.math3.util.FastMath,3338>, <org.apache.commons.math3.util.FastMath,3342>, <org.apache.commons.math3.util.FastMath,3343>, <org.apache.commons.math3.util.FastMath,3347>, <org.apache.commons.math3.util.FastMath,3351>, <org.apache.commons.math3.util.FastMath,3361>, <org.apache.commons.math3.util.FastMath,3365>]
======================org.apache.commons.math3.linear.OpenMapRealVector,361
UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

========
while(iter.hasNext()){
if(Double.doubleToLongBits(iter.value())!=Double.doubleToLongBits(getEntry(iter.key()))){
return false;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
entries.put(iter.key(),iter.value()/DEFAULT_ZERO_TOLERANCE);
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Running ant (compile.tests)................................................ 
========
while(iter.hasNext()){
d+=iter.value()*entries.get(iter.key());
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(Double.isNaN(iter.value())){
return true;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(!entries.containsKey(iter.key())){
if(iter.value()>DEFAULT_ZERO_TOLERANCE){
max=iter.value();
}
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
max+=FastMath.abs(iter.value()-res.getEntry(iter.key()));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iter=res.getEntries().iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Running ant (compile.tests)................................................ 
========
while(iter.hasNext()){
if(Double.doubleToLongBits(res.getEntry(iter.key()))!=Double.doubleToLongBits(iter.value())){
return false;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(!entries.containsKey(iter.key())){
 final double iter.value()=iter.value();
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(FastMath.abs(iter.value()-res.getEntry(iter.key()))>DEFAULT_ZERO_TOLERANCE){
max=FastMath.abs(iter.value()-res.getEntry(iter.key()));
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
delta=iter.value()-res.getEntry(iter.key());
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(!entries.containsKey(iter.key())){
double FastMath.abs(iter.value())=FastMath.abs(iter.value());
max+=FastMath.abs(FastMath.abs(iter.value()));
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
res.setEntry(iter.key(),iter.value().divide(v.getEntry(iter.key())));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
res.setEntry(iter.key(),iter.value().multiply(v.getEntry(iter.key())));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(Double.isNaN(iter.value())){
return false;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(Double.isInfinite(iter.value())){
infiniteFound=true;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(Double.isNaN(iter.value())){
return false;
}
if(Double.isInfinite(iter.value())){
infiniteFound=true;
}

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
temp=Double.doubleToLongBits(iter.value());
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
res.setEntry(iter.key()+virtualSize,iter.value());
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Running ant (compile.tests)................................................ 
========
while(iter.hasNext()){
virtualSize++;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(iter.key()>=virtualSize&&iter.key()<virtualSize){
res.setEntry(iter.key()-virtualSize,iter.value());
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Running ant (compile.tests)................................................ 
========
while(iter.hasNext()){
if(!iter.value().equals(getEntry(iter.key()))){
return false;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
res=res.add(v.getEntry(iter.key()).multiply(iter.value()));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(entries.containsKey(iter.key())){
res.setEntry(iter.key(),entries.get(key).add(iter.value()));
}else {
res.setEntry(iter.key(),iter.value());
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
if(entries.containsKey(iter.key())){
res.setEntry(iter.key(),entries.get(key).subtract(iter.value()));
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
res[iter.key()]=iter.value();
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
iubd=virtualSize+1;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
iubd=-virtualSize-1;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Running ant (compile.tests)................................................ 
========
checkIndex(virtualSize);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Running ant (compile.tests)................................................ 
========
checkIndex(virtualSize+v.getDimension()-1);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Running ant (compile.tests)................................................ 
========
checkIndex(virtualSize);
checkIndex(virtualSize+v.getDimension()-1);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_ZERO_TOLERANCE=DEFAULT_ZERO_TOLERANCE-DEFAULT_ZERO_TOLERANCE*d1;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
v.setEntry(virtualSize,v.getEntry(virtualSize)/DEFAULT_ZERO_TOLERANCE);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_ZERO_TOLERANCE=DEFAULT_ZERO_TOLERANCE;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
b=FastMath.min(DEFAULT_ZERO_TOLERANCE+1.0,DEFAULT_ZERO_TOLERANCE);
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
++virtualSize;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
b=FastMath.min(DEFAULT_ZERO_TOLERANCE+1.0,DEFAULT_ZERO_TOLERANCE);
++virtualSize;

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
minRatio=DEFAULT_ZERO_TOLERANCE/DEFAULT_ZERO_TOLERANCE;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
minRatioPositions=new ArrayList<Integer>();
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
minRatio=DEFAULT_ZERO_TOLERANCE/DEFAULT_ZERO_TOLERANCE;
minRatioPositions=new ArrayList<Integer>();

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
current.setIndex(current.getIndex());
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
advance(current);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
virtualSize--;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++virtualSize;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
iter.advance();
++virtualSize;
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
state=100;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
++virtualSize;
state=100;

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
virtualSize<=virtualSize-virtualSize?iter.advance():null;
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
virtualSize=-1;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(virtualSize>=polynomials.length){
i--;
}
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
state=100;
iter.advance();
++virtualSize;
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
++virtualSize;
state=100;

iter.advance();
++virtualSize;
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
state=100;
++virtualSize;
state=100;

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
state=100;
++virtualSize;
state=100;

iter.advance();
++virtualSize;
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
bp[i][k]=0;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_ZERO_TOLERANCE=Math.max(biglsq,DEFAULT_ZERO_TOLERANCE*(DEFAULT_ZERO_TOLERANCE*d5));
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super.addValue(DEFAULT_ZERO_TOLERANCE);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
new ArrayList<BigFraction>().add(BigFraction.ONE);
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
new ArrayList<BigFraction>().add(new BigFraction(v-virtualSize,2));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
new ArrayList<BigFraction>().add(new BigFraction(2+v,2));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
new ArrayList<BigFraction>().add(BigFraction.ONE);
new ArrayList<BigFraction>().add(new BigFraction(v-virtualSize,2));
new ArrayList<BigFraction>().add(new BigFraction(2+v,2));

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,virtualSize);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkColumnIndex(this,virtualSize);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MatrixUtils.checkRowIndex(this,virtualSize);
MatrixUtils.checkColumnIndex(this,virtualSize);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(vData.length);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
virtualSize++;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(shouldContract()){
contract();
}
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
totalWeight+=DEFAULT_ZERO_TOLERANCE;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iter.hasNext()){
denominator=BigInteger.ONE;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
virtualSize+=1;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.v=new ArrayRealVector(new double[lhsCoefficients.length],false);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.DEFAULT_ZERO_TOLERANCE=DEFAULT_ZERO_TOLERANCE-DEFAULT_ZERO_TOLERANCE;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(virtualSize+1>virtualSize){
numElements=index+1;
}
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((virtualSize+virtualSize)>=internalArray.length){
expandTo(startIndex+(index+1));
}
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(FastMath.abs(iter.value()-v.getEntry(iter.key()))>DEFAULT_ZERO_TOLERANCE){
max=FastMath.abs(iter.value()-v.getEntry(iter.key()));
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iter=v.getEntries().iterator();
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iter=res.getEntries().iterator();
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
max+=FastMath.abs(iter.value());
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.size()<v.entries.size()?entries.iterator():v.entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
d+=iter.value()*entries.size()<v.entries.size()?v.entries:entries.get(iter.key());
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(!entries.containsKey(iter.key())){
 final double iter.value()=iter.value();
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(Double.isNaN(iter.value())){
return true;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
res[iter.key()]=iter.value();
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
res.setEntry(iter.key(),iter.value().divide(v.getEntry(iter.key())));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
res.setEntry(iter.key(),iter.value().multiply(v.getEntry(iter.key())));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(!iter.value().equals(iter.value())){
return false;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(Double.isNaN(iter.value())){
return false;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(Double.isInfinite(iter.value())){
infiniteFound=true;
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(Double.isNaN(iter.value())){
return false;
}
if(Double.isInfinite(iter.value())){
infiniteFound=true;
}

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
res=res.add(v.getEntry(iter.key()).multiply(iter.value()));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(entries.containsKey(iter.key())){
res.setEntry(iter.key(),entries.get(key).add(iter.value()));
}else {
res.setEntry(iter.key(),iter.value());
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(entries.containsKey(iter.key())){
res.setEntry(iter.key(),entries.get(key).subtract(iter.value()));
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
res.setEntry(iter.key()+virtualSize,iter.value());
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
temp=Double.doubleToLongBits(iter.value());
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
virtualSize=virtualSize*result+(int)(serialVersionUID^(temp>>>32));
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
virtualSize=virtualSize*result+virtualSize;
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
if(iter.key()>=virtualSize&&iter.key()<virtualSize){
res.setEntry(iter.key()-virtualSize,iter.value());
}
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_ZERO_TOLERANCE=DEFAULT_ZERO_TOLERANCE*d1+DEFAULT_ZERO_TOLERANCE*DEFAULT_ZERO_TOLERANCE;
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
DEFAULT_ZERO_TOLERANCE=DEFAULT_ZERO_TOLERANCE*d1+DEFAULT_ZERO_TOLERANCE*d2;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
DEFAULT_ZERO_TOLERANCE=DEFAULT_ZERO_TOLERANCE-DEFAULT_ZERO_TOLERANCE*d1;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iubd=virtualSize+1;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iubd=-virtualSize-1;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_ZERO_TOLERANCE=ZERO;
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
virtualSize=virtualSize*result+virtualSize;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
mapper.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
components=new ArrayList<ExpandableStatefulODE.SecondaryComponent>();
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
virtualSize=getDimension();
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
current=new Entry();
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
minRatio=DEFAULT_ZERO_TOLERANCE/DEFAULT_ZERO_TOLERANCE;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
minRatioPositions=new ArrayList<Integer>();
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
minRatio=DEFAULT_ZERO_TOLERANCE/DEFAULT_ZERO_TOLERANCE;
minRatioPositions=new ArrayList<Integer>();

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
current.setIndex(current.getIndex());
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
MatrixUtils.checkRowIndex(this,virtualSize);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
MatrixUtils.checkColumnIndex(this,virtualSize);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
MatrixUtils.checkRowIndex(this,virtualSize);
MatrixUtils.checkColumnIndex(this,virtualSize);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
virtualSize--;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
virtualSize<=virtualSize-virtualSize?iter.advance():null;
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
new ArrayList<BigFraction>().add(BigFraction.ONE);
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
new ArrayList<BigFraction>().add(new BigFraction(v-virtualSize,2));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
new ArrayList<BigFraction>().add(new BigFraction(2+v,2));
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
new ArrayList<BigFraction>().add(BigFraction.ONE);
new ArrayList<BigFraction>().add(new BigFraction(v-virtualSize,2));
new ArrayList<BigFraction>().add(new BigFraction(2+v,2));

iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
++virtualSize;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(virtualSize<0){
i=-i-2;
}
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(virtualSize>=polynomials.length){
i--;
}
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case SEQUENTIAL :

checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_ZERO_TOLERANCE=Math.max(biglsq,Math.max(ONE,DEFAULT_ZERO_TOLERANCE*d3)*(DEFAULT_ZERO_TOLERANCE*d4));
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_ZERO_TOLERANCE=Math.max(biglsq,Math.max(ONE,DEFAULT_ZERO_TOLERANCE/DEFAULT_ZERO_TOLERANCE*d4)*(DEFAULT_ZERO_TOLERANCE*d5));
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(current.getMax()>DEFAULT_ZERO_TOLERANCE||Double.isNaN(max)){
max=current.getMax();
}
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
DEFAULT_ZERO_TOLERANCE+=current.getSum();
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
super(virtualSize,virtualSize);
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.virtualSize=virtualSize;
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.entries=new OpenIntToDoubleHashMap(0.0);
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
virtualSize++;
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((virtualSize<0)||(end>=getDimension())){
throw new OutOfRangeException(LocalizedFormats.INDEX,end,0,dim-1);
}
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(virtualSize<virtualSize){
throw new NumberIsTooSmallException(LocalizedFormats.INITIAL_ROW_AFTER_FINAL_ROW,end,start,false);
}
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs((long)FastMath.floor(DEFAULT_ZERO_TOLERANCE)-DEFAULT_ZERO_TOLERANCE)<epsilon){
this.virtualSize=(int)a0;
this.virtualSize=1;
return ;
}
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
virtualSize+=1;
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isInfinite(DEFAULT_ZERO_TOLERANCE)){
throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_VALUE_CONVERSION);
}
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
totalWeight+=DEFAULT_ZERO_TOLERANCE;
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(virtualSize+1>virtualSize){
numElements=index+1;
}
checkVectorDimensions(v.getDimension());
OpenMapRealVector res=new OpenMapRealVector(this);
Iterator iter=entries.iterator();
while(iter.hasNext()){
iter.advance();
res.setEntry(iter.key(),iter.value()*v.getEntry(iter.key()));
}
return res;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.linear.OpenMapRealVector,362
org.apache.commons.math3.linear.OpenMapRealVector,363
org.apache.commons.math3.linear.OpenMapRealVector,364
org.apache.commons.math3.linear.OpenMapRealVector,365
org.apache.commons.math3.linear.OpenMapRealVector,374
org.apache.commons.math3.util.OpenIntToDoubleHashMap,281
UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

========
keys[index]=key;
if(states[index]!=FULL||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
states[index]=FULL;
if(states[index]!=FULL||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
keys[index]=key;
states[index]=FULL;
if(states[index]!=FULL||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]!=index||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]!=FULL||keys[index]==end){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]!=FULL||keys[index]==totalSize){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]!=FULL||keys[index]==length){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(values==null){
return Double.NaN;
}
if(states[index]!=FULL||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
values[PERTURB_SHIFT+index]=missingEntries;
if(states[index]!=FULL||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
current.setIndex(key);
if(states[index]!=FULL||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
advance(next);
if(states[index]!=FULL||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!Double.isNaN(this.getVcvElement(index,index))&&var>Double.MIN_VALUE){
return FastMath.sqrt(var);
}
if(states[index]!=FULL||keys[index]==key){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]!=index||keys[index]==end){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(true){
previous=values[index];
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
keys[index]=key;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
states[index]=FULL;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
keys[index]=key;
states[index]=FULL;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
perturb=PERTURB_SHIFT;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=j;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
while(true){
p=realEigenvalues[j];
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(values,0,values,0,secondaryState.length);
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
System.arraycopy(values,perturb,out.data,0,PERTURB_SHIFT);
}catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
keys[PERTURB_SHIFT]=(int)(serialVersionUID&0xffffffffl);
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
PERTURB_SHIFT++;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
j++;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(j>=seed.length){
j=0;
}
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
keys[PERTURB_SHIFT]=(int)(serialVersionUID&0xffffffffl);
j++;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
current.setIndex(j);
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
advance(next);
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!Double.isNaN(this.getVcvElement(index,index))&&var>Double.MIN_VALUE){
return FastMath.sqrt(var);
}
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(true){
++PERTURB_SHIFT;
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
PERTURB_SHIFT=(key+BLOCK_SIZE-1)/BLOCK_SIZE;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
j=(mask+BLOCK_SIZE-1)/BLOCK_SIZE;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(seed.length<v.length){
for(int index=seed.length;i<v.length;++i){
 final long keys[index-seed.length]=keys[i-seed.length];
v[i]=(int)((1812433253l*(l^(l>>30))+i)&0xffffffffL);
}
}
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
perturb=0;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
clear();
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index+1>key){
numElements=index+1;
}
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((PERTURB_SHIFT+index)>=internalArray.length){
expandTo(startIndex+(index+1));
}
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
values[PERTURB_SHIFT+index]=missingEntries;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
j+=j;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(j==-1){
throw new OutOfRangeException(missingEntries,values[0],yval[yval.length-1]);
}
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=index;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
PERTURB_SHIFT=(key+BLOCK_SIZE-1)/BLOCK_SIZE;
j=(mask+BLOCK_SIZE-1)/BLOCK_SIZE;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
missingEntries+=missingEntries;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=sn;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(true){
e[j-1]=values[j]/FastMath.hypot(values[j],missingEntries)*e[j-1];
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
values[j]=FastMath.hypot(values[j],missingEntries);
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(true){
j=probe(perturb,j);
index=sn&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(true){
j=probe(perturb,j);
index=j&cs;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(true){
t=missingEntries*U[i][j]+missingEntries*U[i][j+1];
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(true){
U[i][j]=missingEntries;
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(true){
t=missingEntries*U[i][j]+missingEntries*U[i][j+1];
U[i][j]=missingEntries;

j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
key++;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((values[j+1]-realEigenvalues[j])/(2*values[j])<0.0){
q=values[index]-realEigenvalues[j]+values[j]/(q-FastMath.sqrt(1+(values[j+1]-realEigenvalues[j])/(2*values[j])*q));
}else {
q=realEigenvalues[m]-realEigenvalues[j]+e[j]/(q+t);
}
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index==-1){
throw new OutOfRangeException(missingEntries,values[0],yval[yval.length-1]);
}
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
values=values;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
values[index]=missingEntries;
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
keys[index]=key;
while(true){
previous=values[index];
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
states[index]=FULL;
while(true){
previous=values[index];
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
keys[index]=key;
states[index]=FULL;
while(true){
previous=values[index];
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkRowIndex(PERTURB_SHIFT);
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkColumnIndex(perturb);
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkRowIndex(PERTURB_SHIFT);
checkColumnIndex(perturb);
while(true){
j=probe(perturb,j);
index=j&mask;
perturb>>=PERTURB_SHIFT;
if(states[index]!=FULL||keys[index]==key){
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.util.OpenIntToDoubleHashMap,282
org.apache.commons.math3.util.OpenIntToDoubleHashMap,283
org.apache.commons.math3.util.OpenIntToDoubleHashMap,285
org.apache.commons.math3.util.OpenIntToDoubleHashMap,292
UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + v.getDimension() - 1);
}

========
if(states[index]==FREE){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]==max){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==previous){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==index){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(states[index]==totalSize){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==numElements){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
current.setIndex(index);
if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
advance(next);
if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==length){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==end){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==low){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]!=FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(states[index]==iHeight){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(values==null){
return Double.NaN;
}
if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
values[PERTURB_SHIFT+index]=missingEntries;
if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!Double.isNaN(this.getVcvElement(index,index))&&var>Double.MIN_VALUE){
return FastMath.sqrt(var);
}
if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==n){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(oldStates[i]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[PERTURB_SHIFT]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Running ant (compile.tests)................................................ 
========
if(states[index]!=iHeight){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==FREE){
return index;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(states[index]==FREE){
return index;
}else if(states[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(states[index]==FREE){
return PERTURB_SHIFT;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(states[index]==FREE){
return firstRemoved;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==FREE){
return PERTURB_SHIFT;
}else if(states[index]==FULL&&keys[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
  - org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(states[index]==FREE){
return PERTURB_SHIFT;
}else if(states[index]==key){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(states[index]==key){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(states[index]==previous){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==max){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(containsKey(key,index)){
return true;
}
if(states[index]==FREE){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==index){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COUNT THESE===> Subject [_name=math, _id=29, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.linear.SparseRealVectorTest testEbeMultiplyMixedTypes
TESTING : org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(states[index]==totalSize){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==numElements){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==length){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
current.setIndex(index);
if(states[index]==FREE){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
advance(next);
if(states[index]==FREE){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==end){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==low){
return index;
}else if(states[index]==FULL){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(states[index]==FREE){
return index;
}else if(states[index]==high){
return changeIndexSign(index);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/math/math_29_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
Timeout!
