java version "1.7.0_231"
OpenJDK Runtime Environment (rhel-2.6.19.1.el7_6-x86_64 u231-b01)
OpenJDK 64-Bit Server VM (build 24.231-b01, mixed mode)
Check out e54a1c92 to /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/ OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff e54a1c92:f5bcba81..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Math-5b......................................... OK
Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK
Failing tests: 1
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2
PURIFY IS FALSE
=================================================
Project : math_5	start : 19/10/27 16:31

Field type inconsistancy 'optimizer' with types : MultivariateDifferentiableVectorOptimizer and MultivariateVectorOptimizer
Field type inconsistancy 'SUPER' with types : BaseAbstractMultivariateOptimizer<MultivariateFunction> and MultivariateOptimizer
Field type inconsistancy 'SUPER' with types : BaseAbstractMultivariateSimpleBoundsOptimizer<MultivariateFunction> and MultivariateOptimizer
Field type inconsistancy 'SUPER' with types : BaseAbstractMultivariateOptimizer<MultivariateFunction> and MultivariateOptimizer
Field type inconsistancy 'SUPER' with types : BaseAbstractMultivariateSimpleBoundsOptimizer<MultivariateFunction> and MultivariateOptimizer
Field type inconsistancy 'SUPER' with types : AbstractScalarDifferentiableOptimizer and GradientMultivariateOptimizer
Field type inconsistancy 'updateFormula' with types : ConjugateGradientFormula and Formula
Field type inconsistancy 'SUPER' with types : BaseAbstractMultivariateVectorOptimizer<DifferentiableMultivariateVectorFunction> and JacobianMultivariateVectorOptimizer
Field type inconsistancy 'SUPER' with types : BaseAbstractUnivariateOptimizer and UnivariateOptimizer
Field type inconsistancy 'SUPER' with types : AbstractLinearOptimizer and LinearOptimizer
Variable type inconsistancy of 'start' in method 'getSegments' with types : Vector3D and Vector2D
Variable type inconsistancy of 'end' in method 'getSegments' with types : Vector3D and Vector2D
Field type inconsistancy 'start' with types : Vector3D and Vector2D
Field type inconsistancy 'end' with types : Vector3D and Vector2D
readFailedTest: path is /mnt/nfs/work1/brun/mmotwani/SimFix/d4j-info/failed_tests/math/5.txt#ATTEMPTS: 1

# FAILING TESTS: 1
TIMEOUT : 18000000
===========
locations= [<org.apache.commons.math3.complex.Complex,305>, <org.apache.commons.math3.complex.Complex,1228>, <org.apache.commons.math3.complex.Complex,300>, <org.apache.commons.math3.complex.Complex,304>, <org.apache.commons.math3.complex.Complex,348>, <org.apache.commons.math3.complex.Complex,344>, <org.apache.commons.math3.complex.Complex,345>, <org.apache.commons.math3.complex.Complex,343>, <org.apache.commons.math3.complex.Complex,340>, <org.apache.commons.math3.complex.Complex,98>, <org.apache.commons.math3.complex.Complex,99>, <org.apache.commons.math3.complex.Complex,100>, <org.apache.commons.math3.complex.Complex,102>, <org.apache.commons.math3.complex.Complex,103>, <org.apache.commons.math3.complex.Complex,105>, <org.apache.commons.math3.complex.Complex,59>, <org.apache.commons.math3.complex.Complex,62>, <org.apache.commons.math3.complex.Complex,65>, <org.apache.commons.math3.complex.Complex,67>, <org.apache.commons.math3.complex.Complex,69>, <org.apache.commons.math3.complex.Complex,89>, <org.apache.commons.math3.complex.Complex,90>, <org.apache.commons.math3.complex.Complex,116>, <org.apache.commons.math3.complex.Complex,117>, <org.apache.commons.math3.complex.Complex,119>, <org.apache.commons.math3.complex.Complex,120>, <org.apache.commons.math3.complex.Complex,122>, <org.apache.commons.math3.complex.Complex,123>, <org.apache.commons.math3.complex.Complex,124>, <org.apache.commons.math3.complex.Complex,126>, <org.apache.commons.math3.complex.Complex,127>, <org.apache.commons.math3.complex.Complex,129>, <org.apache.commons.math3.complex.Complex,130>, <org.apache.commons.math3.complex.Complex,132>, <org.apache.commons.math3.complex.Complex,133>, <org.apache.commons.math3.complex.Complex,157>, <org.apache.commons.math3.complex.Complex,158>, <org.apache.commons.math3.complex.Complex,159>, <org.apache.commons.math3.complex.Complex,162>, <org.apache.commons.math3.complex.Complex,175>, <org.apache.commons.math3.complex.Complex,176>, <org.apache.commons.math3.complex.Complex,179>, <org.apache.commons.math3.complex.Complex,197>, <org.apache.commons.math3.complex.Complex,198>, <org.apache.commons.math3.complex.Complex,201>, <org.apache.commons.math3.complex.Complex,248>, <org.apache.commons.math3.complex.Complex,249>, <org.apache.commons.math3.complex.Complex,250>, <org.apache.commons.math3.complex.Complex,253>, <org.apache.commons.math3.complex.Complex,254>, <org.apache.commons.math3.complex.Complex,255>, <org.apache.commons.math3.complex.Complex,256>, <org.apache.commons.math3.complex.Complex,259>, <org.apache.commons.math3.complex.Complex,260>, <org.apache.commons.math3.complex.Complex,263>, <org.apache.commons.math3.complex.Complex,264>, <org.apache.commons.math3.complex.Complex,265>, <org.apache.commons.math3.complex.Complex,266>, <org.apache.commons.math3.complex.Complex,269>, <org.apache.commons.math3.complex.Complex,270>, <org.apache.commons.math3.complex.Complex,271>, <org.apache.commons.math3.complex.Complex,285>, <org.apache.commons.math3.complex.Complex,286>, <org.apache.commons.math3.complex.Complex,288>, <org.apache.commons.math3.complex.Complex,289>, <org.apache.commons.math3.complex.Complex,291>, <org.apache.commons.math3.complex.Complex,292>, <org.apache.commons.math3.complex.Complex,294>, <org.apache.commons.math3.complex.Complex,301>, <org.apache.commons.math3.complex.Complex,308>, <org.apache.commons.math3.complex.Complex,309>, <org.apache.commons.math3.complex.Complex,312>, <org.apache.commons.math3.complex.Complex,313>, <org.apache.commons.math3.complex.Complex,314>, <org.apache.commons.math3.complex.Complex,315>, <org.apache.commons.math3.complex.Complex,317>, <org.apache.commons.math3.complex.Complex,318>, <org.apache.commons.math3.complex.Complex,319>, <org.apache.commons.math3.complex.Complex,341>, <org.apache.commons.math3.complex.Complex,346>, <org.apache.commons.math3.complex.Complex,351>, <org.apache.commons.math3.complex.Complex,363>, <org.apache.commons.math3.complex.Complex,364>, <org.apache.commons.math3.complex.Complex,366>, <org.apache.commons.math3.complex.Complex,376>, <org.apache.commons.math3.complex.Complex,385>, <org.apache.commons.math3.complex.Complex,396>, <org.apache.commons.math3.complex.Complex,409>, <org.apache.commons.math3.complex.Complex,438>, <org.apache.commons.math3.complex.Complex,439>, <org.apache.commons.math3.complex.Complex,440>, <org.apache.commons.math3.complex.Complex,442>, <org.apache.commons.math3.complex.Complex,447>, <org.apache.commons.math3.complex.Complex,449>, <org.apache.commons.math3.complex.Complex,462>, <org.apache.commons.math3.complex.Complex,463>, <org.apache.commons.math3.complex.Complex,465>, <org.apache.commons.math3.complex.Complex,467>, <org.apache.commons.math3.complex.Complex,469>, <org.apache.commons.math3.complex.Complex,481>, <org.apache.commons.math3.complex.Complex,482>, <org.apache.commons.math3.complex.Complex,484>, <org.apache.commons.math3.complex.Complex,488>, <org.apache.commons.math3.complex.Complex,490>, <org.apache.commons.math3.complex.Complex,501>, <org.apache.commons.math3.complex.Complex,502>, <org.apache.commons.math3.complex.Complex,505>, <org.apache.commons.math3.complex.Complex,528>, <org.apache.commons.math3.complex.Complex,529>, <org.apache.commons.math3.complex.Complex,530>, <org.apache.commons.math3.complex.Complex,533>, <org.apache.commons.math3.complex.Complex,546>, <org.apache.commons.math3.complex.Complex,547>, <org.apache.commons.math3.complex.Complex,549>, <org.apache.commons.math3.complex.Complex,569>, <org.apache.commons.math3.complex.Complex,570>, <org.apache.commons.math3.complex.Complex,573>, <org.apache.commons.math3.complex.Complex,593>, <org.apache.commons.math3.complex.Complex,594>, <org.apache.commons.math3.complex.Complex,597>, <org.apache.commons.math3.complex.Complex,617>, <org.apache.commons.math3.complex.Complex,618>, <org.apache.commons.math3.complex.Complex,621>, <org.apache.commons.math3.complex.Complex,658>, <org.apache.commons.math3.complex.Complex,659>, <org.apache.commons.math3.complex.Complex,662>, <org.apache.commons.math3.complex.Complex,698>, <org.apache.commons.math3.complex.Complex,699>, <org.apache.commons.math3.complex.Complex,702>, <org.apache.commons.math3.complex.Complex,739>, <org.apache.commons.math3.complex.Complex,740>, <org.apache.commons.math3.complex.Complex,743>, <org.apache.commons.math3.complex.Complex,744>, <org.apache.commons.math3.complex.Complex,784>, <org.apache.commons.math3.complex.Complex,785>, <org.apache.commons.math3.complex.Complex,788>, <org.apache.commons.math3.complex.Complex,814>, <org.apache.commons.math3.complex.Complex,815>, <org.apache.commons.math3.complex.Complex,826>, <org.apache.commons.math3.complex.Complex,862>, <org.apache.commons.math3.complex.Complex,863>, <org.apache.commons.math3.complex.Complex,866>, <org.apache.commons.math3.complex.Complex,902>, <org.apache.commons.math3.complex.Complex,903>, <org.apache.commons.math3.complex.Complex,906>, <org.apache.commons.math3.complex.Complex,945>, <org.apache.commons.math3.complex.Complex,946>, <org.apache.commons.math3.complex.Complex,949>, <org.apache.commons.math3.complex.Complex,950>, <org.apache.commons.math3.complex.Complex,953>, <org.apache.commons.math3.complex.Complex,954>, <org.apache.commons.math3.complex.Complex,955>, <org.apache.commons.math3.complex.Complex,957>, <org.apache.commons.math3.complex.Complex,980>, <org.apache.commons.math3.complex.Complex,1016>, <org.apache.commons.math3.complex.Complex,1017>, <org.apache.commons.math3.complex.Complex,1019>, <org.apache.commons.math3.complex.Complex,1020>, <org.apache.commons.math3.complex.Complex,1022>, <org.apache.commons.math3.complex.Complex,1023>, <org.apache.commons.math3.complex.Complex,1026>, <org.apache.commons.math3.complex.Complex,1027>, <org.apache.commons.math3.complex.Complex,1028>, <org.apache.commons.math3.complex.Complex,1030>, <org.apache.commons.math3.complex.Complex,1067>, <org.apache.commons.math3.complex.Complex,1068>, <org.apache.commons.math3.complex.Complex,1070>, <org.apache.commons.math3.complex.Complex,1071>, <org.apache.commons.math3.complex.Complex,1073>, <org.apache.commons.math3.complex.Complex,1074>, <org.apache.commons.math3.complex.Complex,1076>, <org.apache.commons.math3.complex.Complex,1077>, <org.apache.commons.math3.complex.Complex,1078>, <org.apache.commons.math3.complex.Complex,1080>, <org.apache.commons.math3.complex.Complex,1104>, <org.apache.commons.math3.complex.Complex,1131>, <org.apache.commons.math3.complex.Complex,1132>, <org.apache.commons.math3.complex.Complex,1136>, <org.apache.commons.math3.complex.Complex,1138>, <org.apache.commons.math3.complex.Complex,1139>, <org.apache.commons.math3.complex.Complex,1140>, <org.apache.commons.math3.complex.Complex,1142>, <org.apache.commons.math3.complex.Complex,1143>, <org.apache.commons.math3.complex.Complex,1144>, <org.apache.commons.math3.complex.Complex,1148>, <org.apache.commons.math3.complex.Complex,1151>, <org.apache.commons.math3.complex.Complex,1152>, <org.apache.commons.math3.complex.Complex,1153>, <org.apache.commons.math3.complex.Complex,1154>, <org.apache.commons.math3.complex.Complex,1156>, <org.apache.commons.math3.complex.Complex,1157>, <org.apache.commons.math3.complex.Complex,1158>, <org.apache.commons.math3.complex.Complex,1159>, <org.apache.commons.math3.complex.Complex,1162>, <org.apache.commons.math3.complex.Complex,1176>, <org.apache.commons.math3.complex.Complex,1188>, <org.apache.commons.math3.complex.Complex,1190>, <org.apache.commons.math3.complex.Complex,1192>, <org.apache.commons.math3.complex.Complex,1202>, <org.apache.commons.math3.complex.Complex,1203>]
======================org.apache.commons.math3.complex.Complex,305
========
if(real==0.0&&imaginary==0.0){
return INF;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
org.apache.commons.math3.complex.Complex,1228
========
return 37*(17*MathUtils.hash(imaginary)+MathUtils.hash(real));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN){
return 7;
}
return "("+real;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return FastMath.abs(real)*FastMath.sqrt(1+real*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.complex.Complex,300
========
if(Double.isInfinite(real)||Double.isInfinite(imaginary)){
return INF;
}
if(isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
org.apache.commons.math3.complex.Complex,304
org.apache.commons.math3.complex.Complex,348
========
if(Double.isInfinite(real)||Double.isInfinite(imaginary)){
return INF;
}
if(c.isNaN){
return isNaN;
}else {
return (real==c.real)&&(imaginary==c.imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c.isNaN){
return FastMath.abs(imaginary)*FastMath.sqrt(1+imaginary/real*q);
return isNaN;
}else {
return (real==c.real)&&(imaginary==c.imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c.isNaN){
return isNaN;
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
return (real==c.real)&&(imaginary==c.imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.complex.Complex,344
========
if(other instanceof Complex){
if((Vector1D)other.isNaN()){
return this.isNaN();
}
Complex c=(Complex)other;
if(c.isNaN){
return isNaN;
}else {
return (real==c.real)&&(imaginary==c.imaginary);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(other instanceof Complex){
if((Vector3D)other.isNaN()){
return this.isNaN();
}
Complex c=(Complex)other;
if(c.isNaN){
return isNaN;
}else {
return (real==c.real)&&(imaginary==c.imaginary);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(other instanceof Complex){
if((Vector2D)other.isNaN()){
return this.isNaN();
}
Complex c=(Complex)other;
if(c.isNaN){
return isNaN;
}else {
return (real==c.real)&&(imaginary==c.imaginary);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(other instanceof Complex){
if((FieldVector3D<T>)other.isNaN()){
return this.isNaN();
}
Complex c=(Complex)other;
if(c.isNaN){
return isNaN;
}else {
return (real==c.real)&&(imaginary==c.imaginary);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(other instanceof Complex){
ret=thisOne.numerator.equals(rhs.numerator)&&thisOne.denominator.equals(rhs.denominator);
Complex c=(Complex)other;
if(c.isNaN){
return isNaN;
}else {
return (real==c.real)&&(imaginary==c.imaginary);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(other instanceof Complex){
if(isNaN()||(Dfp)other.isNaN()){
return false;
}
Complex c=(Complex)other;
if(c.isNaN){
return isNaN;
}else {
return (real==c.real)&&(imaginary==c.imaginary);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==other){
return true;
}
if(other instanceof Complex){
Complex c=(Complex)other;
if(c.isNaN){
return isNaN;
}else {
return (real==c.real)&&(imaginary==c.imaginary);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(data.length!=(RealVector)other.getDimension()){
return false;
}
if(other instanceof Complex){
Complex c=(Complex)other;
if(c.isNaN){
return isNaN;
}else {
return (real==c.real)&&(imaginary==c.imaginary);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((RealVector)other.isNaN()){
return this.isNaN();
}
if(other instanceof Complex){
Complex c=(Complex)other;
if(c.isNaN){
return isNaN;
}else {
return (real==c.real)&&(imaginary==c.imaginary);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.complex.Complex,345
org.apache.commons.math3.complex.Complex,343
org.apache.commons.math3.complex.Complex,340
========
if(this==other){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(other==null){
return true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(this==null){
return true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(other==null){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(this==null){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(this!=other){
return true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 0
TESTING : math_5
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(data.length==other){
return true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this!=other){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(this!=null){
return true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 0
TESTING : math_5
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(this!=null){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math3.complex.Complex,98
Find no block!
org.apache.commons.math3.complex.Complex,99
========
this.real=real;
this.imaginary=mu;
isNaN=Double.isNaN(real)||Double.isNaN(imaginary);
isInfinite=!isNaN&&(Double.isInfinite(real)||Double.isInfinite(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=real;
this.imaginary=sig;
isNaN=Double.isNaN(real)||Double.isNaN(imaginary);
isInfinite=!isNaN&&(Double.isInfinite(real)||Double.isInfinite(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=d;
this.imaginary=imaginary;
isNaN=Double.isNaN(real)||Double.isNaN(imaginary);
isInfinite=!isNaN&&(Double.isInfinite(real)||Double.isInfinite(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=xA;
this.imaginary=imaginary;
isNaN=Double.isNaN(real)||Double.isNaN(imaginary);
isInfinite=!isNaN&&(Double.isInfinite(real)||Double.isInfinite(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=xB;
this.imaginary=imaginary;
isNaN=Double.isNaN(real)||Double.isNaN(imaginary);
isInfinite=!isNaN&&(Double.isInfinite(real)||Double.isInfinite(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=a1;
this.imaginary=imaginary;
isNaN=Double.isNaN(real)||Double.isNaN(imaginary);
isInfinite=!isNaN&&(Double.isInfinite(real)||Double.isInfinite(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=b1;
this.imaginary=imaginary;
isNaN=Double.isNaN(real)||Double.isNaN(imaginary);
isInfinite=!isNaN&&(Double.isInfinite(real)||Double.isInfinite(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=a2;
this.imaginary=imaginary;
isNaN=Double.isNaN(real)||Double.isNaN(imaginary);
isInfinite=!isNaN&&(Double.isInfinite(real)||Double.isInfinite(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=b2;
this.imaginary=imaginary;
isNaN=Double.isNaN(real)||Double.isNaN(imaginary);
isInfinite=!isNaN&&(Double.isInfinite(real)||Double.isInfinite(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=a3;
this.imaginary=imaginary;
isNaN=Double.isNaN(real)||Double.isNaN(imaginary);
isInfinite=!isNaN&&(Double.isInfinite(real)||Double.isInfinite(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=b3;
this.imaginary=imaginary;
isNaN=Double.isNaN(real)||Double.isNaN(imaginary);
isInfinite=!isNaN&&(Double.isInfinite(real)||Double.isInfinite(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=a4;
this.imaginary=imaginary;
isNaN=Double.isNaN(real)||Double.isNaN(imaginary);
isInfinite=!isNaN&&(Double.isInfinite(real)||Double.isInfinite(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=b4;
this.imaginary=imaginary;
isNaN=Double.isNaN(real)||Double.isNaN(imaginary);
isInfinite=!isNaN&&(Double.isInfinite(real)||Double.isInfinite(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=real;
this.imaginary=r;
isNaN=Double.isNaN(real)||Double.isNaN(imaginary);
isInfinite=!isNaN&&(Double.isInfinite(real)||Double.isInfinite(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=scaled;
this.imaginary=imaginary;
isNaN=Double.isNaN(real)||Double.isNaN(imaginary);
isInfinite=!isNaN&&(Double.isInfinite(real)||Double.isInfinite(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.complex.Complex,100
org.apache.commons.math3.complex.Complex,102
org.apache.commons.math3.complex.Complex,103
org.apache.commons.math3.complex.Complex,105
Find no block!
org.apache.commons.math3.complex.Complex,59
Find no block!
org.apache.commons.math3.complex.Complex,62
Find no block!
org.apache.commons.math3.complex.Complex,65
Find no block!
org.apache.commons.math3.complex.Complex,67
Find no block!
org.apache.commons.math3.complex.Complex,69
Find no block!
org.apache.commons.math3.complex.Complex,89
org.apache.commons.math3.complex.Complex,90
Find no block!
org.apache.commons.math3.complex.Complex,116
========
if(isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isInfinite(real)||Double.isInfinite(imaginary)){
return INF;
}
if(isNaN){
return Double.NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.complex.Complex,117
org.apache.commons.math3.complex.Complex,119
========
if(isInfinite()){
return Double.NEGATIVE_INFINITY;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math3.complex.Complex,120
org.apache.commons.math3.complex.Complex,122
========
if(real==0.0){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tolerance==0.0){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(s==0.0){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(p==0.0){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(m==0.0){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(serialVersionUID);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(delta==0.0){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0&&imaginary==0.0){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(imaginary==1.0E-5){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real>=0.0){
return createComplex(FastMath.sqrt((FastMath.abs(real)+abs())/2.0),imaginary/(2.0*t));
}else {
return createComplex(FastMath.abs(imaginary)/(2.0*t),FastMath.copySign(1.0,imaginary)*t);
}
if(imaginary==0.0){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon==0.0){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rLimit==0.0){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tol==0.0){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(costRelativeTolerance==0.0){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(preRed==0.0){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ratio==0.0){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dt==0.0){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lqnorm==0.0){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sigma==0.0){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dnorm==0.0){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==Integer.MIN_VALUE){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(imaginary==Long.MIN_VALUE){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(serialVersionUID==0||serialVersionUID==0){
return 0;
}
if(imaginary==0.0){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(serialVersionUID==0||serialVersionUID==0){
return 0;
}
if(imaginary==Long.MIN_VALUE){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(imaginary==2.2204E-16){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(delta==2.2204E-16){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN){
return NaN;
}
if(imaginary==0.0){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isInfinite(real)||Double.isInfinite(imaginary)){
return INF;
}
if(imaginary==0.0){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==AllowedSolution.ANY_SIDE){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0.0){
return FastMath.abs(real);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tolerance==0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(s==0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(p==0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(m==0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(serialVersionUID);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(delta==0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0&&imaginary==0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real==1.0E-5){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real>=0.0){
return createComplex(FastMath.sqrt((FastMath.abs(real)+abs())/2.0),imaginary/(2.0*t));
}else {
return createComplex(FastMath.abs(imaginary)/(2.0*t),FastMath.copySign(1.0,imaginary)*t);
}
if(real==0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon==0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rLimit==0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tol==0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(costRelativeTolerance==0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(preRed==0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ratio==0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dt==0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lqnorm==0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sigma==0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dnorm==0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==Integer.MIN_VALUE){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real==Long.MIN_VALUE){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(serialVersionUID==0||serialVersionUID==0){
return 0;
}
if(real==0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(serialVersionUID==0||serialVersionUID==0){
return 0;
}
if(real==Long.MIN_VALUE){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real==2.2204E-16){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(delta==2.2204E-16){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN){
return NaN;
}
if(real==0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real!=0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((real-1)==0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(absAi==0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((real-1)!=0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isInfinite(real)||Double.isInfinite(imaginary)){
return INF;
}
if(real==0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==AllowedSolution.ANY_SIDE){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(abs==0.0){
return FastMath.abs(imaginary);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<=FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(imaginary)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(real)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(imaginary)<FastMath.abs(real)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=b/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
denominator=FastMath.abs(real)>FastMath.abs(q-FastMath.sqrt(imaginary))?real:q-FastMath.sqrt(imaginary);
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(computeObjectiveValue(real))){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=c/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/c;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/d;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=d/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=c/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/d;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=d/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/c;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=rkk/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/rkk;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=rkk/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/rkk;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
sin=1.0/FastMath.sqrt(1.0+q*cotan);
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
cos=1.0/FastMath.sqrt(1.0+imaginary*tan);
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(shift.x==0.0){
break;
}
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(imaginary)<=FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real-imaginary)<FastMath.max(imaginary*FastMath.abs(real),imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real-imaginary)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.max(imaginary*FastMath.abs(real),imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=tMed/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/tMin;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(serialVersionUID)<FastMath.abs(serialVersionUID)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(serialVersionUID)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(serialVersionUID)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(MIN_VALUE==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(MIN_VALUE==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(serialVersionUID)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(serialVersionUID)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.abs(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.abs(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(MIN_VALUE==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(serialVersionUID)+FastMath.abs(serialVersionUID);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(serialVersionUID)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.abs(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(MIN_VALUE==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(serialVersionUID)+FastMath.abs(serialVersionUID);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(serialVersionUID)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.abs(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(serialVersionUID)*FastMath.abs(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(serialVersionUID)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.abs(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(serialVersionUID)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(serialVersionUID)+FastMath.abs(serialVersionUID);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.abs(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(serialVersionUID)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(serialVersionUID)*FastMath.abs(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(serialVersionUID)+FastMath.abs(serialVersionUID);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(serialVersionUID)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.abs(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(serialVersionUID)+FastMath.abs(serialVersionUID);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(serialVersionUID)+FastMath.abs(serialVersionUID);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.abs(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(serialVersionUID)+FastMath.abs(serialVersionUID);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(serialVersionUID)+FastMath.abs(serialVersionUID);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(serialVersionUID)*FastMath.abs(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(serialVersionUID)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(serialVersionUID)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(serialVersionUID)*FastMath.abs(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(serialVersionUID)*FastMath.abs(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.abs(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(serialVersionUID)*FastMath.abs(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(serialVersionUID)+FastMath.abs(serialVersionUID);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.abs(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(serialVersionUID)*FastMath.abs(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(serialVersionUID)+FastMath.abs(serialVersionUID);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(serialVersionUID)*FastMath.abs(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(serialVersionUID)*FastMath.abs(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(serialVersionUID)*FastMath.abs(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<getMinStep()){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imaginary=FastMath.max(h,1.0E-12*FastMath.abs(real));
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(q)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.isNaN(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.sqrt(FastMath.abs(real-q*meanX))<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.sqrt(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=scaledX/scaledX;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=scaledX/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/scaledX;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return ((q-20)*scaledX2+120)/120;
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(imaginary-real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(imaginary-real)<=FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(serialVersionUID-imaginary)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=x/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/mu;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
ret=q*imaginary;
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.ulp(1.0)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.ulp(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.isNaN(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=sumYY/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/sumY;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(q<0){
yInt=SGN_MASK_FLOAT-yInt;
}
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(q<0){
yInt=SGN_MASK-yInt;
}
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(q==Long.MIN_VALUE){
throw new MathArithmeticException(LocalizedFormats.LCM_OVERFLOW_64_BITS,serialVersionUID,serialVersionUID);
}
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(ONE);
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.isInfinite(real)<FastMath.isInfinite(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.isInfinite(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.isInfinite(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN){
return NaN;
}
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return NaN;
}
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isInfinite(real)){
return !isInfinite()?ZERO:NaN;
}
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isInfinite(real)||Double.isInfinite(imaginary)){
return INF;
}
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/d4;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/d4;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/d4;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/d4;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(q||factor.isNaN){
return NaN;
}
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(ONE);
if(FastMath.isInfinite(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(ONE);
if(FastMath.abs(real)<FastMath.isInfinite(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(ONE);
if(FastMath.isInfinite(real)<FastMath.isInfinite(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary>20.0){
return createComplex(0.0,1.0);
}
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary<-20.0){
return createComplex(0.0,-1.0);
}
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>20.0){
return createComplex(1.0,0.0);
}
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real<-20.0){
return createComplex(-1.0,0.0);
}
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0){
return imaginary;
}
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real==1){
return q;
}
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
error=FastMath.sqrt(imaginary/scale.length)*errfac[currentDegree-5];
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
error=FastMath.sqrt(imaginary/scale.length)*errfac[currentDegree-5];
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imaginary=FastMath.sqrt(dxNorm);
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(f==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=TWO_PI/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.log(real)<FastMath.log(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.log(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.log(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
this.real=k;
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=m;
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=b;
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=q;
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=a;
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
real=1/imaginary;
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=gw/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=gw/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/curv;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/curv;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.sqrt(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=gw/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/curv;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=gw/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/HALF;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/curv;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[DELTA.length][0]=1.0;
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(q<=0){
throw new NotStrictlyPositiveException(LocalizedFormats.SCALE,scale);
}
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=shape;
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.q=scale;
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.imaginary=imaginary;
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.imaginary=real+Gamma.LANCZOS_G;
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.imaginary=real*FastMath.sqrt(FastMath.E/(2.0*FastMath.PI))/Gamma.lanczos(shape);
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.imaginary=this.imaginary/q*FastMath.pow(imaginary,-real)*FastMath.exp(shape+Gamma.LANCZOS_G);
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.imaginary=real+Gamma.LANCZOS_G-FastMath.log(Double.MAX_VALUE);
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.imaginary=FastMath.log(Double.MAX_VALUE)/(real-1.0);
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary>20.0){
return createComplex(0.0,1.0);
}
if(FastMath.abs(real)<FastMath.isInfinite(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary<-20.0){
return createComplex(0.0,-1.0);
}
if(FastMath.abs(real)<FastMath.isInfinite(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary>20.0){
return createComplex(0.0,1.0);
}
if(imaginary<-20.0){
return createComplex(0.0,-1.0);
}
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary>20.0){
return createComplex(0.0,1.0);
}
if(imaginary<-20.0){
return createComplex(0.0,-1.0);
}
if(FastMath.abs(real)<FastMath.isInfinite(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>20.0){
return createComplex(1.0,0.0);
}
if(FastMath.abs(real)<FastMath.isInfinite(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real<-20.0){
return createComplex(-1.0,0.0);
}
if(FastMath.abs(real)<FastMath.isInfinite(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>20.0){
return createComplex(1.0,0.0);
}
if(real<-20.0){
return createComplex(-1.0,0.0);
}
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>20.0){
return createComplex(1.0,0.0);
}
if(real<-20.0){
return createComplex(-1.0,0.0);
}
if(FastMath.abs(real)<FastMath.isInfinite(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(imaginary)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/d4;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(imaginary)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/d4;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(imaginary)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/d4;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/d4;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=gw/curv;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=gw/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/curv;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.sqrt(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=gw/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=gw/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/HALF;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/curv;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=gw/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=gw/curv;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.sqrt(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=gw/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=gw/HALF;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.sqrt(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/curv;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/curv;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/HALF;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.sqrt(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/curv;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.sqrt(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/HALF;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=gw/curv;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=gw/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=gw/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=gw/curv;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.sqrt(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=gw/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=gw/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=gw/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=gw/HALF;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=gw/curv;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/curv;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.sqrt(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=gw/curv;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=gw/curv;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/HALF;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.sqrt(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=gw/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/curv;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.sqrt(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=gw/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/HALF;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/curv;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=gw/curv;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.sqrt(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/curv;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=gw/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/curv;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=gw/HALF;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.sqrt(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=gw/curv;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.sqrt(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=gw/HALF;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.sqrt(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/curv;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/curv;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.sqrt(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/curv;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/HALF;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=gw/curv;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=gw/curv;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.sqrt(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=gw/curv;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=gw/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=gw/curv;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=gw/HALF;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.sqrt(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=gw/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=gw/curv;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.sqrt(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=gw/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=gw/HALF;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.sqrt(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=gw/curv;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/curv;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.sqrt(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=gw/curv;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/HALF;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.sqrt(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/curv;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=gw/curv;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.sqrt(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/curv;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=gw/HALF;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
sin=1.0/FastMath.sqrt(1.0+q*cotan);
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=rkk/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=rkk/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
cos=1.0/FastMath.sqrt(1.0+imaginary*tan);
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
sin=1.0/FastMath.sqrt(1.0+q*cotan);
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/rkk;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
cos=1.0/FastMath.sqrt(1.0+imaginary*tan);
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/rkk;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
sin=1.0/FastMath.sqrt(1.0+q*cotan);
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
cos=1.0/FastMath.sqrt(1.0+imaginary*tan);
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
sin=1.0/FastMath.sqrt(1.0+q*cotan);
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=rkk/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/rkk;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=rkk/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
cos=1.0/FastMath.sqrt(1.0+imaginary*tan);
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/rkk;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
sin=1.0/FastMath.sqrt(1.0+q*cotan);
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=rkk/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
cos=1.0/FastMath.sqrt(1.0+imaginary*tan);
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
sin=1.0/FastMath.sqrt(1.0+q*cotan);
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
cos=1.0/FastMath.sqrt(1.0+imaginary*tan);
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/rkk;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(imaginary)){
sin=1.0/FastMath.sqrt(1.0+q*cotan);
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=rkk/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
cos=1.0/FastMath.sqrt(1.0+imaginary*tan);
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/rkk;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real<=0){
throw new NotStrictlyPositiveException(abs);
}
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imaginary=real;
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.imaginary=epsilon;
if(FastMath.abs(real)<FastMath.abs(imaginary)){
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);
}else {
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.complex.Complex,123
org.apache.commons.math3.complex.Complex,124
org.apache.commons.math3.complex.Complex,126
========
if(lhs==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(delta==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return q+real;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(p==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(m==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=b/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=rkk/rkk;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=rkk/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/rkk;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return imaginary+real;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tolerance==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=eps/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/t;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=scalAbsoluteTolerance/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/scalRelativeTolerance;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/yScale;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=scalAbsoluteTolerance/scalRelativeTolerance;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=scalAbsoluteTolerance/yScale;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=dt2/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=dt3/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=dt1/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/d12;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/d23;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.abs(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/tol;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(serialVersionUID);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=t1/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/t0;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dt==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(absX==0.0){
return FastMath.abs(real);
}
double q=real/absX;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(absX==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==1.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/absX;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return q*tmp;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=fX/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=fVal/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/relativeThreshold;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/absoluteThreshold;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
boolean q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==1.0E-5){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=tmp2/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/tmp1;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=fX/relativeThreshold;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=fX/absoluteThreshold;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
boolean q=fX/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=fVal/relativeThreshold;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=fVal/absoluteThreshold;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
boolean q=fVal/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
boolean q=real/relativeThreshold;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
boolean q=real/absoluteThreshold;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
boolean q=fX/relativeThreshold;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
boolean q=fX/absoluteThreshold;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
boolean q=fVal/relativeThreshold;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
boolean q=fVal/absoluteThreshold;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return 37*(17*MathUtils.hash(imaginary)+MathUtils.hash(real));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
if(isNaN){
return 7;
}
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
if(isNaN){
return 7;
}
return 37*(17*MathUtils.hash(imaginary)+MathUtils.hash(real));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=dx1/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=dy2/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/dx2;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/dy1;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.sin(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(imaginary==0.0){
return FastMath.sqrt(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(q==1){
return imaginary;
}
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(p==0.0){
return FastMath.sqrt(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.floor(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real==0.0&&imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/ak2;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/akk;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/alpha;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/y1;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/y2;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/y3;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tol==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(costRelativeTolerance==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(preRed==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ratio==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dnorm==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN){
return NaN;
}
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||Double.isNaN(q)){
return NaN;
}
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=sumYY/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/sumY;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=n1/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=n2/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=c1/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.isNaN(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(serialVersionUID<0){
xInt=SGN_MASK-xInt;
}
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
boolean q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.isNaN(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(ArithmeticUtils.mulAndCheck(serialVersionUID/gcd(a,serialVersionUID),b))==Long.MIN_VALUE){
throw new MathArithmeticException(LocalizedFormats.LCM_OVERFLOW_64_BITS,serialVersionUID,serialVersionUID);
}
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=x/x;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=x/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/x;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=y/y;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=y/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/y;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(ONE);
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||factor.isNaN){
return NaN;
}
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isInfinite){
real=-h;
}
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==0.0){
return FastMath.abs(real);
}
double q=x/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/mu;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.sqrt(real/q/FastMath.PI)*FastMath.exp(-f)/q;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.sqrt(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.exp(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=x/imaginary;
return FastMath.sqrt(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=x/imaginary;
return FastMath.exp(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumyy==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.sqrt(2.0*q)*FastMath.sin(imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sin(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.sqrt(imaginary)*FastMath.sin(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=mu/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/k;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/sigma;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q=1.0/k;
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=n1/n1;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=n2/n2;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=v1/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=v2/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/n1;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/n2;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=t0/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/epsilon;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=cXX/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=cos/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/cXY;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/sin;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lmPar==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
long q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return 2*FastMath.asin(FastMath.sqrt(imaginary*q1+q*q2+real*q3));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.asin(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=phi/phi;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=alpha/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/phi;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=phi/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/alphaPhi;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=PI/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/beta;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=n/n;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=n/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/m;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/n;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
int q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(q==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=lambda/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/delta;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=TWO_PI/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=factor2/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/mMinusX;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(u==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tol2==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(curv==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gw==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=n/m;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return (q*moment.m3)/((n0-1)*(n0-2));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=tmp2/tmp1;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(abs==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real<MIN_RELATIVE_TOLERANCE){
throw new NumberIsTooSmallException(rel,MIN_RELATIVE_TOLERANCE,true);
}
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q=real;
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
real=imaginary;
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real<MIN_RELATIVE_TOLERANCE){
throw new NumberIsTooSmallException(rel,MIN_RELATIVE_TOLERANCE,true);
}
if(abs==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q=real;
if(abs==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
real=imaginary;
if(abs==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real<MIN_RELATIVE_TOLERANCE){
throw new NumberIsTooSmallException(rel,MIN_RELATIVE_TOLERANCE,true);
}
q=real;
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real<MIN_RELATIVE_TOLERANCE){
throw new NumberIsTooSmallException(rel,MIN_RELATIVE_TOLERANCE,true);
}
real=imaginary;
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q=real;
real=imaginary;
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real<MIN_RELATIVE_TOLERANCE){
throw new NumberIsTooSmallException(rel,MIN_RELATIVE_TOLERANCE,true);
}
q=real;
if(abs==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real<MIN_RELATIVE_TOLERANCE){
throw new NumberIsTooSmallException(rel,MIN_RELATIVE_TOLERANCE,true);
}
real=imaginary;
if(abs==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q=real;
real=imaginary;
if(abs==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real<MIN_RELATIVE_TOLERANCE){
throw new NumberIsTooSmallException(rel,MIN_RELATIVE_TOLERANCE,true);
}
q=real;
real=imaginary;
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real<MIN_RELATIVE_TOLERANCE){
throw new NumberIsTooSmallException(rel,MIN_RELATIVE_TOLERANCE,true);
}
q=real;
real=imaginary;
if(abs==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q=imaginary;
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=epsilon;
if(imaginary==0.0){
return FastMath.abs(real);
}
double q=real/imaginary;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.complex.Complex,127
org.apache.commons.math3.complex.Complex,129
org.apache.commons.math3.complex.Complex,130
org.apache.commons.math3.complex.Complex,132
========
if(imaginary==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lhs==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(delta==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return q+imaginary;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(p==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(m==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=b/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=rkk/rkk;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=rkk/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/rkk;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(imaginary)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return real+imaginary;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tolerance==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=eps/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/t;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=scalAbsoluteTolerance/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/scalRelativeTolerance;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/yScale;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=scalAbsoluteTolerance/scalRelativeTolerance;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=scalAbsoluteTolerance/yScale;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=dt2/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=dt3/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=dt1/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/d12;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/d23;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.abs(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/tol;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(serialVersionUID);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=t1/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/t0;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dt==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(absX==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/absX;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(absX==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==1.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/absX;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return q*tmp;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=fX/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=fVal/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/relativeThreshold;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/absoluteThreshold;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
boolean q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=x/x;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=x/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/x;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(s2==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==1.0E-5){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=tmp2/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/tmp1;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=fX/relativeThreshold;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=fX/absoluteThreshold;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
boolean q=fX/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=fVal/relativeThreshold;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=fVal/absoluteThreshold;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
boolean q=fVal/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
boolean q=imaginary/relativeThreshold;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
boolean q=imaginary/absoluteThreshold;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
boolean q=fX/relativeThreshold;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
boolean q=fX/absoluteThreshold;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
boolean q=fVal/relativeThreshold;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
boolean q=fVal/absoluteThreshold;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return 37*(17*MathUtils.hash(imaginary)+MathUtils.hash(real));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
if(isNaN){
return 7;
}
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
if(isNaN){
return 7;
}
return 37*(17*MathUtils.hash(imaginary)+MathUtils.hash(real));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=dx1/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=dy2/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/dx2;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/dy1;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.sin(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.floor(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real==0.0&&imaginary==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real!=0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(s==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/ak2;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/akk;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/alpha;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/y1;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/y2;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/y3;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tol==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sigma==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(costRelativeTolerance==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(preRed==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ratio==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dnorm==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(ONE);
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c2==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isInfinite(real)||Double.isInfinite(imaginary)){
return INF;
}
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=sumYY/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/sumY;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=n1/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=n2/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=x1/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/c1;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.isNaN(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(serialVersionUID<0){
xInt=SGN_MASK-xInt;
}
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
boolean q=imaginary/real;
return FastMath.abs(real)*FastMath.isNaN(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(ArithmeticUtils.mulAndCheck(serialVersionUID/gcd(a,serialVersionUID),b))==Long.MIN_VALUE){
throw new MathArithmeticException(LocalizedFormats.LCM_OVERFLOW_64_BITS,serialVersionUID,serialVersionUID);
}
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=y/y;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=y/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/y;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(y==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isInfinite(q)||Double.isInfinite(imaginary)){
return INF;
}
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isInfinite){
imaginary=-h;
}
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==2.2204E-16){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(delta==2.2204E-16){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==0.0){
return FastMath.abs(imaginary);
}
double q=x/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/mu;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.sqrt(imaginary/q/FastMath.PI)*FastMath.exp(-f)/q;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.sqrt(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.exp(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=x/real;
return FastMath.sqrt(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=x/real;
return FastMath.exp(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumyy==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.sqrt(2.0*real)*FastMath.sin(q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sin(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.sqrt(real)*FastMath.sin(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=mu/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/k;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/sigma;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q=1.0/k;
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=n1/n1;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=n2/n2;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=v1/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=v2/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/n1;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/n2;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=t0/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/epsilon;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=cXX/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=cos/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/cXY;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/sin;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lmPar==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(eigen==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(angbd==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(temp==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
long q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return 2*FastMath.asin(FastMath.sqrt(real*q1+q*q2+imaginary*q3));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.asin(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=phi/phi;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=alpha/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/phi;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=phi/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/alphaPhi;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=PI/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/beta;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=n/n;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=n/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/m;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/n;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
int q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(q==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=lambda/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/delta;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=FastMath.sqrt(this.beta);
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.imaginary=this.imaginary;
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.q=imaginary;
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
real=Math.sqrt(temp);
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=TWO_PI/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=factor2/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/mMinusX;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(t==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(u==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tol2==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(curv==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gw==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=n/m;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
real=Math.sqrt(temp);
if(temp==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return (q*moment.m3)/((n0-1)*(n0-2));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(s!=0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=tmp2/tmp1;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(abs==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary<MIN_RELATIVE_TOLERANCE){
throw new NumberIsTooSmallException(rel,MIN_RELATIVE_TOLERANCE,true);
}
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q=imaginary;
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imaginary=real;
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary<MIN_RELATIVE_TOLERANCE){
throw new NumberIsTooSmallException(rel,MIN_RELATIVE_TOLERANCE,true);
}
if(abs==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q=imaginary;
if(abs==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imaginary=real;
if(abs==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary<MIN_RELATIVE_TOLERANCE){
throw new NumberIsTooSmallException(rel,MIN_RELATIVE_TOLERANCE,true);
}
q=imaginary;
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary<MIN_RELATIVE_TOLERANCE){
throw new NumberIsTooSmallException(rel,MIN_RELATIVE_TOLERANCE,true);
}
imaginary=real;
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q=imaginary;
imaginary=real;
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary<MIN_RELATIVE_TOLERANCE){
throw new NumberIsTooSmallException(rel,MIN_RELATIVE_TOLERANCE,true);
}
q=imaginary;
if(abs==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary<MIN_RELATIVE_TOLERANCE){
throw new NumberIsTooSmallException(rel,MIN_RELATIVE_TOLERANCE,true);
}
imaginary=real;
if(abs==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q=imaginary;
imaginary=real;
if(abs==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary<MIN_RELATIVE_TOLERANCE){
throw new NumberIsTooSmallException(rel,MIN_RELATIVE_TOLERANCE,true);
}
q=imaginary;
imaginary=real;
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary<MIN_RELATIVE_TOLERANCE){
throw new NumberIsTooSmallException(rel,MIN_RELATIVE_TOLERANCE,true);
}
q=imaginary;
imaginary=real;
if(abs==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q=real;
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.imaginary=epsilon;
if(real==0.0){
return FastMath.abs(imaginary);
}
double q=imaginary/real;
return FastMath.abs(real)*FastMath.sqrt(1+q*q);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.complex.Complex,133
org.apache.commons.math3.complex.Complex,157
========
MathUtils.checkNotNull(addend);
if(isNaN||subtrahend.isNaN){
return NaN;
}
return createComplex(real+addend.getReal(),imaginary+addend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(real-addend.getReal(),imaginary-subtrahend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(real,-imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
if(isNaN){
return NaN;
}
return createComplex(real+addend.getReal(),imaginary+addend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
if(isNaN){
return NaN;
}
return createComplex(real,-imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(-real,-imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
if(isNaN){
return NaN;
}
return createComplex(-real,-imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(addend);
if(isNaN||divisor.isNaN){
return NaN;
}
return createComplex(real+addend.getReal(),imaginary+addend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(FastMath.log(abs()),FastMath.atan2(imaginary,real));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
if(isNaN){
return NaN;
}
return createComplex(FastMath.log(abs()),FastMath.atan2(imaginary,real));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
if(isNaN||Double.isNaN(addend)){
return NaN;
}
return createComplex(real+addend.getReal(),imaginary+addend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(FastMath.cosh(real)*FastMath.cos(imaginary),FastMath.sinh(real)*FastMath.sin(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
if(isNaN){
return NaN;
}
return createComplex(FastMath.cosh(real)*FastMath.cos(imaginary),FastMath.sinh(real)*FastMath.sin(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(FastMath.sin(real)*FastMath.cosh(imaginary),FastMath.cos(real)*FastMath.sinh(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
if(isNaN){
return NaN;
}
return createComplex(FastMath.sin(real)*FastMath.cosh(imaginary),FastMath.cos(real)*FastMath.sinh(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(FastMath.sinh(real)*FastMath.cos(imaginary),FastMath.cosh(real)*FastMath.sin(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
if(isNaN){
return NaN;
}
return createComplex(FastMath.sinh(real)*FastMath.cos(imaginary),FastMath.cosh(real)*FastMath.sin(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(FastMath.cos(real)*FastMath.cosh(imaginary),-FastMath.sin(real)*FastMath.sinh(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
if(isNaN){
return NaN;
}
return createComplex(FastMath.cos(real)*FastMath.cosh(imaginary),-FastMath.sin(real)*FastMath.sinh(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(addend);
if(isNaN||factor.isNaN){
return NaN;
}
return createComplex(real+addend.getReal(),imaginary+addend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(real*factor.real-imaginary*factor.imaginary,real*factor.imaginary+imaginary*factor.real);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
if(Double.isInfinite(real)||Double.isInfinite(imaginary)){
return INF;
}
return createComplex(real+addend.getReal(),imaginary+addend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(addend);
if(isNaN||factor.isNaN){
return NaN;
}
if(Double.isInfinite(real)||Double.isInfinite(imaginary)){
return INF;
}
return createComplex(real+addend.getReal(),imaginary+addend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(FastMath.exp(real)*FastMath.cos(imaginary),expReal*FastMath.sin(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
if(isNaN){
return NaN;
}
if(Double.isInfinite(real)||Double.isInfinite(imaginary)){
return INF;
}
return createComplex(real+addend.getReal(),imaginary+addend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lower.length!=upper.length){
throw new DimensionMismatchException(lower.length,upper.length);
}
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(real+addend.getReal(),imaginary+addend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(1.0/(imaginary*imaginary/real+real)*imaginary/real,-scale);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(1.0/(imaginary*imaginary/real+real),-scale*imaginary/real);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(0.0,-1.0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(-1.0,0.0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return this.add(I).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,0.0)));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
if(isNaN){
return NaN;
}
return this.add(I).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,0.0)));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a.length==0||c.length==0){
throw new NoDataException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);
}
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(real+addend.getReal(),imaginary+addend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a.length!=c.length+1){
throw new DimensionMismatchException(LocalizedFormats.ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1,a.length,c.length);
}
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(real+addend.getReal(),imaginary+addend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(source.cachedPivots!=null){
System.arraycopy(source.cachedPivots,0,dest.cachedPivots,0,source.cachedPivots.length);
}
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(real+addend.getReal(),imaginary+addend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dest.quantile=source.quantile;
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(real+addend.getReal(),imaginary+addend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v1.length+v2.length==0){
throw new ZeroException(LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT);
}
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(real+addend.getReal(),imaginary+addend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return this.add(this.sqrt1z().multiply(I)).log().multiply(I.negate());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
if(isNaN){
return NaN;
}
return this.add(this.sqrt1z().multiply(I)).log().multiply(I.negate());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return sqrt1z().add(this.multiply(I)).log().multiply(I.negate());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
if(isNaN){
return NaN;
}
return sqrt1z().add(this.multiply(I)).log().multiply(I.negate());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(coefficients.length==0){
throw new NoDataException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);
}
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(real+addend.getReal(),imaginary+addend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(d.length==0){
throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
}
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(real+addend.getReal(),imaginary+addend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix.length==0){
throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
}
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(real+addend.getReal(),imaginary+addend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(real+addend.getReal(),imaginary+addend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c.length==0){
throw new NoDataException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);
}
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(real+addend.getReal(),imaginary+addend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(addend);
if(length||addend.isNaN){
return NaN;
}
return createComplex(real+addend.getReal(),imaginary+addend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(addend);
if(n||addend.isNaN){
return NaN;
}
return createComplex(real+addend.getReal(),imaginary+addend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(coefficients.length==1){
return new double[]{0};
}
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(real+addend.getReal(),imaginary+addend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(d.length==0){
throw new ZeroException(LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT);
}
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(real+addend.getReal(),imaginary+addend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return this.log().multiply(addend).exp();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.multiply(addend);
if(isNaN||addend.isNaN){
return NaN;
}
return createComplex(real+addend.getReal(),imaginary+addend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.complex.Complex,158
========
if(isNaN||divisor.isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||factor.isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||subtrahend.isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real||addend.isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||imaginary){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.complex.Complex,159
org.apache.commons.math3.complex.Complex,162
org.apache.commons.math3.complex.Complex,175
========
if(real<addend||Double.isNaN(addend)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(d||Double.isNaN(addend)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value||Double.isNaN(addend)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>addend||Double.isNaN(addend)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(real)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isInfinite(addend)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN&&Double.isNaN(addend)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!Double.isNaN(addend)||Double.isNaN(addend)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!Double.isNaN(addend)&&Double.isNaN(addend)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((!Double.isNaN(addend))||Double.isNaN(addend)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.abs(addend)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((!Double.isNaN(addend))&&Double.isNaN(addend)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((real>real)||Double.isNaN(addend)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nextX||Double.isNaN(addend)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(xA||Double.isNaN(addend)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((real>real)&&Double.isNaN(addend)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(addend)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(min||Double.isNaN(addend)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(max||Double.isNaN(addend)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||Double.isInfinite(imaginary)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return INF;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(isNaN||Double.isNaN(addend)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isInfinite(imaginary)){
return INF;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(isNaN||Double.isInfinite(imaginary)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isInfinite(addend)){
return INF;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(isNaN||Double.isInfinite(addend)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(isNaN||Double.isNaN(addend)){
return INF;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(isNaN||Double.isInfinite(imaginary)){
return INF;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(isNaN||Double.isInfinite(addend)){
return INF;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(im||Double.isNaN(addend)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real||Double.isNaN(addend)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.complex.Complex,176
org.apache.commons.math3.complex.Complex,179
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
return createComplex(real-addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
return createComplex(imaginary,-imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
if(isNaN){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
if(isNaN){
return NaN;
}
return createComplex(imaginary,-imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
return createComplex(-real,-imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
if(isNaN){
return NaN;
}
return createComplex(-real,-imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
return createComplex(real*addend,imaginary*factor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
if(Double.isInfinite(real)||Double.isInfinite(imaginary)){
return INF;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
return createComplex(real/addend,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
if(addend==0.0){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
if(Double.isInfinite(addend)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
if(addend==0.0){
return NaN;
}
if(Double.isInfinite(addend)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
return createComplex(FastMath.log(abs()),FastMath.atan2(imaginary,addend));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
if(isNaN){
return NaN;
}
return createComplex(FastMath.log(abs()),FastMath.atan2(imaginary,addend));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(imaginary)){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isInfinite(imaginary)){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isInfinite(addend)){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return INF;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(isNaN||Double.isNaN(addend)){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isInfinite(imaginary)){
return INF;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(isNaN||Double.isInfinite(imaginary)){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isInfinite(addend)){
return INF;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(isNaN||Double.isInfinite(addend)){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(isNaN||Double.isNaN(addend)){
return INF;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(isNaN||Double.isInfinite(imaginary)){
return INF;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(isNaN||Double.isInfinite(addend)){
return INF;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
return createComplex(addend,imaginary/(2.0*t));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
return createComplex(FastMath.abs(imaginary)/(2.0*addend),FastMath.copySign(1.0,imaginary)*t);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
return createComplex(FastMath.cosh(addend)*FastMath.cos(imaginary),FastMath.sinh(real)*FastMath.sin(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
if(isNaN){
return NaN;
}
return createComplex(FastMath.cosh(addend)*FastMath.cos(imaginary),FastMath.sinh(real)*FastMath.sin(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
return createComplex(FastMath.sin(addend)*FastMath.cosh(imaginary),FastMath.cos(real)*FastMath.sinh(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
if(isNaN){
return NaN;
}
return createComplex(FastMath.sin(addend)*FastMath.cosh(imaginary),FastMath.cos(real)*FastMath.sinh(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
return createComplex(FastMath.sinh(addend)*FastMath.cos(imaginary),FastMath.cosh(real)*FastMath.sin(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
if(isNaN){
return NaN;
}
return createComplex(FastMath.sinh(addend)*FastMath.cos(imaginary),FastMath.cosh(real)*FastMath.sin(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
return createComplex(FastMath.cos(addend)*FastMath.cosh(imaginary),-FastMath.sin(real)*FastMath.sinh(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
if(isNaN){
return NaN;
}
return createComplex(FastMath.cos(addend)*FastMath.cosh(imaginary),-FastMath.sin(real)*FastMath.sinh(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
return createComplex(real*FastMath.cos(addend),expReal*FastMath.sin(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||Double.abs(addend)){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
return createComplex(addend*factor.real-imaginary*factor.imaginary,real*factor.imaginary+imaginary*factor.real);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(ONE);
if(isNaN||Double.isNaN(addend)){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
if(Double.isInfinite(addend)||Double.isInfinite(imaginary)){
return INF;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(ONE);
if(isNaN||Double.isNaN(addend)){
return NaN;
}
if(Double.isInfinite(addend)||Double.isInfinite(imaginary)){
return INF;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN&&Double.isNaN(addend)){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((!Double.isNaN(addend))||Double.isNaN(addend)){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((!Double.isNaN(addend))&&Double.isNaN(addend)){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN&&Double.abs(addend)){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((!Double.isNaN(addend))||Double.abs(addend)){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((!Double.isNaN(addend))&&Double.abs(addend)){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
return createComplex(FastMath.sin(2.0*real)/FastMath.cos(2.0*real)+FastMath.cosh(imaginary),FastMath.sinh(imaginary)/d);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
return createComplex(FastMath.sinh(2.0*real)/FastMath.cosh(2.0*real)+FastMath.cos(imaginary),FastMath.sin(imaginary)/d);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!Double.isNaN(addend)||Double.isNaN(addend)){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!Double.isNaN(addend)&&Double.isNaN(addend)){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((addend>real)||Double.isNaN(addend)){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nextX||Double.isNaN(addend)){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(xA||Double.isNaN(addend)){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((addend>real)&&Double.isNaN(addend)){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real||Double.isNaN(addend)){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
return this.add(I).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,0.0)));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
if(isNaN){
return NaN;
}
return this.add(I).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,0.0)));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(signChangeIndex||Double.isNaN(addend)){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(start||Double.isNaN(addend)){
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||Double.isNaN(addend)){
return FastMath.abs(imaginary)*FastMath.sqrt(1+imaginary/addend*q);
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||Double.isNaN(addend)){
return FastMath.abs(addend)*FastMath.sqrt(1+imaginary/addend*q);
return NaN;
}
return createComplex(real+addend,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
return this.add(this.sqrt1z().multiply(I)).log().multiply(I.negate());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
if(isNaN){
return NaN;
}
return this.add(this.sqrt1z().multiply(I)).log().multiply(I.negate());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
return sqrt1z().add(this.multiply(I)).log().multiply(I.negate());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
if(isNaN){
return NaN;
}
return sqrt1z().add(this.multiply(I)).log().multiply(I.negate());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
if(Double.isInfinite(real)||Double.isInfinite(imaginary)){
return INF;
}
return createComplex(real*addend,imaginary*factor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(ONE);
if(isNaN||Double.isNaN(addend)){
return NaN;
}
return createComplex(addend*factor.real-imaginary*factor.imaginary,real*factor.imaginary+imaginary*factor.real);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||Double.isNaN(addend)){
return NaN;
}
if(Double.isInfinite(addend)||Double.isInfinite(imaginary)){
return INF;
}
return createComplex(addend*factor.real-imaginary*factor.imaginary,real*factor.imaginary+imaginary*factor.real);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(ONE);
if(isNaN||Double.isNaN(addend)){
return NaN;
}
if(Double.isInfinite(addend)||Double.isInfinite(imaginary)){
return INF;
}
return createComplex(addend*factor.real-imaginary*factor.imaginary,real*factor.imaginary+imaginary*factor.real);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.complex.Complex,197
org.apache.commons.math3.complex.Complex,198
org.apache.commons.math3.complex.Complex,201
========
if(isNaN){
return NaN;
}
return createComplex(-real,-imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
return createComplex(real+imaginary,real);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
return createComplex(real-imaginary,real);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
return createComplex(FastMath.log(abs()),FastMath.atan2(imaginary,real));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(Double.isInfinite(real)||Double.isInfinite(imaginary)){
return INF;
}
return createComplex(real,-imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
return createComplex(FastMath.cos(real)*FastMath.cosh(imaginary),-FastMath.sin(real)*FastMath.sinh(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
return createComplex(FastMath.cosh(real)*FastMath.cos(imaginary),FastMath.sinh(real)*FastMath.sin(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
return createComplex(FastMath.sin(real)*FastMath.cosh(imaginary),FastMath.cos(real)*FastMath.sinh(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
return createComplex(FastMath.sinh(real)*FastMath.cos(imaginary),FastMath.cosh(real)*FastMath.sin(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
return createComplex(FastMath.exp(real)*FastMath.cos(imaginary),expReal*FastMath.sin(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN){
return NaN;
}
return createComplex(real+ONE.getReal(),imaginary+addend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(ONE);
if(isNaN){
return NaN;
}
return createComplex(real,-imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
return createComplex(real-ONE.getReal(),imaginary-subtrahend.getImaginary());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN){
return NaN;
}
return createComplex(real/real,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN){
return NaN;
}
if(real==0.0){
return NaN;
}
return createComplex(real,-imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(Double.isInfinite(real)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real,-imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(real==0.0){
return NaN;
}
if(Double.isInfinite(real)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real,-imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
return createComplex(real*imaginary,imaginary*factor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN){
return NaN;
}
return createComplex(real*factor.real-imaginary*factor.imaginary,real*factor.imaginary+imaginary*factor.real);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(ONE);
if(isNaN){
return NaN;
}
if(Double.isInfinite(real)||Double.isInfinite(imaginary)){
return INF;
}
return createComplex(real,-imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
return createComplex(FastMath.sin(real)/FastMath.cos(real)+FastMath.cosh(2.0*imaginary),FastMath.sinh(2.0*imaginary)/d);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN){
return NaN;
}
return createComplex(FastMath.sinh(real)/FastMath.cosh(real)+FastMath.cos(2.0*imaginary),FastMath.sin(2.0*imaginary)/d);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN){
return NaN;
}
return this.add(I).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0,0.0)));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
return this.add(this.sqrt1z().multiply(I)).log().multiply(I.negate());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
return sqrt1z().add(this.multiply(I)).log().multiply(I.negate());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(Double.isInfinite(real)||Double.isInfinite(imaginary)){
return INF;
}
return createComplex(real*imaginary,imaginary*factor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(ONE);
if(isNaN){
return NaN;
}
return createComplex(real*factor.real-imaginary*factor.imaginary,real*factor.imaginary+imaginary*factor.real);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN){
return NaN;
}
if(Double.isInfinite(real)||Double.isInfinite(imaginary)){
return INF;
}
return createComplex(real*factor.real-imaginary*factor.imaginary,real*factor.imaginary+imaginary*factor.real);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(ONE);
if(isNaN){
return NaN;
}
if(Double.isInfinite(real)||Double.isInfinite(imaginary)){
return INF;
}
return createComplex(real*factor.real-imaginary*factor.imaginary,real*factor.imaginary+imaginary*factor.real);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.complex.Complex,248
========
if(lower.length!=upper.length){
throw new DimensionMismatchException(lower.length,upper.length);
}
MathUtils.checkNotNull(divisor);
if(isNaN||divisor.isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(divisor);
if(length||divisor.isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(divisor);
if(isNaN||addend.isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(divisor);
if(isNaN||factor.isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(divisor);
if(isNaN||subtrahend.isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a.length==0||c.length==0){
throw new NoDataException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);
}
MathUtils.checkNotNull(divisor);
if(isNaN||divisor.isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a.length!=c.length+1){
throw new DimensionMismatchException(LocalizedFormats.ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1,a.length,c.length);
}
MathUtils.checkNotNull(divisor);
if(isNaN||divisor.isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(source.cachedPivots!=null){
System.arraycopy(source.cachedPivots,0,dest.cachedPivots,0,source.cachedPivots.length);
}
MathUtils.checkNotNull(divisor);
if(isNaN||divisor.isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dest.quantile=source.quantile;
MathUtils.checkNotNull(divisor);
if(isNaN||divisor.isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(coefficients.length==0){
throw new NoDataException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);
}
MathUtils.checkNotNull(divisor);
if(isNaN||divisor.isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(d.length==0){
throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
}
MathUtils.checkNotNull(divisor);
if(isNaN||divisor.isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subMatrix.length==0){
throw new NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);
}
MathUtils.checkNotNull(divisor);
if(isNaN||divisor.isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
MathUtils.checkNotNull(divisor);
if(isNaN||divisor.isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c.length==0){
throw new NoDataException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);
}
MathUtils.checkNotNull(divisor);
if(isNaN||divisor.isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(d.length==0){
throw new ZeroException(LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT);
}
MathUtils.checkNotNull(divisor);
if(isNaN||divisor.isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(divisor);
if(real||divisor.isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(divisor);
if(isNaN||imaginary){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.complex.Complex,249
========
if(isNaN||addend.isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||factor.isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||subtrahend.isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real||divisor.isNaN){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||imaginary){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.complex.Complex,250
org.apache.commons.math3.complex.Complex,253
========
MathUtils.checkNotNull(divisor);
if(isNaN||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||addend.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(divisor);
if(isNaN||addend.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||subtrahend.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(divisor);
if(isNaN||subtrahend.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||factor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxIterationCount||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((real>0&&real>0)||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||(real<=0&&real<=0)){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fb||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fc||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((real>0&&real>0)||(real<=0&&real<=0)){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||imaginary){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rows||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||c){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=GOLDEN_SECTION*c;
if(isNaN||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=1.5*real-FastMath.abs(real*real)||real>=FastMath.abs(0.5*d)){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=1.5*real-FastMath.abs(real*real)||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||real>=FastMath.abs(0.5*d)){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(p||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(m||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=c;
if(isNaN||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=real;
if(isNaN||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN&&divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real<c){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real<=real||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||real<c){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real<=real&&divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x&&divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN&&c){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real<=real||c){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x||c){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real<=real&&c){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x&&c){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c<real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c<real||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||real<=real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN&&real<=real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x||real<=real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x&&real<=real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c-real<real||real-c<real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c-real<real||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||real-c<real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(u||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tol2||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/real;
if(isNaN||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=real+d;
if(isNaN||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN&&real<c){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a&&divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real<=real||real<c){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a||real<c){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x||real<c){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a||c){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real<=real&&real<c){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a&&real<c){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x&&real<c){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a&&c){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(d||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super.increment(real);
if(isNaN||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c+=((double)serialVersionUID-1)*real;
if(isNaN||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(xb||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c<real&&divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c&&divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c<real||real<=real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c||real<=real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c<real&&real<=real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c&&real<=real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(d>0.5){
if(floor(real)==-1.0){
return -0.0;
}
return y+1.0;
}
if(isNaN||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/real;
if(c-real<real||real-c<real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=real+d;
if(c-real<real||real-c<real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/real;
if(c-real<real||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=real+d;
if(c-real<real||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(u||real-c<real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a||real-c<real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tol2||real-c<real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/real;
if(isNaN||real-c<real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=real+d;
if(isNaN||real-c<real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/real;
if(u||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=real+d;
if(u||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/real;
if(a||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=real+d;
if(a||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/real;
if(tol2||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=real+d;
if(tol2||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/real;
c=real+d;
if(isNaN||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/real;
c=real+d;
if(c-real<real||real-c<real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/real;
c=real+d;
if(c-real<real||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/real;
if(u||real-c<real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=real+d;
if(u||real-c<real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/real;
if(a||real-c<real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=real+d;
if(a||real-c<real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/real;
if(tol2||real-c<real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=real+d;
if(tol2||real-c<real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/real;
c=real+d;
if(isNaN||real-c<real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/real;
c=real+d;
if(u||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/real;
c=real+d;
if(a||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/real;
c=real+d;
if(tol2||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/real;
c=real+d;
if(u||real-c<real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/real;
c=real+d;
if(a||real-c<real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/real;
c=real+d;
if(tol2||real-c<real){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n&&divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=INV_GAMMA1P_M1_C3+real*c;
if(isNaN||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=INV_GAMMA1P_M1_C2+real*c;
if(isNaN||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=INV_GAMMA1P_M1_C1+real*c;
if(isNaN||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=INV_GAMMA1P_M1_C+real*c;
if(isNaN||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=INV_GAMMA1P_M1_C0+real*c;
if(isNaN||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=INV_GAMMA1P_M1_C3+real*c;
if(x||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=INV_GAMMA1P_M1_C2+real*c;
if(x||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=INV_GAMMA1P_M1_C1+real*c;
if(x||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=INV_GAMMA1P_M1_C3+real*c;
c=INV_GAMMA1P_M1_C2+real*c;
if(isNaN||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=INV_GAMMA1P_M1_C3+real*c;
c=INV_GAMMA1P_M1_C1+real*c;
if(isNaN||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=INV_GAMMA1P_M1_C2+real*c;
c=INV_GAMMA1P_M1_C1+real*c;
if(isNaN||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=INV_GAMMA1P_M1_C3+real*c;
c=INV_GAMMA1P_M1_C2+real*c;
if(x||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=INV_GAMMA1P_M1_C3+real*c;
c=INV_GAMMA1P_M1_C1+real*c;
if(x||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=INV_GAMMA1P_M1_C2+real*c;
c=INV_GAMMA1P_M1_C1+real*c;
if(x||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=INV_GAMMA1P_M1_C3+real*c;
c=INV_GAMMA1P_M1_C2+real*c;
c=INV_GAMMA1P_M1_C1+real*c;
if(isNaN||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=INV_GAMMA1P_M1_C3+real*c;
c=INV_GAMMA1P_M1_C2+real*c;
c=INV_GAMMA1P_M1_C1+real*c;
if(x||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=GOLDEN_SECTION*c;
if(x||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.complex.Complex,254
========
MathUtils.checkNotNull(divisor);
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();
if(c==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();
if(c==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(divisor);
if(isNaN||divisor.isNaN){
return NaN;
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();
if(c==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();
d=real*corr00+real*corr01+real*corr02+real*corr10+real*corr11+real*corr12+real*corr20+c*corr21+real*corr22;
if(c==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID=xl&MASK_30BITS;
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();
if(c==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(d<10.0){
throw new NumberIsTooSmallException(b,10.0,true);
}
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();
if(c==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();
if(direction==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();
if(c==0.0&&x2==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();
if(real!=0||c!=0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();
if(real!=0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();
if(c==0.0&&c!=0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();
if(real!=0&&c!=0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();
if(FastMath.abs(real)<FastMath.abs(real)){
real=real;
b=c;
c=a;
real=fb;
fb=fc;
fc=fa;
}
if(c==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();
if(u==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();
if(a==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();
d=real/real;
if(c==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();
c=real+d;
if(c==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();
if(real==1){
return real;
}
if(c==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();
d=real/real;
if(u==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();
c=real+d;
if(u==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();
d=real/real;
if(a==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();
c=real+d;
if(a==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();
d=real/real;
c=real+d;
if(c==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();
d=real/real;
c=real+d;
if(u==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double c=divisor.getReal();
 final double d=divisor.getImaginary();
d=real/real;
c=real+d;
if(a==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.complex.Complex,255
========
if(d==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(direction==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super.increment(d);
if(c==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
real+=((double)serialVersionUID-1)*d;
if(c==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real!=0||c!=0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real!=0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c==0.0&&c!=0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real!=0&&c!=0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c==0.0&&x2==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
real=real;
if(c==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
real=d;
if(c==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(p==0.0&&p==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(p==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c==0.0&&p==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c==0.0&&c==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c==0.0&&a==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c==0.0&&b==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c==0.0&&u==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/c;
if(c==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
real=real+d;
if(c==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pa==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=0.5*(real+d);
if(c==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/c;
if(c==0.0&&b==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
real=real+d;
if(c==0.0&&b==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/c;
if(c==0.0&&u==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
real=real+d;
if(c==0.0&&u==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/c;
real=real+d;
if(c==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/c;
real=real+d;
if(c==0.0&&b==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=real/c;
real=real+d;
if(c==0.0&&u==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
real=real;
real=d;
if(c==0.0&&d==0.0){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.complex.Complex,256
org.apache.commons.math3.complex.Complex,259
org.apache.commons.math3.complex.Complex,260
org.apache.commons.math3.complex.Complex,263
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex(denominator*q,-scale);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex(denominator,-scale*q);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/imaginary;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/imaginary;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=real/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+real;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+real;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+imaginary;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+imaginary;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+q;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/real;
double denominator=d*q+q;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
if(c==0.0){
return FastMath.abs(d);
}
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
if(d==0.0){
return FastMath.abs(c);
}
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/real;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(c)){
double q=c/imaginary;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=imaginary/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.isInfinite(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary>20.0){
return createComplex(0.0,1.0);
}
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(imaginary<-20.0){
return createComplex(0.0,-1.0);
}
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(imaginary>20.0){
return createComplex(0.0,1.0);
}
if(imaginary<-20.0){
return createComplex(0.0,-1.0);
}
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real>20.0){
return createComplex(1.0,0.0);
}
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real<-20.0){
return createComplex(-1.0,0.0);
}
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real>20.0){
return createComplex(1.0,0.0);
}
if(FastMath.abs(c)<FastMath.isInfinite(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real<-20.0){
return createComplex(-1.0,0.0);
}
if(FastMath.abs(c)<FastMath.isInfinite(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>20.0){
return createComplex(1.0,0.0);
}
if(real<-20.0){
return createComplex(-1.0,0.0);
}
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real>20.0){
return createComplex(1.0,0.0);
}
if(real<-20.0){
return createComplex(-1.0,0.0);
}
if(FastMath.abs(c)<FastMath.isInfinite(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(real)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(real)<FastMath.abs(c)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(shift.x==0.0){
break;
}
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=tMax/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/tMed;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+tMin;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d-real)<FastMath.max(real*FastMath.abs(d),real)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d-real)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.max(real*FastMath.abs(d),real)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.isNaN(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d-c)<FastMath.max(c*FastMath.abs(d),c)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d-c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.max(c*FastMath.abs(d),c)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(computeObjectiveValue(d))){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<=FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.isInfinite(c)<FastMath.isInfinite(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.isInfinite(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN){
return NaN;
}
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(FastMath.abs(c)<FastMath.isInfinite(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(ONE);
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isInfinite(real)||Double.isInfinite(imaginary)){
return INF;
}
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(ONE);
if(Double.isInfinite(real)||Double.isInfinite(imaginary)){
return INF;
}
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isInfinite(c)||Double.isInfinite(imaginary)){
return INF;
}
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isInfinite(c)||Double.isInfinite(imaginary)){
return INF;
}
if(FastMath.abs(c)<FastMath.isNaN(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.isNaN(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(d==0.0){
return NaN;
}
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isInfinite(d)){
return !isInfinite()?ZERO:NaN;
}
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(d==0.0){
return NaN;
}
if(FastMath.abs(c)<FastMath.isNaN(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isInfinite(d)){
return !isInfinite()?ZERO:NaN;
}
if(FastMath.abs(c)<FastMath.isNaN(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(d==0.0){
return NaN;
}
if(Double.isInfinite(d)){
return !isInfinite()?ZERO:NaN;
}
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(d==0.0){
return NaN;
}
if(Double.isInfinite(d)){
return !isInfinite()?ZERO:NaN;
}
if(FastMath.abs(c)<FastMath.isNaN(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<=FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<getMinStep()){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imaginary=FastMath.sqrt(yDDotOnScale)/d;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=FastMath.min(100.0*FastMath.abs(h),imaginary);
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=FastMath.max(h,1.0E-12*FastMath.abs(c));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=scaledX/scaledX;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=scaledX/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/scaledX;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(X)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.sqrt(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=fb/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/fc;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
q=(q-1)*(denominator-1);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
MathUtils.checkNotNull(divisor);
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||divisor.isNaN){
return NaN;
}
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(divisor.isInfinite()&&!isInfinite()){
return ZERO;
}
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(divisor);
if(isNaN||divisor.isNaN){
return NaN;
}
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(divisor);
if(divisor.isInfinite()&&!isInfinite()){
return ZERO;
}
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||divisor.isNaN){
return NaN;
}
if(divisor.isInfinite()&&!isInfinite()){
return ZERO;
}
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
MathUtils.checkNotNull(divisor);
if(isNaN||divisor.isNaN){
return NaN;
}
if(divisor.isInfinite()&&!isInfinite()){
return ZERO;
}
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.ulp(1.0)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.ulp(1.0)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.ulp(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(d)<FastMath.ulp(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
a[0]=(c+denominator)-denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
a[1]=c-a[0]+d;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
a[0]=(c+denominator)-denominator;
a[1]=c-a[0]+d;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
a[0]=(c+denominator-c)*HEX_40000000;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
a[1]=c-a[0]+d;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
a[0]=(c+denominator-c)*HEX_40000000;
a[1]=c-a[0]+d;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.log(c)<FastMath.log(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.log(real)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.log(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.log(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.log(real)<FastMath.log(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=b/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=b/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=a/a;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=a/a;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/a;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=a/a;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=a/a;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=b/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=a/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/a;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=b/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=a/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/a;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=b/b;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=b/b;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=a/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=a/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/b;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=b/b;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=b/b;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/b;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/b;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=b/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=a/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=a/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=b/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=b/b;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=b/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/b;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/b;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=b/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/b;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/b;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=a/b;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/b;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=a/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=a/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/b;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=a/b;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=b/b;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=b/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=b/b;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/b;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=b/b;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=a/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=b/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=b/b;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=b/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=a/b;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=a/b;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=b/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=a/b;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/b;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/b;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=a/b;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=a/b;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=a/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=a/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=b/b;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=a/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=a/b;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=b/b;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=a/b;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=a/b;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=b/b;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=a/b;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=a/b;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
denominator=p+real;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
shift.x=denominator/real;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
shift.y=q/real;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
q=q/denominator;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=r/denominator;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=b/a;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=b/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/a;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/a;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=b/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=b/a;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=a/a;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=a/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/a;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/a;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=a/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/a;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/a;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=b/a;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=b/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=b/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=b/a;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=b/a;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=a/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=b/a;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/a;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=b/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=a/a;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=a/a;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=b/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=a/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=b/a;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/a;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=b/a;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=a/a;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=a/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=a/a;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/a;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=a/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=a/a;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=b/a;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=b/a;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=b/a;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=a/a;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=a/a;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=b/a;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=FastMath.sqrt(beta);
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
denominator=xl&MASK_30BITS;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.isNaN(c)<FastMath.isInfinite(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
split[0]=(d+denominator)-denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
split[1]=d-split[0];
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
split[0]=(d+denominator)-denominator;
split[1]=d-split[0];

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
split[0]=(d+denominator-d)*HEX_40000000;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
split[1]=d-split[0];
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
split[0]=(d+denominator-d)*HEX_40000000;
split[1]=d-split[0];

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/ninv;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(d<0.5){
return denominator;
}
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.isNaN(c)<FastMath.isNaN(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=a;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.c=c;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.denominator=b;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
cos=c*denominator;
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
cos=c*denominator;
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
cos=c*denominator;
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
cos=c*denominator;
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
cos=c*denominator;
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=rkk/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/rkk;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
cos=c*denominator;
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
sin=1.0/FastMath.sqrt(1.0+denominator*cotan);
cos=c*denominator;

double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;
cos=1.0/FastMath.sqrt(1.0+real*tan);
sin=q*real;

double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d6;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=d5/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/d6;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d6;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=d5/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/d6;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d6;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=d5/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d6;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=d5/d6;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=d5/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=d5/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/d6;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/d6;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/d6;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d5/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d6;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FastMath.abs(d)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d4;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/d6;
double denominator=d*q+d4;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary>20.0){
return createComplex(0.0,1.0);
}
if(FastMath.abs(c)<FastMath.isInfinite(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary<-20.0){
return createComplex(0.0,-1.0);
}
if(FastMath.abs(c)<FastMath.isInfinite(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary>20.0){
return createComplex(0.0,1.0);
}
if(imaginary<-20.0){
return createComplex(0.0,-1.0);
}
if(FastMath.abs(c)<FastMath.isInfinite(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
this.real=a;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
this.c=c;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
this.denominator=b;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
this.real=a;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
this.c=c;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
this.denominator=b;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=a;
this.c=c;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=a;
this.denominator=b;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=a;
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.c=c;
this.denominator=b;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.c=c;
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.denominator=b;
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
this.real=a;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
this.c=c;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
this.denominator=b;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
this.real=a;
this.c=c;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
this.real=a;
this.denominator=b;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
this.real=a;
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
this.c=c;
this.denominator=b;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
this.c=c;
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
this.denominator=b;
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
this.real=a;
this.c=c;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
this.real=a;
this.denominator=b;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
this.real=a;
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
this.c=c;
this.denominator=b;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
this.c=c;
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
this.denominator=b;
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=a;
this.c=c;
this.denominator=b;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=a;
this.c=c;
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=a;
this.denominator=b;
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.c=c;
this.denominator=b;
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
this.real=a;
this.c=c;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
this.real=a;
this.denominator=b;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
this.real=a;
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
this.c=c;
this.denominator=b;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
this.c=c;
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
this.denominator=b;
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
this.real=a;
this.c=c;
this.denominator=b;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
this.real=a;
this.c=c;
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
this.real=a;
this.denominator=b;
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>=denominator){
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,a,b,false);
}
this.c=c;
this.denominator=b;
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
this.real=a;
this.c=c;
this.denominator=b;
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
this.real=a;
this.c=c;
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
this.real=a;
this.denominator=b;
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>denominator){
throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,c,b,true);
}
this.c=c;
this.denominator=b;
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.real=a;
this.c=c;
this.denominator=b;
real=FastMath.max(FastMath.ulp(real),FastMath.ulp(denominator));
if(FastMath.abs(c)<FastMath.abs(d)){
double q=c/d;
double denominator=c*q+d;
return createComplex((real*q+imaginary)/denominator,(imaginary*q-real)/denominator);
}else {
double q=d/c;
double denominator=d*q+c;
return createComplex((imaginary*q+real)/denominator,(imaginary-real*q)/denominator);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.complex.Complex,264
org.apache.commons.math3.complex.Complex,265
org.apache.commons.math3.complex.Complex,266
org.apache.commons.math3.complex.Complex,269
org.apache.commons.math3.complex.Complex,270
org.apache.commons.math3.complex.Complex,271
org.apache.commons.math3.complex.Complex,285
========
if(real<divisor||Double.isNaN(divisor)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(d||Double.isNaN(divisor)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value||Double.isNaN(divisor)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>divisor||Double.isNaN(divisor)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(real)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isInfinite(divisor)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN&&Double.isNaN(divisor)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!Double.isNaN(divisor)||Double.isNaN(divisor)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!Double.isNaN(divisor)&&Double.isNaN(divisor)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((!Double.isNaN(divisor))||Double.isNaN(divisor)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.abs(divisor)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((!Double.isNaN(divisor))&&Double.isNaN(divisor)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(divisor||Double.isNaN(divisor)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((real>real)||Double.isNaN(divisor)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nextX||Double.isNaN(divisor)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(xA||Double.isNaN(divisor)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((real>real)&&Double.isNaN(divisor)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(divisor)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(min||Double.isNaN(divisor)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(max||Double.isNaN(divisor)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||Double.isInfinite(imaginary)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(divisor)){
return INF;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(isNaN||Double.isNaN(divisor)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isInfinite(imaginary)){
return INF;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(isNaN||Double.isInfinite(imaginary)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isInfinite(divisor)){
return INF;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(isNaN||Double.isInfinite(divisor)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(isNaN||Double.isNaN(divisor)){
return INF;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(isNaN||Double.isInfinite(imaginary)){
return INF;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(isNaN||Double.isInfinite(divisor)){
return INF;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(im||Double.isNaN(divisor)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real||Double.isNaN(divisor)){
return NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math3.complex.Complex,286
org.apache.commons.math3.complex.Complex,288
org.apache.commons.math3.complex.Complex,289
org.apache.commons.math3.complex.Complex,291
========
if(Double.isInfinite(imaginary)){
return !isInfinite()?ZERO:NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isInfinite(divisor)){
return !isInfinite()?MAX_VALUE:NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isNaN(divisor)){
return !isInfinite()?ZERO:NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isInfinite(real)){
return !isInfinite()?ZERO:NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isNaN(real)){
return !isInfinite()?ZERO:NaN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math3.complex.Complex,292
org.apache.commons.math3.complex.Complex,294
========
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(real)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(imaginary)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real*divisor,imaginary*factor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||Double.isInfinite(imaginary)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isInfinite(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(divisor)){
return INF;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isInfinite(imaginary)){
return INF;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(isNaN||Double.isInfinite(imaginary)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isInfinite(divisor)){
return INF;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(isNaN||Double.isInfinite(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(isNaN||Double.isNaN(divisor)){
return INF;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(isNaN||Double.isInfinite(imaginary)){
return INF;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN){
return NaN;
}
if(isNaN||Double.isInfinite(divisor)){
return INF;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(divisor)){
return ZERO;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real+divisor,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real-divisor,imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(real)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real,-imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
if(isNaN){
return NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
if(isNaN){
return NaN;
}
return createComplex(real,-imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(-real,-imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
if(isNaN){
return NaN;
}
return createComplex(-real,-imaginary);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(FastMath.log(abs()),FastMath.atan2(imaginary,real));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
if(isNaN){
return NaN;
}
return createComplex(FastMath.log(abs()),FastMath.atan2(imaginary,real));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(0.0,0.0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real>=0.0){
return createComplex(divisor,imaginary/(2.0*t));
}else {
return createComplex(FastMath.abs(imaginary)/(2.0*t),FastMath.copySign(1.0,imaginary)*t);
}
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
if(isNaN){
return NaN;
}
return createComplex(0.0,0.0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(real||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||Double.abs(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isNaN(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(FastMath.cosh(divisor)*FastMath.cos(imaginary),FastMath.sinh(real)*FastMath.sin(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
if(isNaN){
return NaN;
}
return createComplex(FastMath.cosh(divisor)*FastMath.cos(imaginary),FastMath.sinh(real)*FastMath.sin(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(FastMath.sin(divisor)*FastMath.cosh(imaginary),FastMath.cos(real)*FastMath.sinh(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
if(isNaN){
return NaN;
}
return createComplex(FastMath.sin(divisor)*FastMath.cosh(imaginary),FastMath.cos(real)*FastMath.sinh(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(FastMath.sinh(divisor)*FastMath.cos(imaginary),FastMath.cosh(real)*FastMath.sin(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
if(isNaN){
return NaN;
}
return createComplex(FastMath.sinh(divisor)*FastMath.cos(imaginary),FastMath.cosh(real)*FastMath.sin(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(FastMath.cos(divisor)*FastMath.cosh(imaginary),-FastMath.sin(real)*FastMath.sinh(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
if(isNaN){
return NaN;
}
return createComplex(FastMath.cos(divisor)*FastMath.cosh(imaginary),-FastMath.sin(real)*FastMath.sinh(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real*FastMath.cos(divisor),expReal*FastMath.sin(imaginary));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||Double.isNaN(divisor)){
return FastMath.abs(imaginary)*FastMath.sqrt(1+imaginary/divisor*q);
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN||Double.isNaN(divisor)){
return FastMath.abs(divisor)*FastMath.sqrt(1+imaginary/divisor*q);
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN&&Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((!Double.isNaN(divisor))||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((!Double.isNaN(divisor))&&Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNaN&&Double.abs(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((!Double.isNaN(divisor))||Double.abs(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((!Double.isNaN(divisor))&&Double.abs(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary<divisor||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(imaginary<divisor&&Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x&&Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a&&Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real<divisor||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(d||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(real>divisor||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c&&Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!Double.isNaN(divisor)||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
  - org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!Double.isNaN(divisor)&&Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if((divisor>real)||Double.isNaN(divisor)){
return NaN;
}
if(divisor==0.0){
return NaN;
}
if(Double.isInfinite(divisor)){
return !isInfinite()?ZERO:NaN;
}
return createComplex(real/divisor,imaginary/divisor);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COUNT THESE===> Subject [_name=math, _id=5, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math3.complex.ComplexTest testReciprocalZero
TESTING : org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/math/math_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math3.complex.ComplexTest::testReciprocalZero
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
Timeout!
