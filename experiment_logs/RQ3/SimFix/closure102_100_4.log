java version "1.7.0_231"
OpenJDK Runtime Environment (rhel-2.6.19.1.el7_6-x86_64 u231-b01)
OpenJDK 64-Bit Server VM (build 24.231-b01, mixed mode)
Check out d48c365b to /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/ OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Run post-checkout hook..................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff d48c365b:9a1ddf5f..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Closure-102b.................................... OK
Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK
Failing tests: 1
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4
PURIFY IS FALSE
=================================================
Project : closure_102	start : 19/10/28 16:28

Field type inconsistancy 'type' with types : Type and JSType
Field type inconsistancy 'errors' with types : List<JSError> and JSError[]
Field type inconsistancy 'THIS' with types : Token and int
readFailedTest: path is /mnt/nfs/work1/brun/mmotwani/SimFix/d4j-info/failed_tests/closure/102.txt#ATTEMPTS: 1

# FAILING TESTS: 1
TIMEOUT : 18000000
===========
locations= [<com.google.javascript.jscomp.TypeValidator,212>, <com.google.javascript.jscomp.TypeValidator,215>, <com.google.javascript.jscomp.TypeValidator,264>, <com.google.javascript.jscomp.TypeValidator,265>, <com.google.javascript.jscomp.TypeValidator,278>, <com.google.javascript.rhino.jstype.NumberType,81>, <com.google.javascript.rhino.jstype.ObjectType,97>, <com.google.javascript.rhino.jstype.ObjectType,293>, <com.google.javascript.rhino.jstype.UnknownType,81>, <com.google.javascript.rhino.jstype.UnknownType,131>, <com.google.javascript.rhino.jstype.UnknownType,172>, <com.google.javascript.rhino.jstype.AllType,110>, <com.google.javascript.rhino.jstype.PrototypeObjectType,322>, <com.google.javascript.rhino.jstype.FunctionType,656>, <com.google.javascript.rhino.jstype.FunctionType,660>, <com.google.javascript.rhino.jstype.FunctionType,661>, <com.google.javascript.rhino.jstype.FunctionType,662>, <com.google.javascript.rhino.jstype.FunctionType,664>, <com.google.javascript.rhino.jstype.FunctionType,665>, <com.google.javascript.rhino.jstype.FunctionType,666>, <com.google.javascript.rhino.jstype.FunctionType,667>, <com.google.javascript.rhino.jstype.FunctionType,669>, <com.google.javascript.rhino.jstype.FunctionType,670>, <com.google.javascript.rhino.jstype.FunctionType,671>, <com.google.javascript.rhino.jstype.FunctionType,673>, <com.google.javascript.rhino.jstype.FunctionType,674>, <com.google.javascript.rhino.jstype.FunctionType,675>, <com.google.javascript.rhino.jstype.FunctionType,679>, <com.google.javascript.rhino.jstype.FunctionType,680>, <com.google.javascript.rhino.jstype.FunctionType,690>, <com.google.javascript.rhino.jstype.FunctionType,691>, <com.google.javascript.rhino.jstype.FunctionType,692>, <com.google.javascript.rhino.jstype.FunctionType,693>, <com.google.javascript.rhino.jstype.FunctionType,695>, <com.google.javascript.rhino.jstype.FunctionType,700>, <com.google.javascript.rhino.jstype.FunctionType,705>, <com.google.javascript.rhino.jstype.FunctionType,706>, <com.google.javascript.rhino.Node,177>, <com.google.javascript.rhino.Node,197>, <com.google.javascript.rhino.Node,222>, <com.google.javascript.rhino.Node,803>, <com.google.javascript.rhino.Node,804>, <com.google.javascript.rhino.Node,805>, <com.google.javascript.rhino.Node,808>, <com.google.javascript.rhino.Node,809>, <com.google.javascript.rhino.Node,810>, <com.google.javascript.rhino.Node,811>, <com.google.javascript.rhino.Node,814>, <com.google.javascript.rhino.Node,815>, <com.google.javascript.rhino.Node,872>, <com.google.javascript.rhino.Node,900>, <com.google.javascript.rhino.Node,901>, <com.google.javascript.rhino.Node,910>, <com.google.javascript.rhino.Node,911>, <com.google.javascript.rhino.Node,912>, <com.google.javascript.rhino.Node,913>, <com.google.javascript.rhino.Node,915>, <com.google.javascript.rhino.Node,916>, <com.google.javascript.rhino.Node,917>, <com.google.javascript.rhino.Node,918>, <com.google.javascript.rhino.Node,919>, <com.google.javascript.rhino.Node,922>, <com.google.javascript.rhino.Node,923>, <com.google.javascript.rhino.Node,926>, <com.google.javascript.rhino.Node,927>, <com.google.javascript.rhino.Node,928>, <com.google.javascript.rhino.Node,929>, <com.google.javascript.rhino.Node,934>, <com.google.javascript.rhino.Node,935>, <com.google.javascript.rhino.Node,936>, <com.google.javascript.rhino.Node,937>, <com.google.javascript.rhino.Node,938>, <com.google.javascript.rhino.Node,939>, <com.google.javascript.rhino.Node,940>, <com.google.javascript.rhino.Node,942>, <com.google.javascript.rhino.Node,978>, <com.google.javascript.rhino.Node,979>, <com.google.javascript.rhino.Node,980>, <com.google.javascript.rhino.Node,982>, <com.google.javascript.rhino.Node,986>, <com.google.javascript.rhino.Node,987>, <com.google.javascript.rhino.Node,992>, <com.google.javascript.rhino.Node,993>, <com.google.javascript.rhino.Node,994>, <com.google.javascript.rhino.Node,995>, <com.google.javascript.rhino.Node,996>, <com.google.javascript.rhino.Node,1005>, <com.google.javascript.rhino.Node,1010>, <com.google.javascript.rhino.Node,1011>, <com.google.javascript.rhino.Node,1012>, <com.google.javascript.rhino.Node,1019>, <com.google.javascript.rhino.Node,1020>, <com.google.javascript.rhino.Node,1026>, <com.google.javascript.rhino.Node,1027>, <com.google.javascript.rhino.Node,1029>, <com.google.javascript.rhino.Node,1030>, <com.google.javascript.rhino.Node,1031>, <com.google.javascript.rhino.Node,1034>, <com.google.javascript.rhino.Node,1032>, <com.google.javascript.rhino.Node,1037>, <com.google.javascript.rhino.Node,1330>, <com.google.javascript.jscomp.VarCheck,145>, <com.google.javascript.jscomp.VarCheck,146>, <com.google.javascript.jscomp.VarCheck,147>, <com.google.javascript.jscomp.VarCheck,148>, <com.google.javascript.jscomp.VarCheck,170>, <com.google.javascript.jscomp.TypeCheck,514>, <com.google.javascript.jscomp.TypeCheck,518>, <com.google.javascript.jscomp.TypeCheck,519>, <com.google.javascript.jscomp.TypeCheck,1182>, <com.google.javascript.jscomp.TypeCheck,1184>, <com.google.javascript.jscomp.TypeCheck,1236>, <com.google.javascript.jscomp.TypeCheck,1237>, <com.google.javascript.jscomp.TypeCheck,1238>, <com.google.javascript.jscomp.TypeCheck,1239>, <com.google.javascript.jscomp.TypeCheck,1240>, <com.google.javascript.jscomp.TypeCheck,1387>, <com.google.javascript.jscomp.TypeCheck,1616>, <com.google.javascript.jscomp.TypeCheck,1695>, <com.google.javascript.rhino.ScriptOrFnNode,54>, <com.google.javascript.rhino.ScriptOrFnNode,60>, <com.google.javascript.rhino.ScriptOrFnNode,62>, <com.google.javascript.rhino.ScriptOrFnNode,69>, <com.google.javascript.rhino.ScriptOrFnNode,77>, <com.google.javascript.jscomp.NodeTraversal,525>, <com.google.javascript.jscomp.Scope,131>, <com.google.javascript.jscomp.MakeDeclaredNamesUnique,256>, <com.google.javascript.jscomp.FoldConstants,909>, <com.google.javascript.jscomp.FoldConstants,1418>, <com.google.javascript.jscomp.FoldConstants,1464>, <com.google.javascript.jscomp.MinimizeExitPoints,192>, <com.google.javascript.jscomp.CoalesceVariableNames,137>, <com.google.javascript.jscomp.ConvertToDottedProperties,48>, <com.google.javascript.jscomp.ConvertToDottedProperties,49>, <com.google.javascript.jscomp.ConvertToDottedProperties,50>, <com.google.javascript.jscomp.LiveVariablesAnalysis,214>, <com.google.javascript.jscomp.LiveVariablesAnalysis,215>, <com.google.javascript.jscomp.LiveVariablesAnalysis,216>, <com.google.javascript.jscomp.LiveVariablesAnalysis,217>, <com.google.javascript.jscomp.LiveVariablesAnalysis,218>, <com.google.javascript.jscomp.LiveVariablesAnalysis,222>, <com.google.javascript.jscomp.MemoizedScopeCreator,56>, <com.google.javascript.jscomp.TypeInference,416>, <com.google.javascript.jscomp.TypeInference,417>, <com.google.javascript.jscomp.TypeInference,920>, <com.google.javascript.jscomp.TypeInference,921>, <com.google.javascript.jscomp.TypeInference,923>, <com.google.javascript.jscomp.TypeInference,924>, <com.google.javascript.jscomp.TypeInference,925>, <com.google.javascript.jscomp.TypeInference,929>, <com.google.javascript.jscomp.TypeInference,977>, <com.google.javascript.jscomp.TypeInference,978>, <com.google.javascript.jscomp.TypeInference,979>, <com.google.javascript.jscomp.TypeInference,982>, <com.google.javascript.jscomp.TypeInference,985>, <com.google.javascript.jscomp.TypeInference,986>, <com.google.javascript.jscomp.TypeInference,991>, <com.google.javascript.jscomp.TypeInference,1199>, <com.google.javascript.jscomp.TypedScopeCreator,1283>, <com.google.javascript.rhino.Token,277>, <com.google.javascript.rhino.Token,308>, <com.google.javascript.rhino.Token,312>, <com.google.javascript.rhino.Token,313>, <com.google.javascript.rhino.Token,356>, <com.google.javascript.rhino.Token,359>, <com.google.javascript.rhino.Token,378>, <com.google.javascript.rhino.Token,391>, <com.google.javascript.rhino.Token,397>, <com.google.javascript.jscomp.TypeValidator,324>, <com.google.javascript.jscomp.TypeValidator,334>, <com.google.javascript.rhino.jstype.JSType,229>, <com.google.javascript.rhino.jstype.UnknownType,76>, <com.google.javascript.rhino.jstype.UnknownType,162>, <com.google.javascript.rhino.Node,897>, <com.google.javascript.rhino.Node,898>, <com.google.javascript.rhino.Node,903>, <com.google.javascript.rhino.Node,904>, <com.google.javascript.rhino.Node,909>, <com.google.javascript.rhino.Node,1933>, <com.google.javascript.jscomp.CheckGlobalNames,52>, <com.google.javascript.jscomp.CheckGlobalNames,36>, <com.google.javascript.jscomp.CheckGlobalNames,53>, <com.google.javascript.jscomp.CheckGlobalNames,54>, <com.google.javascript.jscomp.CheckGlobalNames,55>, <com.google.javascript.jscomp.CheckGlobalNames,62>, <com.google.javascript.jscomp.CheckGlobalNames,63>, <com.google.javascript.jscomp.CheckGlobalNames,69>, <com.google.javascript.jscomp.CheckGlobalNames,73>, <com.google.javascript.jscomp.CheckGlobalNames,74>, <com.google.javascript.jscomp.CheckGlobalNames,75>, <com.google.javascript.jscomp.CheckGlobalNames,76>, <com.google.javascript.jscomp.CheckGlobalNames,87>, <com.google.javascript.jscomp.CheckGlobalNames,103>, <com.google.javascript.jscomp.TypeCheck,484>, <com.google.javascript.jscomp.TypeCheck,485>, <com.google.javascript.jscomp.TypeCheck,537>, <com.google.javascript.jscomp.TypeCheck,538>, <com.google.javascript.jscomp.TypeCheck,539>, <com.google.javascript.jscomp.TypeCheck,790>, <com.google.javascript.jscomp.TypeCheck,800>]
======================com.google.javascript.jscomp.TypeValidator,212
UNKNOWN ASTNode type : catch (UnsupportedOperationException ex) {
  error(t,NEGATING_A_NON_NUMBER_ERROR,left);
}

UNKNOWN ASTNode type : catch (UnsupportedOperationException ex) {
  error(t,NEGATING_A_NON_NUMBER_ERROR,left);
}

UNKNOWN ASTNode type : catch (DataFlowAnalysis.MaxIterationsExceededException e) {
  compiler.report(JSError.make(t,n,DATAFLOW_ERROR));
}

UNKNOWN ASTNode type : catch (DataFlowAnalysis.MaxIterationsExceededException e) {
  compiler.report(JSError.make(t,n,DATAFLOW_ERROR));
}

UNKNOWN ASTNode type : catch (StackOverflowError ex) {
  String msg=ScriptRuntime.getMessage0("msg.too.deep.parser.recursion");
  throw Context.reportRuntimeError(msg,sourceURI,ts.getLineno(),null,0);
}

UNKNOWN ASTNode type : catch (StackOverflowError ex) {
  String msg=ScriptRuntime.getMessage0("msg.too.deep.parser.recursion");
  throw Context.reportRuntimeError(msg,sourceURI,ts.getLineno(),null,0);
}

========
if(!type.matchesNumberContext()&&!type.isSubtype(allValueTypes)){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (compile.tests)................................................ 
========
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
mismatch(t,n,msg,type,allValueTypes);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.canAssignTo(typeA)&&!typeA.canAssignTo(type)){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.canAssignTo(typeA)&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!typeA.canAssignTo(type)){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!castType.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
compiler.report(JSError.make(t,n,INVALID_CAST,typeA.toString(),type.toString()));
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.isSubtype(type)){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!t.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isGetProp(n)){
return false;
}
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(literals.booleanValues==BooleanLiteralSet.EMPTY&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!typeA.canTestForShallowEqualityWith(type)&&(type.autoboxesTo()==null||!type.autoboxesTo().isSubtype(typeA))){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!typeA.canTestForShallowEqualityWith(type)&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&(type.autoboxesTo()==null||!caseType.autoboxesTo().isSubtype(typeA))){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!switchType.matchesNumberContext()&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.autoboxesTo().matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
mismatch(t,n,msg,type,typeA);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type instanceof UnknownType&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
message="right side of comparison";
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
handleUnresolvedType(t);
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null||(type.isNamedType()&&type.isUnknownType())){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&(type.isNamedType()&&type.isUnknownType())){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.IF){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.IF&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&!type.isUnknownType()&&!type.isEmptyType()&&!type.isVoidType()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&!type.isUnknownType()&&!type.isEmptyType()&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.isVoidType()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&type instanceof FunctionType){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&type instanceof FunctionType){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
return ;
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.NOT&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((t.inGlobalScope())||(!t.inGlobalScope())){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!t.inGlobalScope()&&n.getJSDocInfo()!=null&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
tryFoldDo(t,n,n);
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
tryFoldDo(t,n,n);
return ;

mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
tryFoldWhile(t,n,n);
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
tryFoldWhile(t,n,n);
return ;

mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n.getType()==Token.OBJECTLIT)){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n.getType()==Token.OBJECTLIT)&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&(type.toObjectType()!=null&&type.toObjectType().getConstructor()!=null)){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getType()==Token.EXPR_RESULT&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
maybeDeclareQualifiedName(t,n.getJSDocInfo(),n,n,null);
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.LT||type==Token.GT){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.LT&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&type==Token.GT){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.AND||type==Token.OR){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.AND&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&type==Token.OR){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.BITOR||type==Token.BITAND){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.BITOR&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&type==Token.BITAND){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getLineno()!=-1&&n.getType()!=Token.EMPTY&&n.getType()!=Token.BREAK){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getLineno()!=-1&&n.getType()!=Token.EMPTY&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&n.getType()!=Token.BREAK){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
t.getCompiler().reportCodeChange();
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
t.getCompiler().reportCodeChange();
return ;

mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&type.getConstructor()!=null){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&type.getConstructor()!=null){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!typeA.isOrdinaryFunction()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!typeA.isOrdinaryFunction()&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rvalueType.matchesNumberContext()&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
prop.reads.add(n);
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
prop.writes.add(n);
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getType()==Token.ASSIGN&&n.getFirstChild()==n&&n.getNext().getType()==Token.FUNCTION){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getType()==Token.ASSIGN&&parent.getFirstChild()==n&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&n.getNext().getType()==Token.FUNCTION){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.LSH||type==Token.RSH||type==Token.URSH){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.LSH||type==Token.RSH&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&type==Token.URSH){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.SUB||type==Token.MUL||type==Token.DIV){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.SUB||type==Token.MUL&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&type==Token.DIV){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n.getType()==Token.CALL&&n.getFirstChild()==n)||n.getType()==Token.NEW){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n.getType()==Token.CALL&&parent.getFirstChild()==n)&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&n.getType()==Token.NEW){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getType()==Token.GETPROP&&n==n.getFirstChild()&&NodeUtil.isAssignmentOp(parent)){
return false;
}
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(typeA!=null&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.SCRIPT||type==Token.BLOCK){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.SCRIPT&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&type==Token.BLOCK){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.isPropertyTypeInferred(FOUND_REQUIRED)){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!EXTERN_OBJECT_PROPERTY_STRING.equals(n.getFirstChild().getQualifiedName())){
return ;
}
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.equals(typeA)){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.equals(typeA)){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!newType.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getFirstChild().getType()==Token.NAME&&n.getType()!=Token.CALL&&parent.getType()!=Token.ASSIGN&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type.getInstanceType()!=null){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&type.getInstanceType()!=null){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getType()==Token.ASSIGN){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getType()==Token.ASSIGN&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
n.detachFromParent();
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getFirstChild().getNext().getType()==Token.STRING&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
n.removeChild(n.getFirstChild().getNext());
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
compiler.reportCodeChange();
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
n.removeChild(n.getFirstChild().getNext());
compiler.reportCodeChange();

mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&n.getFirstChild().getFirstChild().getType()!=Token.ASSIGN){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getType()==Token.CALL&&n.getFirstChild()==n){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getType()==Token.CALL&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&n.getFirstChild()==n){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ObjectPropertyStringPreprocess.EXTERN_OBJECT_PROPERTY_STRING.equals(n.getFirstChild().getQualifiedName())){
return ;
}
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getType()!=Token.NAME||!n.getString().equals(ARGUMENT_ARRAY_ALIAS)&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.BLOCK||type==Token.SCRIPT){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.BLOCK&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&type==Token.SCRIPT){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getType()==Token.NAME&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getFirstNonEmptyChild(n).getType()==Token.FUNCTION||getFirstNonEmptyChild(n).getType()==Token.DO){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getFirstNonEmptyChild(n).getType()==Token.FUNCTION&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&getFirstNonEmptyChild(n).getType()==Token.DO){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
add(getFirstNonEmptyChild(n),Context.STATEMENT);
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
add(getFirstNonEmptyChild(n),Context.STATEMENT);
return ;

mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(((n.getType()==Token.IN))){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
add(")");
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&n.getChildCount()>=3){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getType()==Token.EXPR_RESULT&&n.getLastChild().getType()!=Token.ASSIGN){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&n.getLastChild().getType()!=Token.ASSIGN){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getFirstChild().getType()!=Token.GETPROP){
return ;
}
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getType()==Token.NAME&&n.getType()==Token.VAR){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&n.getType()==Token.VAR){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getType()==Token.VAR||n.getType()==Token.FUNCTION){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getType()==Token.VAR&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&n.getType()==Token.FUNCTION){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.getType()==Token.NAME);
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&!type.matchesStringContext()){
reportChange();
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.OR||type==Token.AND){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==n.getFirstChild()&&parent.getChildCount()==2&&n.getNext().getType()==Token.NAME&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.LT||type==Token.GT||type==Token.LE||type==Token.GE||type==Token.EQ||type==Token.NE||type==Token.SHEQ||type==Token.SHNE){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.LT||type==Token.GT||type==Token.LE||type==Token.GE||type==Token.EQ||type==Token.NE||type==Token.SHEQ&&!type.matchesStringContext()){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.matchesNumberContext()&&type==Token.SHNE){
mismatch(t,n,msg,type,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.TypeValidator,215
Find no block!
com.google.javascript.jscomp.TypeValidator,264
========
if(type.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
return false;
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
return false;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type.matchesObjectContext()){
return false;
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
return false;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
return false;
expectString(t,n,indexType,"property access");
}else {
return false;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type.matchesObjectContext()){
return false;
expectString(t,n,indexType,"property access");
}else {
return false;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(anyObjectType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",typeA,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(argType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(switchType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.autoboxesTo().matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (compile.tests)................................................ 
========
if(objType.matchesObjectContext()){
typeRegistry.reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
typeRegistry.reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(leftType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rightType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
message="right side of comparison";
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
checkForTypedef(t,n.getFirstChild(),n.getJSDocInfo());
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
checkForTypedef(t,n.getFirstChild(),n.getJSDocInfo());
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
updateAssignAllowedStack(n,false);
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(childType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(leftTypeRestricted.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ensureTyped(t,n,BOOLEAN_TYPE);
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.removeChild(n);
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
ensureTyped(t,n);
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
return ;
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
ensureTyped(t,n);
return ;

expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
ensureTyped(t,n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
ensureTyped(t,n);
return ;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(overridingType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
compiler.report(JSError.make(t,n,HIDDEN_PROPERTY_MISMATCH,FOUND_REQUIRED,typeA.toString(),typeA.toString(),objType.toString()));
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
compiler.report(JSError.make(t,n,HIDDEN_PROPERTY_MISMATCH,FOUND_REQUIRED,typeA.toString(),typeA.toString(),objType.toString()));
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
info.numOccurrences++;
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ensureTyped(t,n);
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
return ;
expectString(t,n,indexType,"property access");
}else {
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(castType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
compiler.report(JSError.make(t,n,INVALID_CAST,objType.toString(),typeA.toString()));
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
compiler.report(JSError.make(t,n,INVALID_CAST,objType.toString(),typeA.toString()));
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
return ;

expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
return ;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tryRemoveRepeatedStatements(t,n);
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
return ;
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
expectString(t,n,indexType,"property access");
}else {
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
return ;
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
return ;
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
return ;
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
return ;
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
return ;
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
n.addChildToBack(n);
return ;
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
t.getCompiler().reportCodeChange();
return ;
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
return ;
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
return ;
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
return ;
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
return ;
expectString(t,n,indexType,"property access");
}else {
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
return ;
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
return ;
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
return ;
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
return ;
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
return ;
expectString(t,n,indexType,"property access");
}else {
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
return ;
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
return ;
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
return ;
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
return ;
expectString(t,n,indexType,"property access");
}else {
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
return ;
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
return ;
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
return ;
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
return ;
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
return ;
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
return ;
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
n.addChildToBack(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
t.getCompiler().reportCodeChange();
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
return ;
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
n.addChildToBack(n);
return ;
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
n.addChildToBack(n);
return ;
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
n.addChildToBack(n);
return ;
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
n.addChildToBack(n);
return ;
expectString(t,n,indexType,"property access");
}else {
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
t.getCompiler().reportCodeChange();
return ;
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
t.getCompiler().reportCodeChange();
return ;
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
t.getCompiler().reportCodeChange();
return ;
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
t.getCompiler().reportCodeChange();
return ;
expectString(t,n,indexType,"property access");
}else {
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
return ;
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
return ;
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
return ;
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
return ;
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
return ;
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
return ;
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.removeChild(n);
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
n.addChildToBack(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
t.getCompiler().reportCodeChange();
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n);
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
return ;
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
return ;
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
return ;
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
return ;
expectString(t,n,indexType,"property access");
}else {
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
return ;
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
return ;
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
return ;
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
return ;
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
return ;
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
return ;
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
n.addChildToBack(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
t.getCompiler().reportCodeChange();
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.addChildToBack(n);
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
return ;
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
n.addChildToBack(n);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
return ;
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
return ;
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
return ;
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
return ;
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
return ;
expectString(t,n,indexType,"property access");
}else {
t.getCompiler().reportCodeChange();
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
n.addChildToBack(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
t.getCompiler().reportCodeChange();
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
t.getCompiler().reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
return ;
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
return ;
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
n.addChildToBack(n);
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
return ;
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
t.getCompiler().reportCodeChange();
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
return ;
expectString(t,n,indexType,"property access");
}else {
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
n.removeChild(n);
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
nameObj.type=type;
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getOrCreateName(FOUND_REQUIRED).addRef(new Ref(t,n,Ref.Type.SET_FROM_GLOBAL));
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getType()==Token.GETPROP&&n==n.getFirstChild()&&NodeUtil.isAssignmentOp(parent)){
return false;
}
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
t.getCompiler().reportCodeChange();
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
t.getCompiler().reportCodeChange();
if(objType.matchesObjectContext()){
return ;
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
t.getCompiler().reportCodeChange();
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
t.getCompiler().reportCodeChange();
if(objType.matchesObjectContext()){
return ;
expectString(t,n,indexType,"property access");
}else {
return ;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerTypeOfThis.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
typeRegistry.reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
typeRegistry.reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.detachChildren();
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(jsType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(currentClass.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Token.NAME==n.getFirstChild().getType()){
String n.getFirstChild().getString()=constructor.getString();
if(CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(className)){
break;
}
}else {
}
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thatType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rvalueType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isLiteralValue(n)||NodeUtil.getBooleanValue(cond)){
return ;
}
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(NodeUtil.isControlStructureCodeBlock(n,n.getFirstChild()));
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(NodeUtil.isFunction(t.getScopeRoot()));
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new ControlFlowAnalysis(compiler,false).process(null,t.getScopeRoot().getLastChild());
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(NodeUtil.isFunction(t.getScopeRoot()));
new ControlFlowAnalysis(compiler,false).process(null,t.getScopeRoot().getLastChild());
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.getType()==Token.ASSIGN);
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.mayHaveSideEffects(n)){
return ;
}
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.getType()==Token.ASSIGN);
if(NodeUtil.mayHaveSideEffects(n)){
return ;
}
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(newType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=addMarker((FunctionType)n.getJSType(),nodeToInsertAfter,null);
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(isName(n));
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isGetProp(n)){
return false;
}
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(varType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.setJSType(objType);
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
n.setJSType(objType);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n.setJSType(objType);
expectString(t,n,indexType,"property access");
}else {
n.setJSType(objType);
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==null){
continue;
}
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(constructorType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.setJSType(indexType);
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n=n;
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
n=n;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
n=n;
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n=n;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n=n;
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n=n;
expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n=n;
expectString(t,n,indexType,"property access");
}else {
n=n;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n=n;
expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
n=n;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
n=n;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
n=n;
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
n=n;
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
n=n;
expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
n=n;
expectString(t,n,indexType,"property access");
}else {
n=n;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
n=n;
expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
n=n;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
n=n;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
n=n;
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n=n;
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n=n;
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
n=n;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n=n;
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n=n;
expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
n=n;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n=n;
expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n=n;
expectString(t,n,indexType,"property access");
}else {
n=n;
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
n=n;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
n=n;
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
n=n;
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
n=n;
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
n=n;
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
n=n;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
n=n;
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
n=n;
expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
n=n;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
n=n;
expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
n=n;
expectString(t,n,indexType,"property access");
}else {
n=n;
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
n=n;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
n=n;
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
n=n;
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n=n;
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
n=n;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n=n;
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n=n;
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
n=n;
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
n=n;
expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
n=n;
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
compiler.reportCodeChange();
n=n;

expectString(t,n,indexType,"property access");
}else {
compiler.reportCodeChange();
n=n;
compiler.reportCodeChange();
n=n;

mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
new NodeTraversal(compiler,new GatherCandiates()).traverse(t.getScopeRoot().getLastChild());
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
return true;
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
return true;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n.getFirstChild().getNext());
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
key=n.getFirstChild().getNext().getNext();
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n.getFirstChild().getNext());
key=n.getFirstChild().getNext().getNext();
typeRegistry.reportCodeChange();

expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
n.removeChild(n.getFirstChild().getNext());
typeRegistry.reportCodeChange();
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(functionType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getJSType()==null&&n.getType()==Token.FUNCTION){
varType=parent.getJSType();
}
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(t.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.SCRIPT :

if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.restrictByNotNullOrUndefined().matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.matchesObjectContext()){
foundTemplateType=true;
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
foundTemplateType=true;
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getType()!=Token.NAME){
return false;
}
if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isArrayType()){
return false;
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type.isArrayType()){
return false;
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(anyObjectType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(argType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(switchType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.autoboxesTo().isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isArrayType()){
typeRegistry.reportCodeChange();
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rightType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(leftType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ensureTyped(t,n,BOOLEAN_TYPE);
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.IN :

if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(leftType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isArrayType()){
t.getCompiler().reportCodeChange();
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isArrayType()){
checkForTypedef(t,n.getFirstChild(),n.getJSDocInfo());
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GETPROP :

if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(childType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.POS :

if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.hasOneChild());
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(overridingType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isArrayType()){
compiler.report(JSError.make(t,n,HIDDEN_PROPERTY_MISMATCH,FOUND_REQUIRED,typeA.toString(),indexType.toString(),objType.toString()));
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(castType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isArrayType()){
compiler.report(JSError.make(t,n,INVALID_CAST,objType.toString(),indexType.toString()));
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type.isArrayType()){
compiler.report(JSError.make(t,n,INVALID_CAST,objType.toString(),indexType.toString()));
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getType()!=Token.CALL){
return ;
}
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.CATCH :

if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isArrayType()){
n.removeChild(n);
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isArrayType()){
n.addChildToBack(n);
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isArrayType()){
return ;
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isArrayType()){
n.removeChild(n);
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
return ;

expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tryRemoveRepeatedStatements(t,n);
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isArrayType()){
n.removeChild(n);
n.addChildToBack(n);
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isArrayType()){
n.removeChild(n);
t.getCompiler().reportCodeChange();
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isArrayType()){
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isArrayType()){
n.removeChild(n);
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(leftTypeRestricted.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
typeA=getJSType(n.getLastChild());
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.getType()==Token.DO);
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!NodeUtil.isLiteralValue(NodeUtil.getConditionExpression(n))||NodeUtil.getBooleanValue(cond)){
return ;
}
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(NodeUtil.isControlStructureCodeBlock(n,n.getFirstChild()));
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
t.getCompiler().reportCodeChange();
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (compile.tests)................................................ 
========
Preconditions.checkArgument(n.getType()==Token.DO);
Preconditions.checkState(NodeUtil.isControlStructureCodeBlock(n,n.getFirstChild()));
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (compile.tests)................................................ 
========
Preconditions.checkArgument(n.getType()==Token.DO);
t.getCompiler().reportCodeChange();
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (compile.tests)................................................ 
========
Preconditions.checkState(NodeUtil.isControlStructureCodeBlock(n,n.getFirstChild()));
t.getCompiler().reportCodeChange();
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (compile.tests)................................................ 
========
Preconditions.checkArgument(n.getType()==Token.DO);
Preconditions.checkState(NodeUtil.isControlStructureCodeBlock(n,n.getFirstChild()));
t.getCompiler().reportCodeChange();
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (compile.tests)................................................ 
========
n.removeChild(n);
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (compile.tests)................................................ 
========
n.removeChild(n);
t.getCompiler().reportCodeChange();
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (compile.tests)................................................ 
========
if(n.getType()==Token.GETPROP&&n==n.getFirstChild()&&NodeUtil.isAssignmentOp(parent)){
return false;
}
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isArrayType()){
compiler.reportCodeChange();
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(n.getString().isEmpty()){
return ;
}
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (compile.tests)................................................ 
========
checkPropertyAccess(indexType,n.getLastChild().getString(),t,n);
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ensureTyped(t,n);
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (compile.tests)................................................ 
========
if(n.getFirstChild().getString()!=null&&functionPrivateName.length()>0&&t.getScope().isDeclared(functionPrivateName,false)&&!(outerScope.getVar(functionPrivateName).getType() instanceof FunctionType)){
t.report(n,FUNCTION_MASKS_VARIABLE,functionPrivateName);
}
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isArrayType()){
ensureTyped(t,n,getFunctionType(n.getFirstChild()).getInstanceType());
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerTypeOfThis.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(jsType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(currentClass.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Token.NAME==n.getFirstChild().getType()){
String n.getFirstChild().getString()=constructor.getString();
if(CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains(className)){
break;
}
}else {
}
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.detachChildren();
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (compile.tests)................................................ 
========
if(rvalueType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isGetProp(n)){
return false;
}
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(isName(n));
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(varType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(NodeUtil.isFunction(t.getScopeRoot()));
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
new ControlFlowAnalysis(compiler,false).process(null,t.getScopeRoot().getLastChild());
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(NodeUtil.isFunction(t.getScopeRoot()));
new ControlFlowAnalysis(compiler,false).process(null,t.getScopeRoot().getLastChild());
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.getType()==Token.ASSIGN);
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.mayHaveSideEffects(n)){
return ;
}
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.getType()==Token.ASSIGN);
if(NodeUtil.mayHaveSideEffects(n)){
return ;
}
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.isArrayType()){
n.setJSType(indexType);
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
new NodeTraversal(compiler,new GatherCandiates()).traverse(t.getScopeRoot().getLastChild());
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(functionType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isArrayType()){
n.removeChild(n.getFirstChild().getNext());
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.isArrayType()){
key=n.getFirstChild().getNext().getNext();
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isArrayType()){
n.removeChild(n.getFirstChild().getNext());
key=n.getFirstChild().getNext().getNext();
typeRegistry.reportCodeChange();

expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isArrayType()){
n.removeChild(n.getFirstChild().getNext());
typeRegistry.reportCodeChange();
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isArrayType()){
return true;
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(newType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isArrayType()){
n=n.getFirstChild();
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.isArrayType()){
compiler.reportCodeChange();
n=n.getFirstChild();

expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.isArrayType()){
compiler.reportCodeChange();
n=n.getFirstChild();
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.isArrayType()){
compiler.reportCodeChange();
compiler.reportCodeChange();
n=n.getFirstChild();

expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.isArrayType()){
n=n.getFirstChild();
compiler.reportCodeChange();
n=n.getFirstChild();

expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isArrayType()){
compiler.reportCodeChange();
n=n.getFirstChild();
compiler.reportCodeChange();
n=n.getFirstChild();

expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
new LiveVariablesAnalysis(t.getControlFlowGraph(),t.getScope(),compiler).analyze();
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isArrayType()){
foundTemplateTypeOfThisParameter=true;
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isArrayType()){
n.removeChild(n.getFirstChild());
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(thatType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(constructorType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.setJSType(typeA);
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getJSType()==null&&n.getType()==Token.FUNCTION){
varType=parent.getJSType();
}
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isArrayType()){
getRhsSubexpressions(n).get(replacements.size()-1).detachFromParent();
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isArrayType()){
Lists.newArrayList().add(getRhsSubexpressions(n).get(replacements.size()-1));
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isArrayType()){
getRhsSubexpressions(n).get(replacements.size()-1).detachFromParent();
Lists.newArrayList().add(getRhsSubexpressions(n).get(replacements.size()-1));

expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getType()!=Token.NAME){
return false;
}
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.restrictByNotNullOrUndefined().isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isArrayType()){
foundTemplateType=true;
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
typeRegistry.clearTemplateTypeName();
if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(t.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.toObjectType()!=null&&n.getType()==Token.NEW){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.getType()==Token.GETPROP&&n==n.getFirstChild()&&NodeUtil.isAssignmentOp(parent)){
return false;
}
if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.THIS :

if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
updateAssignAllowedStack(n,false);
if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()==null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=Token.NEW){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()==Token.NEW){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isGetProp(n)){
return false;
}
if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=Token.RETURN){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.getType()!=Token.FUNCTION);
if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.getType()==Token.VAR&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.toObjectType()==null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.getFirstChild().getNext().getType()==Token.STRING&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.toObjectType()!=Token.STRING&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.getType()==Token.ASSIGN);
if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.mayHaveSideEffects(n)){
return ;
}
if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.getType()==Token.ASSIGN);
if(NodeUtil.mayHaveSideEffects(n)){
return ;
}
if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.getType()==Token.FUNCTION){
Preconditions.checkState(n.getProp(Node.FUNCTION_PROP)==null);
}
if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
normalizeBlocks(n);
if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
n.setJSType(indexType);
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.getType()==Token.EMPTY&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.toObjectType()!=Token.EMPTY&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.toObjectType()!=null&&n.getFirstChild().getType()!=Token.THIS){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=Token.THIS){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.toObjectType()!=Token.NAME&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(currentClass.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.toObjectType()!=null&&((FunctionType)objType).getParameters()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.getType()==Token.COMMA){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.getType()==Token.COMMA&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=n){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType!=null&&indexType!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.toObjectType()!=null&&indexType!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.setJSType(typeA);
if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!false){
return new NodeMismatch(this,n);
}
if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NEW :

if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FOUND_REQUIRED!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isUnknownType()){
return false;
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type.isUnknownType()){
return false;
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(argType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(anyObjectType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(switchType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.autoboxesTo().isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isUnknownType()){
typeRegistry.reportCodeChange();
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(leftType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rightType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isUnknownType()){
t.getCompiler().reportCodeChange();
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isUnknownType()){
checkForTypedef(t,n.getFirstChild(),n.getJSDocInfo());
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GETPROP :

if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(childType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.POS :

if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isUnknownType()){
n.removeChild(n);
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isUnknownType()){
n.addChildToBack(n);
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isUnknownType()){
return ;
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isUnknownType()){
n.removeChild(n);
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
return ;

expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isUnknownType()){
n.removeChild(n);
n.addChildToBack(n);
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isUnknownType()){
n.removeChild(n);
t.getCompiler().reportCodeChange();
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isUnknownType()){
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isUnknownType()){
n.removeChild(n);
n.addChildToBack(n);
t.getCompiler().reportCodeChange();
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.INC :

if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(overridingType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isUnknownType()){
compiler.report(JSError.make(t,n,HIDDEN_PROPERTY_MISMATCH,FOUND_REQUIRED,typeA.toString(),indexType.toString(),objType.toString()));
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.CATCH :

if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(castType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isUnknownType()){
compiler.report(JSError.make(t,n,INVALID_CAST,objType.toString(),indexType.toString()));
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type.isUnknownType()){
compiler.report(JSError.make(t,n,INVALID_CAST,objType.toString(),indexType.toString()));
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(varType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType!=null){
indexType=objType.findPropertyType(FOUND_REQUIRED);
}
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&n.getType()==Token.NEW){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.getType()==Token.GETPROP&&n==n.getFirstChild()&&NodeUtil.isAssignmentOp(parent)){
return false;
}
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.getType()==Token.DO);
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!NodeUtil.isLiteralValue(NodeUtil.getConditionExpression(n))||NodeUtil.getBooleanValue(cond)){
return ;
}
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(NodeUtil.isControlStructureCodeBlock(n,n.getFirstChild()));
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
t.getCompiler().reportCodeChange();
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.getType()==Token.DO);
Preconditions.checkState(NodeUtil.isControlStructureCodeBlock(n,n.getFirstChild()));
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.getType()==Token.DO);
t.getCompiler().reportCodeChange();
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(NodeUtil.isControlStructureCodeBlock(n,n.getFirstChild()));
t.getCompiler().reportCodeChange();
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.getType()==Token.DO);
Preconditions.checkState(NodeUtil.isControlStructureCodeBlock(n,n.getFirstChild()));
t.getCompiler().reportCodeChange();
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(leftTypeRestricted.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.SHEQ :

if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.LT :

if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
t.getCompiler().reportCodeChange();
if(objType.isUnknownType()){
return ;
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isUnknownType()){
compiler.reportCodeChange();
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.getType()!=Token.CALL){
return ;
}
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(typeRegistry.get(n.getFirstChild().getQualifiedName())==null){
return ;
}
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isName(n.getFirstChild())){
return ;
}
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
checkPropertyAccess(indexType,n.getLastChild().getString(),t,n);
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ensureTyped(t,n);
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isUnknownType()){
getBlockReturnExpression(n).detachFromParent();
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isUnknownType()){
getBlockReturnExpression(n).detachFromParent();
t.getCompiler().reportCodeChange();
return ;

expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isUnknownType()){
t.getCompiler().reportCodeChange();
return ;
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
updateAssignAllowedStack(n,false);
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(null==null){
reportBadBaseClassUse(t,n,"Could not find goog.inherits for base class");
return ;
}
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(n,NodeUtil.newQualifiedNameNode(String.format("%s.call",null.getQualifiedName()),callee,"goog.base"));
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(ownerTypeOfThis.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getType()!=Token.NAME){
return ;
}
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.getString().isEmpty()||compiler.getCodingConvention().isExported(name)){
return ;
}
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(t.getScope().getVar(n.getString())==null||!v.isGlobal()){
return ;
}
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isUnknownType()){
ensureTyped(t,n,getFunctionType(n.getFirstChild()).getInstanceType());
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.setJSType(typeA);
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isUnknownType()){
ensureTyped(t,n);
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isUnknownType()){
ensureTyped(t,n);
return ;

expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType instanceof FunctionType){
FunctionType (FunctionType)objType=(FunctionType)childType;
if(functionType.isConstructor()&&!functionType.isNativeObjectType()){
t.report(n,CONSTRUCTOR_NOT_CALLABLE,childType.toString());
}
visitParameterList(t,n,functionType);
ensureTyped(t,n,functionType.getReturnType());
}else {
ensureTyped(t,n);
}
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(childType.isUnknownType()){
return ;
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isGetProp(n)){
return false;
}
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getNext().getType()!=Token.STRING){
compiler.report(JSError.make(t,secondArgument,STRING_LITERAL_EXPECTED_ERROR,Token.name(secondArgument.getType())));
return ;
}
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(n,NodeUtil.newQualifiedNameNode(compiler.getCodingConvention().getGlobalObject(),n.getLineno(),firstArgument.getCharno()));
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(n.getNext(),NodeUtil.newQualifiedNameNode(n.getQualifiedName()+".",n.getNext().getLineno(),secondArgument.getCharno()));
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(jsType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GT :

if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isUnknownType()){
foundTemplateTypeOfThisParameter=true;
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(constructorType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rvalueType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(isName(n));
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(indexType instanceof UnionType){
return false;
}
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(indexType instanceof RecordType){
return RecordType.isSubtype(this,(RecordType)that);
}
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()==null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&n.getParent().getType()==Token.EXPR_RESULT){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=Token.EXPR_RESULT){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isUnknownType()){
n.setJSType(indexType);
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.isUnknownType()){
n.setJSType(indexType);
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()==null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.isUnknownType()){
n.setJSType(indexType);
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&n.getParent().getType()==Token.EXPR_RESULT){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
swtich (n.getType()){
case Token.DO :

case Token.TRY :

case Token.CATCH :

case Token.FINALLY :
return ;

}
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(n);
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
NodeUtil.removeChild(n,n);
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
NodeUtil.redeclareVarsInsideBranch(n);
NodeUtil.removeChild(n,n);
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
compiler.reportCodeChange();
NodeUtil.removeChild(n,n);
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
NodeUtil.removeChild(n,n);
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n=addMarker((FunctionType)n.getJSType(),nodeToInsertAfter,null);
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isUnknownType()){
n.removeChild(n.getFirstChild().getNext());
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isUnknownType()){
key=n.getFirstChild().getNext().getNext();
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isUnknownType()){
n.removeChild(n.getFirstChild().getNext());
key=n.getFirstChild().getNext().getNext();
typeRegistry.reportCodeChange();

expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isUnknownType()){
n.removeChild(n.getFirstChild().getNext());
typeRegistry.reportCodeChange();
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isUnknownType()){
return true;
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(newType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.CALL :

if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(functionType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(indexType==null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
default :

if(objType.isUnknownType()){
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isUnknownType()){
n=n.getFirstChild();
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(objType.isUnknownType()){
compiler.reportCodeChange();
n=n.getFirstChild();

expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isUnknownType()){
compiler.reportCodeChange();
n=n.getFirstChild();
expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isUnknownType()){
compiler.reportCodeChange();
compiler.reportCodeChange();
n=n.getFirstChild();

expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isUnknownType()){
n=n.getFirstChild();
compiler.reportCodeChange();
n=n.getFirstChild();

expectStringOrNumber(t,n,indexType,"property access");
}else if(objType.toObjectType()!=null&&objType.toObjectType().getIndexType()!=null){
expectCanAssignTo(t,n,indexType,objType.toObjectType().getIndexType(),"restricted index type");
}else if(objType.isArrayType()){
expectNumber(t,n,indexType,"array access");
}else if(objType.matchesObjectContext()){
expectString(t,n,indexType,"property access");
}else {
mismatch(t,n,"only arrays or objects can be accessed",objType,typeRegistry.createUnionType(ARRAY_TYPE,OBJECT_TYPE));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COUNT THESE===> Subject [_name=closure, _id=102, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CompilerRunnerTest testIssue115
TESTING : com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/closure/closure_102_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
  - com.google.javascript.jscomp.CompilerRunnerTest::testIssue115
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Timeout!
